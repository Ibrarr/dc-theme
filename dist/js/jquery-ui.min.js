/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (function() { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./assets/js/jquery-ui.min.js":
/*!************************************!*\
  !*** ./assets/js/jquery-ui.min.js ***!
  \************************************/
/***/ (function(module, exports) {

eval("var __WEBPACK_AMD_DEFINE_FACTORY__, __WEBPACK_AMD_DEFINE_ARRAY__, __WEBPACK_AMD_DEFINE_RESULT__;function _typeof(o) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && \"function\" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? \"symbol\" : typeof o; }, _typeof(o); }\n/*! jQuery UI - v1.14.1 - 2024-10-30\n* https://jqueryui.com\n* Includes: widget.js, position.js, data.js, disable-selection.js, effect.js, effects/effect-blind.js, effects/effect-bounce.js, effects/effect-clip.js, effects/effect-drop.js, effects/effect-explode.js, effects/effect-fade.js, effects/effect-fold.js, effects/effect-highlight.js, effects/effect-puff.js, effects/effect-pulsate.js, effects/effect-scale.js, effects/effect-shake.js, effects/effect-size.js, effects/effect-slide.js, effects/effect-transfer.js, focusable.js, form-reset-mixin.js, jquery-patch.js, keycode.js, labels.js, scroll-parent.js, tabbable.js, unique-id.js, widgets/accordion.js, widgets/autocomplete.js, widgets/button.js, widgets/checkboxradio.js, widgets/controlgroup.js, widgets/datepicker.js, widgets/dialog.js, widgets/draggable.js, widgets/droppable.js, widgets/menu.js, widgets/mouse.js, widgets/progressbar.js, widgets/resizable.js, widgets/selectable.js, widgets/selectmenu.js, widgets/slider.js, widgets/sortable.js, widgets/spinner.js, widgets/tabs.js, widgets/tooltip.js\n* Copyright OpenJS Foundation and other contributors; Licensed MIT */\n\n(function (t) {\n   true ? !(__WEBPACK_AMD_DEFINE_ARRAY__ = [Object(function webpackMissingModule() { var e = new Error(\"Cannot find module 'jquery'\"); e.code = 'MODULE_NOT_FOUND'; throw e; }())], __WEBPACK_AMD_DEFINE_FACTORY__ = (t),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ = (typeof __WEBPACK_AMD_DEFINE_FACTORY__ === 'function' ?\n\t\t(__WEBPACK_AMD_DEFINE_FACTORY__.apply(exports, __WEBPACK_AMD_DEFINE_ARRAY__)) : __WEBPACK_AMD_DEFINE_FACTORY__),\n\t\t__WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__)) : 0;\n})(function (V) {\n  V.ui = V.ui || {};\n  V.ui.version = \"1.14.1\";\n  var n,\n    s,\n    x,\n    k,\n    o,\n    a,\n    r,\n    l,\n    h,\n    i,\n    E = 0,\n    N = Array.prototype.hasOwnProperty,\n    c = Array.prototype.slice;\n  V.cleanData = (n = V.cleanData, function (t) {\n    for (var e, i, s = 0; null != (i = t[s]); s++) (e = V._data(i, \"events\")) && e.remove && V(i).triggerHandler(\"remove\");\n    n(t);\n  }), V.widget = function (t, i, e) {\n    var s,\n      n,\n      o,\n      a,\n      r = {},\n      l = t.split(\".\")[0];\n    return \"__proto__\" === (t = t.split(\".\")[1]) || \"constructor\" === t ? V.error(\"Invalid widget name: \" + t) : (a = l + \"-\" + t, e || (e = i, i = V.Widget), Array.isArray(e) && (e = V.extend.apply(null, [{}].concat(e))), V.expr.pseudos[a.toLowerCase()] = function (t) {\n      return !!V.data(t, a);\n    }, V[l] = V[l] || {}, s = V[l][t], n = V[l][t] = function (t, e) {\n      if (!this || !this._createWidget) return new n(t, e);\n      arguments.length && this._createWidget(t, e);\n    }, V.extend(n, s, {\n      version: e.version,\n      _proto: V.extend({}, e),\n      _childConstructors: []\n    }), (o = new i()).options = V.widget.extend({}, o.options), V.each(e, function (e, s) {\n      function n() {\n        return i.prototype[e].apply(this, arguments);\n      }\n      function o(t) {\n        return i.prototype[e].apply(this, t);\n      }\n      r[e] = \"function\" != typeof s ? s : function () {\n        var t,\n          e = this._super,\n          i = this._superApply;\n        return this._super = n, this._superApply = o, t = s.apply(this, arguments), this._super = e, this._superApply = i, t;\n      };\n    }), n.prototype = V.widget.extend(o, {\n      widgetEventPrefix: s && o.widgetEventPrefix || t\n    }, r, {\n      constructor: n,\n      namespace: l,\n      widgetName: t,\n      widgetFullName: a\n    }), s ? (V.each(s._childConstructors, function (t, e) {\n      var i = e.prototype;\n      V.widget(i.namespace + \".\" + i.widgetName, n, e._proto);\n    }), delete s._childConstructors) : i._childConstructors.push(n), V.widget.bridge(t, n), n);\n  }, V.widget.extend = function (t) {\n    for (var e, i, s = c.call(arguments, 1), n = 0, o = s.length; n < o; n++) for (e in s[n]) i = s[n][e], N.call(s[n], e) && void 0 !== i && (V.isPlainObject(i) ? t[e] = V.isPlainObject(t[e]) ? V.widget.extend({}, t[e], i) : V.widget.extend({}, i) : t[e] = i);\n    return t;\n  }, V.widget.bridge = function (o, e) {\n    var a = e.prototype.widgetFullName || o;\n    V.fn[o] = function (i) {\n      var t = \"string\" == typeof i,\n        s = c.call(arguments, 1),\n        n = this;\n      return t ? this.length || \"instance\" !== i ? this.each(function () {\n        var t,\n          e = V.data(this, a);\n        return \"instance\" === i ? (n = e, !1) : e ? \"function\" != typeof e[i] || \"_\" === i.charAt(0) ? V.error(\"no such method '\" + i + \"' for \" + o + \" widget instance\") : (t = e[i].apply(e, s)) !== e && void 0 !== t ? (n = t && t.jquery ? n.pushStack(t.get()) : t, !1) : void 0 : V.error(\"cannot call methods on \" + o + \" prior to initialization; attempted to call method '\" + i + \"'\");\n      }) : n = void 0 : (s.length && (i = V.widget.extend.apply(null, [i].concat(s))), this.each(function () {\n        var t = V.data(this, a);\n        t ? (t.option(i || {}), t._init && t._init()) : V.data(this, a, new e(i, this));\n      })), n;\n    };\n  }, V.Widget = function () {}, V.Widget._childConstructors = [], V.Widget.prototype = {\n    widgetName: \"widget\",\n    widgetEventPrefix: \"\",\n    defaultElement: \"<div>\",\n    options: {\n      classes: {},\n      disabled: !1,\n      create: null\n    },\n    _createWidget: function _createWidget(t, e) {\n      e = V(e || this.defaultElement || this)[0], this.element = V(e), this.uuid = E++, this.eventNamespace = \".\" + this.widgetName + this.uuid, this.bindings = V(), this.hoverable = V(), this.focusable = V(), this.classesElementLookup = {}, e !== this && (V.data(e, this.widgetFullName, this), this._on(!0, this.element, {\n        remove: function remove(t) {\n          t.target === e && this.destroy();\n        }\n      }), this.document = V(e.style ? e.ownerDocument : e.document || e), this.window = V(this.document[0].defaultView || this.document[0].parentWindow)), this.options = V.widget.extend({}, this.options, this._getCreateOptions(), t), this._create(), this.options.disabled && this._setOptionDisabled(this.options.disabled), this._trigger(\"create\", null, this._getCreateEventData()), this._init();\n    },\n    _getCreateOptions: function _getCreateOptions() {\n      return {};\n    },\n    _getCreateEventData: V.noop,\n    _create: V.noop,\n    _init: V.noop,\n    destroy: function destroy() {\n      var i = this;\n      this._destroy(), V.each(this.classesElementLookup, function (t, e) {\n        i._removeClass(e, t);\n      }), this.element.off(this.eventNamespace).removeData(this.widgetFullName), this.widget().off(this.eventNamespace).removeAttr(\"aria-disabled\"), this.bindings.off(this.eventNamespace);\n    },\n    _destroy: V.noop,\n    widget: function widget() {\n      return this.element;\n    },\n    option: function option(t, e) {\n      var i,\n        s,\n        n,\n        o = t;\n      if (0 === arguments.length) return V.widget.extend({}, this.options);\n      if (\"string\" == typeof t) if (o = {}, t = (i = t.split(\".\")).shift(), i.length) {\n        for (s = o[t] = V.widget.extend({}, this.options[t]), n = 0; n < i.length - 1; n++) s[i[n]] = s[i[n]] || {}, s = s[i[n]];\n        if (t = i.pop(), 1 === arguments.length) return void 0 === s[t] ? null : s[t];\n        s[t] = e;\n      } else {\n        if (1 === arguments.length) return void 0 === this.options[t] ? null : this.options[t];\n        o[t] = e;\n      }\n      return this._setOptions(o), this;\n    },\n    _setOptions: function _setOptions(t) {\n      for (var e in t) this._setOption(e, t[e]);\n      return this;\n    },\n    _setOption: function _setOption(t, e) {\n      return \"classes\" === t && this._setOptionClasses(e), this.options[t] = e, \"disabled\" === t && this._setOptionDisabled(e), this;\n    },\n    _setOptionClasses: function _setOptionClasses(t) {\n      var e, i, s;\n      for (e in t) s = this.classesElementLookup[e], t[e] !== this.options.classes[e] && s && s.length && (i = V(s.get()), this._removeClass(s, e), i.addClass(this._classes({\n        element: i,\n        keys: e,\n        classes: t,\n        add: !0\n      })));\n    },\n    _setOptionDisabled: function _setOptionDisabled(t) {\n      this._toggleClass(this.widget(), this.widgetFullName + \"-disabled\", null, !!t), t && (this._removeClass(this.hoverable, null, \"ui-state-hover\"), this._removeClass(this.focusable, null, \"ui-state-focus\"));\n    },\n    enable: function enable() {\n      return this._setOptions({\n        disabled: !1\n      });\n    },\n    disable: function disable() {\n      return this._setOptions({\n        disabled: !0\n      });\n    },\n    _classes: function _classes(n) {\n      var o = [],\n        a = this;\n      function t(t, e) {\n        for (var i, s = 0; s < t.length; s++) i = a.classesElementLookup[t[s]] || V(), i = n.add ? (function () {\n          var i = [];\n          n.element.each(function (t, e) {\n            V.map(a.classesElementLookup, function (t) {\n              return t;\n            }).some(function (t) {\n              return t.is(e);\n            }) || i.push(e);\n          }), a._on(V(i), {\n            remove: \"_untrackClassesElement\"\n          });\n        }(), V(V.uniqueSort(i.get().concat(n.element.get())))) : V(i.not(n.element).get()), a.classesElementLookup[t[s]] = i, o.push(t[s]), e && n.classes[t[s]] && o.push(n.classes[t[s]]);\n      }\n      return (n = V.extend({\n        element: this.element,\n        classes: this.options.classes || {}\n      }, n)).keys && t(n.keys.match(/\\S+/g) || [], !0), n.extra && t(n.extra.match(/\\S+/g) || []), o.join(\" \");\n    },\n    _untrackClassesElement: function _untrackClassesElement(i) {\n      var s = this;\n      V.each(s.classesElementLookup, function (t, e) {\n        -1 !== V.inArray(i.target, e) && (s.classesElementLookup[t] = V(e.not(i.target).get()));\n      }), this._off(V(i.target));\n    },\n    _removeClass: function _removeClass(t, e, i) {\n      return this._toggleClass(t, e, i, !1);\n    },\n    _addClass: function _addClass(t, e, i) {\n      return this._toggleClass(t, e, i, !0);\n    },\n    _toggleClass: function _toggleClass(t, e, i, s) {\n      var n = \"string\" == typeof t || null === t,\n        e = {\n          extra: n ? e : i,\n          keys: n ? t : e,\n          element: n ? this.element : t,\n          add: s = \"boolean\" == typeof s ? s : i\n        };\n      return e.element.toggleClass(this._classes(e), s), this;\n    },\n    _on: function _on(n, o, t) {\n      var a,\n        r = this;\n      \"boolean\" != typeof n && (t = o, o = n, n = !1), t ? (o = a = V(o), this.bindings = this.bindings.add(o)) : (t = o, o = this.element, a = this.widget()), V.each(t, function (t, e) {\n        function i() {\n          if (n || !0 !== r.options.disabled && !V(this).hasClass(\"ui-state-disabled\")) return (\"string\" == typeof e ? r[e] : e).apply(r, arguments);\n        }\n        \"string\" != typeof e && (i.guid = e.guid = e.guid || i.guid || V.guid++);\n        var t = t.match(/^([\\w:-]*)\\s*(.*)$/),\n          s = t[1] + r.eventNamespace,\n          t = t[2];\n        t ? a.on(s, t, i) : o.on(s, i);\n      });\n    },\n    _off: function _off(t, e) {\n      e = (e || \"\").split(\" \").join(this.eventNamespace + \" \") + this.eventNamespace, t.off(e), this.bindings = V(this.bindings.not(t).get()), this.focusable = V(this.focusable.not(t).get()), this.hoverable = V(this.hoverable.not(t).get());\n    },\n    _delay: function _delay(t, e) {\n      var i = this;\n      return setTimeout(function () {\n        return (\"string\" == typeof t ? i[t] : t).apply(i, arguments);\n      }, e || 0);\n    },\n    _hoverable: function _hoverable(t) {\n      this.hoverable = this.hoverable.add(t), this._on(t, {\n        mouseenter: function mouseenter(t) {\n          this._addClass(V(t.currentTarget), null, \"ui-state-hover\");\n        },\n        mouseleave: function mouseleave(t) {\n          this._removeClass(V(t.currentTarget), null, \"ui-state-hover\");\n        }\n      });\n    },\n    _focusable: function _focusable(t) {\n      this.focusable = this.focusable.add(t), this._on(t, {\n        focusin: function focusin(t) {\n          this._addClass(V(t.currentTarget), null, \"ui-state-focus\");\n        },\n        focusout: function focusout(t) {\n          this._removeClass(V(t.currentTarget), null, \"ui-state-focus\");\n        }\n      });\n    },\n    _trigger: function _trigger(t, e, i) {\n      var s,\n        n,\n        o = this.options[t];\n      if (i = i || {}, (e = V.Event(e)).type = (t === this.widgetEventPrefix ? t : this.widgetEventPrefix + t).toLowerCase(), e.target = this.element[0], n = e.originalEvent) for (s in n) s in e || (e[s] = n[s]);\n      return this.element.trigger(e, i), !(\"function\" == typeof o && !1 === o.apply(this.element[0], [e].concat(i)) || e.isDefaultPrevented());\n    }\n  }, V.each({\n    show: \"fadeIn\",\n    hide: \"fadeOut\"\n  }, function (o, a) {\n    V.Widget.prototype[\"_\" + o] = function (e, t, i) {\n      var s,\n        n = (t = \"string\" == typeof t ? {\n          effect: t\n        } : t) ? !0 !== t && \"number\" != typeof t && t.effect || a : o;\n      \"number\" == typeof (t = t || {}) ? t = {\n        duration: t\n      } : !0 === t && (t = {}), s = !V.isEmptyObject(t), t.complete = i, t.delay && e.delay(t.delay), s && V.effects && V.effects.effect[n] ? e[o](t) : n !== o && e[n] ? e[n](t.duration, t.easing, i) : e.queue(function (t) {\n        V(this)[o](), i && i.call(e[0]), t();\n      });\n    };\n  }), V.widget;\n  function C(t, e, i) {\n    return [parseFloat(t[0]) * (h.test(t[0]) ? e / 100 : 1), parseFloat(t[1]) * (h.test(t[1]) ? i / 100 : 1)];\n  }\n  function D(t, e) {\n    return parseInt(V.css(t, e), 10) || 0;\n  }\n  function I(t) {\n    return null != t && t === t.window;\n  }\n  x = Math.max, k = Math.abs, o = /left|center|right/, a = /top|center|bottom/, r = /[\\+\\-]\\d+(\\.[\\d]+)?%?/, l = /^\\w+/, h = /%$/, i = V.fn.position, V.position = {\n    scrollbarWidth: function scrollbarWidth() {\n      var t, e, i;\n      return void 0 !== s ? s : (i = (e = V(\"<div style='display:block;position:absolute;width:200px;height:200px;overflow:hidden;'><div style='height:300px;width:auto;'></div></div>\")).children()[0], V(\"body\").append(e), t = i.offsetWidth, e.css(\"overflow\", \"scroll\"), t === (i = i.offsetWidth) && (i = e[0].clientWidth), e.remove(), s = t - i);\n    },\n    getScrollInfo: function getScrollInfo(t) {\n      var e = t.isWindow || t.isDocument ? \"\" : t.element.css(\"overflow-x\"),\n        i = t.isWindow || t.isDocument ? \"\" : t.element.css(\"overflow-y\"),\n        e = \"scroll\" === e || \"auto\" === e && t.width < t.element[0].scrollWidth;\n      return {\n        width: \"scroll\" === i || \"auto\" === i && t.height < t.element[0].scrollHeight ? V.position.scrollbarWidth() : 0,\n        height: e ? V.position.scrollbarWidth() : 0\n      };\n    },\n    getWithinInfo: function getWithinInfo(t) {\n      var e = V(t || window),\n        i = I(e[0]),\n        s = !!e[0] && 9 === e[0].nodeType;\n      return {\n        element: e,\n        isWindow: i,\n        isDocument: s,\n        offset: !i && !s ? V(t).offset() : {\n          left: 0,\n          top: 0\n        },\n        scrollLeft: e.scrollLeft(),\n        scrollTop: e.scrollTop(),\n        width: e.outerWidth(),\n        height: e.outerHeight()\n      };\n    }\n  }, V.fn.position = function (u) {\n    var d, p, f, g, m, _, v, b, y, w, t, e;\n    return u && u.of ? (_ = \"string\" == typeof (u = V.extend({}, u)).of ? V(document).find(u.of) : V(u.of), v = V.position.getWithinInfo(u.within), b = V.position.getScrollInfo(v), y = (u.collision || \"flip\").split(\" \"), w = {}, e = 9 === (e = (t = _)[0]).nodeType ? {\n      width: t.width(),\n      height: t.height(),\n      offset: {\n        top: 0,\n        left: 0\n      }\n    } : I(e) ? {\n      width: t.width(),\n      height: t.height(),\n      offset: {\n        top: t.scrollTop(),\n        left: t.scrollLeft()\n      }\n    } : e.preventDefault ? {\n      width: 0,\n      height: 0,\n      offset: {\n        top: e.pageY,\n        left: e.pageX\n      }\n    } : {\n      width: t.outerWidth(),\n      height: t.outerHeight(),\n      offset: t.offset()\n    }, _[0].preventDefault && (u.at = \"left top\"), p = e.width, f = e.height, m = V.extend({}, g = e.offset), V.each([\"my\", \"at\"], function () {\n      var t,\n        e,\n        i = (u[this] || \"\").split(\" \");\n      (i = 1 === i.length ? o.test(i[0]) ? i.concat([\"center\"]) : a.test(i[0]) ? [\"center\"].concat(i) : [\"center\", \"center\"] : i)[0] = o.test(i[0]) ? i[0] : \"center\", i[1] = a.test(i[1]) ? i[1] : \"center\", t = r.exec(i[0]), e = r.exec(i[1]), w[this] = [t ? t[0] : 0, e ? e[0] : 0], u[this] = [l.exec(i[0])[0], l.exec(i[1])[0]];\n    }), 1 === y.length && (y[1] = y[0]), \"right\" === u.at[0] ? m.left += p : \"center\" === u.at[0] && (m.left += p / 2), \"bottom\" === u.at[1] ? m.top += f : \"center\" === u.at[1] && (m.top += f / 2), d = C(w.at, p, f), m.left += d[0], m.top += d[1], this.each(function () {\n      var i,\n        t,\n        a = V(this),\n        r = a.outerWidth(),\n        l = a.outerHeight(),\n        e = D(this, \"marginLeft\"),\n        s = D(this, \"marginTop\"),\n        n = r + e + D(this, \"marginRight\") + b.width,\n        o = l + s + D(this, \"marginBottom\") + b.height,\n        h = V.extend({}, m),\n        c = C(w.my, a.outerWidth(), a.outerHeight());\n      \"right\" === u.my[0] ? h.left -= r : \"center\" === u.my[0] && (h.left -= r / 2), \"bottom\" === u.my[1] ? h.top -= l : \"center\" === u.my[1] && (h.top -= l / 2), h.left += c[0], h.top += c[1], i = {\n        marginLeft: e,\n        marginTop: s\n      }, V.each([\"left\", \"top\"], function (t, e) {\n        V.ui.position[y[t]] && V.ui.position[y[t]][e](h, {\n          targetWidth: p,\n          targetHeight: f,\n          elemWidth: r,\n          elemHeight: l,\n          collisionPosition: i,\n          collisionWidth: n,\n          collisionHeight: o,\n          offset: [d[0] + c[0], d[1] + c[1]],\n          my: u.my,\n          at: u.at,\n          within: v,\n          elem: a\n        });\n      }), u.using && (t = function t(_t) {\n        var e = g.left - h.left,\n          i = e + p - r,\n          s = g.top - h.top,\n          n = s + f - l,\n          o = {\n            target: {\n              element: _,\n              left: g.left,\n              top: g.top,\n              width: p,\n              height: f\n            },\n            element: {\n              element: a,\n              left: h.left,\n              top: h.top,\n              width: r,\n              height: l\n            },\n            horizontal: i < 0 ? \"left\" : 0 < e ? \"right\" : \"center\",\n            vertical: n < 0 ? \"top\" : 0 < s ? \"bottom\" : \"middle\"\n          };\n        p < r && k(e + i) < p && (o.horizontal = \"center\"), f < l && k(s + n) < f && (o.vertical = \"middle\"), x(k(e), k(i)) > x(k(s), k(n)) ? o.important = \"horizontal\" : o.important = \"vertical\", u.using.call(this, _t, o);\n      }), a.offset(V.extend(h, {\n        using: t\n      }));\n    })) : i.apply(this, arguments);\n  }, V.ui.position = {\n    fit: {\n      left: function left(t, e) {\n        var i,\n          s = e.within,\n          n = s.isWindow ? s.scrollLeft : s.offset.left,\n          s = s.width,\n          o = t.left - e.collisionPosition.marginLeft,\n          a = n - o,\n          r = o + e.collisionWidth - s - n;\n        s < e.collisionWidth ? 0 < a && r <= 0 ? (i = t.left + a + e.collisionWidth - s - n, t.left += a - i) : t.left = !(0 < r && a <= 0) && r < a ? n + s - e.collisionWidth : n : 0 < a ? t.left += a : 0 < r ? t.left -= r : t.left = x(t.left - o, t.left);\n      },\n      top: function top(t, e) {\n        var i,\n          s = e.within,\n          s = s.isWindow ? s.scrollTop : s.offset.top,\n          n = e.within.height,\n          o = t.top - e.collisionPosition.marginTop,\n          a = s - o,\n          r = o + e.collisionHeight - n - s;\n        n < e.collisionHeight ? 0 < a && r <= 0 ? (i = t.top + a + e.collisionHeight - n - s, t.top += a - i) : t.top = !(0 < r && a <= 0) && r < a ? s + n - e.collisionHeight : s : 0 < a ? t.top += a : 0 < r ? t.top -= r : t.top = x(t.top - o, t.top);\n      }\n    },\n    flip: {\n      left: function left(t, e) {\n        var i = e.within,\n          s = i.offset.left + i.scrollLeft,\n          n = i.width,\n          i = i.isWindow ? i.scrollLeft : i.offset.left,\n          o = t.left - e.collisionPosition.marginLeft,\n          a = o - i,\n          o = o + e.collisionWidth - n - i,\n          r = \"left\" === e.my[0] ? -e.elemWidth : \"right\" === e.my[0] ? e.elemWidth : 0,\n          l = \"left\" === e.at[0] ? e.targetWidth : \"right\" === e.at[0] ? -e.targetWidth : 0,\n          h = -2 * e.offset[0];\n        a < 0 ? ((n = t.left + r + l + h + e.collisionWidth - n - s) < 0 || n < k(a)) && (t.left += r + l + h) : 0 < o && (0 < (s = t.left - e.collisionPosition.marginLeft + r + l + h - i) || k(s) < o) && (t.left += r + l + h);\n      },\n      top: function top(t, e) {\n        var i = e.within,\n          s = i.offset.top + i.scrollTop,\n          n = i.height,\n          i = i.isWindow ? i.scrollTop : i.offset.top,\n          o = t.top - e.collisionPosition.marginTop,\n          a = o - i,\n          o = o + e.collisionHeight - n - i,\n          r = \"top\" === e.my[1] ? -e.elemHeight : \"bottom\" === e.my[1] ? e.elemHeight : 0,\n          l = \"top\" === e.at[1] ? e.targetHeight : \"bottom\" === e.at[1] ? -e.targetHeight : 0,\n          h = -2 * e.offset[1];\n        a < 0 ? ((n = t.top + r + l + h + e.collisionHeight - n - s) < 0 || n < k(a)) && (t.top += r + l + h) : 0 < o && (0 < (s = t.top - e.collisionPosition.marginTop + r + l + h - i) || k(s) < o) && (t.top += r + l + h);\n      }\n    },\n    flipfit: {\n      left: function left() {\n        V.ui.position.flip.left.apply(this, arguments), V.ui.position.fit.left.apply(this, arguments);\n      },\n      top: function top() {\n        V.ui.position.flip.top.apply(this, arguments), V.ui.position.fit.top.apply(this, arguments);\n      }\n    }\n  };\n  V.ui.position, V.extend(V.expr.pseudos, {\n    data: V.expr.createPseudo(function (e) {\n      return function (t) {\n        return !!V.data(t, e);\n      };\n    })\n  }), V.fn.extend({\n    disableSelection: (t = \"onselectstart\" in document.createElement(\"div\") ? \"selectstart\" : \"mousedown\", function () {\n      return this.on(t + \".ui-disableSelection\", function (t) {\n        t.preventDefault();\n      });\n    }),\n    enableSelection: function enableSelection() {\n      return this.off(\".ui-disableSelection\");\n    }\n  });\n  var t,\n    u = V,\n    d = {},\n    W = d.toString,\n    F = /^([\\-+])=\\s*(\\d+\\.?\\d*)/,\n    L = [{\n      re: /rgba?\\(\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*,\\s*(\\d{1,3})\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n      parse: function parse(t) {\n        return [t[1], t[2], t[3], t[4]];\n      }\n    }, {\n      re: /rgba?\\(\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n      parse: function parse(t) {\n        return [2.55 * t[1], 2.55 * t[2], 2.55 * t[3], t[4]];\n      }\n    }, {\n      re: /#([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})([a-f0-9]{2})?/,\n      parse: function parse(t) {\n        return [parseInt(t[1], 16), parseInt(t[2], 16), parseInt(t[3], 16), t[4] ? (parseInt(t[4], 16) / 255).toFixed(2) : 1];\n      }\n    }, {\n      re: /#([a-f0-9])([a-f0-9])([a-f0-9])([a-f0-9])?/,\n      parse: function parse(t) {\n        return [parseInt(t[1] + t[1], 16), parseInt(t[2] + t[2], 16), parseInt(t[3] + t[3], 16), t[4] ? (parseInt(t[4] + t[4], 16) / 255).toFixed(2) : 1];\n      }\n    }, {\n      re: /hsla?\\(\\s*(\\d+(?:\\.\\d+)?)\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*,\\s*(\\d+(?:\\.\\d+)?)\\%\\s*(?:,\\s*(\\d?(?:\\.\\d+)?)\\s*)?\\)/,\n      space: \"hsla\",\n      parse: function parse(t) {\n        return [t[1], t[2] / 100, t[3] / 100, t[4]];\n      }\n    }],\n    p = u.Color = function (t, e, i, s) {\n      return new u.Color.fn.parse(t, e, i, s);\n    },\n    f = {\n      rgba: {\n        props: {\n          red: {\n            idx: 0,\n            type: \"byte\"\n          },\n          green: {\n            idx: 1,\n            type: \"byte\"\n          },\n          blue: {\n            idx: 2,\n            type: \"byte\"\n          }\n        }\n      },\n      hsla: {\n        props: {\n          hue: {\n            idx: 0,\n            type: \"degrees\"\n          },\n          saturation: {\n            idx: 1,\n            type: \"percent\"\n          },\n          lightness: {\n            idx: 2,\n            type: \"percent\"\n          }\n        }\n      }\n    },\n    R = {\n      \"byte\": {\n        floor: !0,\n        max: 255\n      },\n      percent: {\n        max: 1\n      },\n      degrees: {\n        mod: 360,\n        floor: !0\n      }\n    },\n    g = u.each;\n  function m(t) {\n    return null == t ? t + \"\" : \"object\" == _typeof(t) ? d[W.call(t)] || \"object\" : _typeof(t);\n  }\n  function _(t, e, i) {\n    var s = R[e.type] || {};\n    return null == t ? i || !e.def ? null : e.def : (t = s.floor ? ~~t : parseFloat(t), s.mod ? (t + s.mod) % s.mod : Math.min(s.max, Math.max(0, t)));\n  }\n  function Y(s) {\n    var n = p(),\n      o = n._rgba = [];\n    return s = s.toLowerCase(), g(L, function (t, e) {\n      var i = e.re.exec(s),\n        i = i && e.parse(i),\n        e = e.space || \"rgba\";\n      if (i) return i = n[e](i), n[f[e].cache] = i[f[e].cache], o = n._rgba = i._rgba, !1;\n    }), o.length ? (\"0,0,0,0\" === o.join() && u.extend(o, y.transparent), n) : y[s];\n  }\n  function v(t, e, i) {\n    return 6 * (i = (i + 1) % 1) < 1 ? t + (e - t) * i * 6 : 2 * i < 1 ? e : 3 * i < 2 ? t + (e - t) * (2 / 3 - i) * 6 : t;\n  }\n  g(f, function (t, e) {\n    e.cache = \"_\" + t, e.props.alpha = {\n      idx: 3,\n      type: \"percent\",\n      def: 1\n    };\n  }), u.each(\"Boolean Number String Function Array Date RegExp Object Error Symbol\".split(\" \"), function (t, e) {\n    d[\"[object \" + e + \"]\"] = e.toLowerCase();\n  }), p.fn = u.extend(p.prototype, {\n    parse: function parse(n, t, e, i) {\n      if (void 0 === n) return this._rgba = [null, null, null, null], this;\n      (n.jquery || n.nodeType) && (n = u(n).css(t), t = void 0);\n      var o = this,\n        s = m(n),\n        a = this._rgba = [];\n      return void 0 !== t && (n = [n, t, e, i], s = \"array\"), \"string\" === s ? this.parse(Y(n) || y._default) : \"array\" === s ? (g(f.rgba.props, function (t, e) {\n        a[e.idx] = _(n[e.idx], e);\n      }), this) : \"object\" === s ? (n instanceof p ? g(f, function (t, e) {\n        n[e.cache] && (o[e.cache] = n[e.cache].slice());\n      }) : g(f, function (t, i) {\n        var s = i.cache;\n        g(i.props, function (t, e) {\n          if (!o[s] && i.to) {\n            if (\"alpha\" === t || null == n[t]) return;\n            o[s] = i.to(o._rgba);\n          }\n          o[s][e.idx] = _(n[t], e, !0);\n        }), o[s] && u.inArray(null, o[s].slice(0, 3)) < 0 && (null == o[s][3] && (o[s][3] = 1), i.from) && (o._rgba = i.from(o[s]));\n      }), this) : void 0;\n    },\n    is: function is(t) {\n      var n = p(t),\n        o = !0,\n        a = this;\n      return g(f, function (t, e) {\n        var i,\n          s = n[e.cache];\n        return s && (i = a[e.cache] || e.to && e.to(a._rgba) || [], g(e.props, function (t, e) {\n          if (null != s[e.idx]) return o = s[e.idx] === i[e.idx];\n        })), o;\n      }), o;\n    },\n    _space: function _space() {\n      var i = [],\n        s = this;\n      return g(f, function (t, e) {\n        s[e.cache] && i.push(t);\n      }), i.pop();\n    },\n    transition: function transition(t, a) {\n      var t = (h = p(t))._space(),\n        e = f[t],\n        i = 0 === this.alpha() ? p(\"transparent\") : this,\n        r = i[e.cache] || e.to(i._rgba),\n        l = r.slice(),\n        h = h[e.cache];\n      return g(e.props, function (t, e) {\n        var i = e.idx,\n          s = r[i],\n          n = h[i],\n          o = R[e.type] || {};\n        null !== n && (null === s ? l[i] = n : (o.mod && (n - s > o.mod / 2 ? s += o.mod : s - n > o.mod / 2 && (s -= o.mod)), l[i] = _((n - s) * a + s, e)));\n      }), this[t](l);\n    },\n    blend: function blend(t) {\n      var e, i, s;\n      return 1 === this._rgba[3] ? this : (e = this._rgba.slice(), i = e.pop(), s = p(t)._rgba, p(u.map(e, function (t, e) {\n        return (1 - i) * s[e] + i * t;\n      })));\n    },\n    toRgbaString: function toRgbaString() {\n      var t = \"rgba(\",\n        e = u.map(this._rgba, function (t, e) {\n          return null != t ? t : 2 < e ? 1 : 0;\n        });\n      return 1 === e[3] && (e.pop(), t = \"rgb(\"), t + e.join(\", \") + \")\";\n    },\n    toHslaString: function toHslaString() {\n      var t = \"hsla(\",\n        e = u.map(this.hsla(), function (t, e) {\n          return null == t && (t = 2 < e ? 1 : 0), t = e && e < 3 ? Math.round(100 * t) + \"%\" : t;\n        });\n      return 1 === e[3] && (e.pop(), t = \"hsl(\"), t + e.join(\", \") + \")\";\n    },\n    toHexString: function toHexString(t) {\n      var e = this._rgba.slice(),\n        i = e.pop();\n      return t && e.push(~~(255 * i)), \"#\" + u.map(e, function (t) {\n        return (\"0\" + (t || 0).toString(16)).substr(-2);\n      }).join(\"\");\n    },\n    toString: function toString() {\n      return this.toRgbaString();\n    }\n  }), p.fn.parse.prototype = p.fn, f.hsla.to = function (t) {\n    var e, i, s, n, o, a, r, l;\n    return null == t[0] || null == t[1] || null == t[2] ? [null, null, null, t[3]] : (e = t[0] / 255, i = t[1] / 255, s = t[2] / 255, t = t[3], n = (l = Math.max(e, i, s)) - (r = Math.min(e, i, s)), a = .5 * (o = l + r), r = r === l ? 0 : e === l ? 60 * (i - s) / n + 360 : i === l ? 60 * (s - e) / n + 120 : 60 * (e - i) / n + 240, l = 0 == n ? 0 : a <= .5 ? n / o : n / (2 - o), [Math.round(r) % 360, l, a, null == t ? 1 : t]);\n  }, f.hsla.from = function (t) {\n    var e, i, s;\n    return null == t[0] || null == t[1] || null == t[2] ? [null, null, null, t[3]] : (e = t[0] / 360, s = t[1], i = t[3], s = 2 * (t = t[2]) - (t = t <= .5 ? t * (1 + s) : t + s - t * s), [Math.round(255 * v(s, t, e + 1 / 3)), Math.round(255 * v(s, t, e)), Math.round(255 * v(s, t, e - 1 / 3)), i]);\n  }, g(f, function (r, t) {\n    var e = t.props,\n      o = t.cache,\n      a = t.to,\n      l = t.from;\n    p.fn[r] = function (t) {\n      var i, s, n;\n      return a && !this[o] && (this[o] = a(this._rgba)), void 0 === t ? this[o].slice() : (i = m(t), s = \"array\" === i || \"object\" === i ? t : arguments, n = this[o].slice(), g(e, function (t, e) {\n        t = s[\"object\" === i ? t : e.idx];\n        null == t && (t = n[e.idx]), n[e.idx] = _(t, e);\n      }), l ? ((t = p(l(n)))[o] = n, t) : p(n));\n    }, g(e, function (o, a) {\n      p.fn[o] || (p.fn[o] = function (t) {\n        var e = m(t),\n          i = \"alpha\" === o ? this._hsla ? \"hsla\" : \"rgba\" : r,\n          s = this[i](),\n          n = s[a.idx];\n        return \"undefined\" === e ? n : (\"function\" === e && (e = m(t = t.call(this, n))), null == t && a.empty ? this : (\"string\" === e && (e = F.exec(t)) && (t = n + parseFloat(e[2]) * (\"+\" === e[1] ? 1 : -1)), s[a.idx] = t, this[i](s)));\n      });\n    });\n  }), p.hook = function (t) {\n    t = t.split(\" \");\n    g(t, function (t, s) {\n      u.cssHooks[s] = {\n        set: function set(t, e) {\n          var i;\n          \"transparent\" === e || \"string\" === m(e) && !(i = Y(e)) || (e = (e = p(i || e)).toRgbaString()), t.style[s] = e;\n        }\n      }, u.fx.step[s] = function (t) {\n        t.colorInit || (t.start = p(t.elem, s), t.end = p(t.end), t.colorInit = !0), u.cssHooks[s].set(t.elem, t.start.transition(t.end, t.pos));\n      };\n    });\n  }, p.hook(\"backgroundColor borderBottomColor borderLeftColor borderRightColor borderTopColor color columnRuleColor outlineColor textDecorationColor textEmphasisColor\"), u.cssHooks.borderColor = {\n    expand: function expand(i) {\n      var s = {};\n      return g([\"Top\", \"Right\", \"Bottom\", \"Left\"], function (t, e) {\n        s[\"border\" + e + \"Color\"] = i;\n      }), s;\n    }\n  };\n  var B,\n    j,\n    q,\n    K,\n    U,\n    X,\n    $,\n    G,\n    Q,\n    b,\n    y = u.Color.names = {\n      aqua: \"#00ffff\",\n      black: \"#000000\",\n      blue: \"#0000ff\",\n      fuchsia: \"#ff00ff\",\n      gray: \"#808080\",\n      green: \"#008000\",\n      lime: \"#00ff00\",\n      maroon: \"#800000\",\n      navy: \"#000080\",\n      olive: \"#808000\",\n      purple: \"#800080\",\n      red: \"#ff0000\",\n      silver: \"#c0c0c0\",\n      teal: \"#008080\",\n      white: \"#ffffff\",\n      yellow: \"#ffff00\",\n      transparent: [null, null, null, 0],\n      _default: \"#ffffff\"\n    },\n    w = \"ui-effects-\",\n    e = \"ui-effects-style\",\n    T = \"ui-effects-animated\";\n  function J(t) {\n    for (var e, i = t.ownerDocument.defaultView.getComputedStyle(t), s = {}, n = i.length; n--;) \"string\" == typeof i[e = i[n]] && (s[e.replace(/-([\\da-z])/gi, function (t, e) {\n      return e.toUpperCase();\n    })] = i[e]);\n    return s;\n  }\n  function P(t, e, i, s) {\n    return t = {\n      effect: t = V.isPlainObject(t) ? (e = t).effect : t\n    }, \"function\" == typeof (e = null == e ? {} : e) && (s = e, i = null, e = {}), \"number\" != typeof e && !V.fx.speeds[e] || (s = i, i = e, e = {}), \"function\" == typeof i && (s = i, i = null), e && V.extend(t, e), i = i || e.duration, t.duration = V.fx.off ? 0 : \"number\" == typeof i ? i : i in V.fx.speeds ? V.fx.speeds[i] : V.fx.speeds._default, t.complete = s || e.complete, t;\n  }\n  function M(t) {\n    return !t || \"number\" == typeof t || V.fx.speeds[t] || \"string\" == typeof t && !V.effects.effect[t] || \"function\" == typeof t || \"object\" == _typeof(t) && !t.effect;\n  }\n  function Z(t, e) {\n    var i = e.outerWidth(),\n      e = e.outerHeight(),\n      t = /^rect\\((-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto),?\\s*(-?\\d*\\.?\\d*px|-?\\d+%|auto)\\)$/.exec(t) || [\"\", 0, i, e, 0];\n    return {\n      top: parseFloat(t[1]) || 0,\n      right: \"auto\" === t[2] ? i : parseFloat(t[2]),\n      bottom: \"auto\" === t[3] ? e : parseFloat(t[3]),\n      left: parseFloat(t[4]) || 0\n    };\n  }\n  V.effects = {\n    effect: {}\n  }, K = [\"add\", \"remove\", \"toggle\"], U = {\n    border: 1,\n    borderBottom: 1,\n    borderColor: 1,\n    borderLeft: 1,\n    borderRight: 1,\n    borderTop: 1,\n    borderWidth: 1,\n    margin: 1,\n    padding: 1\n  }, V.each([\"borderLeftStyle\", \"borderRightStyle\", \"borderBottomStyle\", \"borderTopStyle\"], function (t, e) {\n    V.fx.step[e] = function (t) {\n      (\"none\" !== t.end && !t.setAttr || 1 === t.pos && !t.setAttr) && (u.style(t.elem, e, t.end), t.setAttr = !0);\n    };\n  }), V.effects.animateClass = function (n, t, e, i) {\n    var o = V.speed(t, e, i);\n    return this.queue(function () {\n      var i = V(this),\n        t = i.attr(\"class\") || \"\",\n        e = (e = o.children ? i.find(\"*\").addBack() : i).map(function () {\n          return {\n            el: V(this),\n            start: J(this)\n          };\n        }),\n        s = function s() {\n          V.each(K, function (t, e) {\n            n[e] && i[e + \"Class\"](n[e]);\n          });\n        };\n      s(), e = e.map(function () {\n        return this.end = J(this.el[0]), this.diff = function (t, e) {\n          var i,\n            s,\n            n = {};\n          for (i in e) s = e[i], t[i] === s || U[i] || !V.fx.step[i] && isNaN(parseFloat(s)) || (n[i] = s);\n          return n;\n        }(this.start, this.end), this;\n      }), i.attr(\"class\", t), e = e.map(function () {\n        var t = this,\n          e = V.Deferred(),\n          i = V.extend({}, o, {\n            queue: !1,\n            complete: function complete() {\n              e.resolve(t);\n            }\n          });\n        return this.el.animate(this.diff, i), e.promise();\n      }), V.when.apply(V, e.get()).done(function () {\n        s(), V.each(arguments, function () {\n          var e = this.el;\n          V.each(this.diff, function (t) {\n            e.css(t, \"\");\n          });\n        }), o.complete.call(i[0]);\n      });\n    });\n  }, V.fn.extend({\n    addClass: (q = V.fn.addClass, function (t, e, i, s) {\n      return e ? V.effects.animateClass.call(this, {\n        add: t\n      }, e, i, s) : q.apply(this, arguments);\n    }),\n    removeClass: (j = V.fn.removeClass, function (t, e, i, s) {\n      return 1 < arguments.length ? V.effects.animateClass.call(this, {\n        remove: t\n      }, e, i, s) : j.apply(this, arguments);\n    }),\n    toggleClass: (B = V.fn.toggleClass, function (t, e, i, s, n) {\n      return \"boolean\" == typeof e || void 0 === e ? i ? V.effects.animateClass.call(this, e ? {\n        add: t\n      } : {\n        remove: t\n      }, i, s, n) : B.apply(this, arguments) : V.effects.animateClass.call(this, {\n        toggle: t\n      }, e, i, s);\n    }),\n    switchClass: function switchClass(t, e, i, s, n) {\n      return V.effects.animateClass.call(this, {\n        add: e,\n        remove: t\n      }, i, s, n);\n    }\n  }), V.expr && V.expr.pseudos && V.expr.pseudos.animated && (V.expr.pseudos.animated = (X = V.expr.pseudos.animated, function (t) {\n    return !!V(t).data(T) || X(t);\n  })), !0 === V.uiBackCompat && V.extend(V.effects, {\n    save: function save(t, e) {\n      for (var i = 0, s = e.length; i < s; i++) null !== e[i] && t.data(w + e[i], t[0].style[e[i]]);\n    },\n    restore: function restore(t, e) {\n      for (var i, s = 0, n = e.length; s < n; s++) null !== e[s] && (i = t.data(w + e[s]), t.css(e[s], i));\n    },\n    setMode: function setMode(t, e) {\n      return e = \"toggle\" === e ? t.is(\":hidden\") ? \"show\" : \"hide\" : e;\n    },\n    createWrapper: function createWrapper(i) {\n      if (i.parent().is(\".ui-effects-wrapper\")) return i.parent();\n      var s = {\n          width: i.outerWidth(!0),\n          height: i.outerHeight(!0),\n          \"float\": i.css(\"float\")\n        },\n        t = V(\"<div></div>\").addClass(\"ui-effects-wrapper\").css({\n          fontSize: \"100%\",\n          background: \"transparent\",\n          border: \"none\",\n          margin: 0,\n          padding: 0\n        }),\n        e = {\n          width: i.width(),\n          height: i.height()\n        },\n        n = document.activeElement;\n      try {\n        n.id;\n      } catch (t) {\n        n = document.body;\n      }\n      return i.wrap(t), i[0] !== n && !V.contains(i[0], n) || V(n).trigger(\"focus\"), t = i.parent(), \"static\" === i.css(\"position\") ? (t.css({\n        position: \"relative\"\n      }), i.css({\n        position: \"relative\"\n      })) : (V.extend(s, {\n        position: i.css(\"position\"),\n        zIndex: i.css(\"z-index\")\n      }), V.each([\"top\", \"left\", \"bottom\", \"right\"], function (t, e) {\n        s[e] = i.css(e), isNaN(parseInt(s[e], 10)) && (s[e] = \"auto\");\n      }), i.css({\n        position: \"relative\",\n        top: 0,\n        left: 0,\n        right: \"auto\",\n        bottom: \"auto\"\n      })), i.css(e), t.css(s).show();\n    },\n    removeWrapper: function removeWrapper(t) {\n      var e = document.activeElement;\n      return t.parent().is(\".ui-effects-wrapper\") && (t.parent().replaceWith(t), t[0] !== e && !V.contains(t[0], e) || V(e).trigger(\"focus\")), t;\n    }\n  }), V.extend(V.effects, {\n    version: \"1.14.1\",\n    define: function define(t, e, i) {\n      return i || (i = e, e = \"effect\"), V.effects.effect[t] = i, V.effects.effect[t].mode = e, i;\n    },\n    scaledDimensions: function scaledDimensions(t, e, i) {\n      var s;\n      return 0 === e ? {\n        height: 0,\n        width: 0,\n        outerHeight: 0,\n        outerWidth: 0\n      } : (s = \"horizontal\" !== i ? (e || 100) / 100 : 1, i = \"vertical\" !== i ? (e || 100) / 100 : 1, {\n        height: t.height() * i,\n        width: t.width() * s,\n        outerHeight: t.outerHeight() * i,\n        outerWidth: t.outerWidth() * s\n      });\n    },\n    clipToBox: function clipToBox(t) {\n      return {\n        width: t.clip.right - t.clip.left,\n        height: t.clip.bottom - t.clip.top,\n        left: t.clip.left,\n        top: t.clip.top\n      };\n    },\n    unshift: function unshift(t, e, i) {\n      var s = t.queue();\n      1 < e && s.splice.apply(s, [1, 0].concat(s.splice(e, i))), t.dequeue();\n    },\n    saveStyle: function saveStyle(t) {\n      t.data(e, t[0].style.cssText);\n    },\n    restoreStyle: function restoreStyle(t) {\n      t[0].style.cssText = t.data(e) || \"\", t.removeData(e);\n    },\n    mode: function mode(t, e) {\n      t = t.is(\":hidden\");\n      return \"toggle\" === e && (e = t ? \"show\" : \"hide\"), e = (t ? \"hide\" === e : \"show\" === e) ? \"none\" : e;\n    },\n    getBaseline: function getBaseline(t, e) {\n      var i, s;\n      switch (t[0]) {\n        case \"top\":\n          i = 0;\n          break;\n        case \"middle\":\n          i = .5;\n          break;\n        case \"bottom\":\n          i = 1;\n          break;\n        default:\n          i = t[0] / e.height;\n      }\n      switch (t[1]) {\n        case \"left\":\n          s = 0;\n          break;\n        case \"center\":\n          s = .5;\n          break;\n        case \"right\":\n          s = 1;\n          break;\n        default:\n          s = t[1] / e.width;\n      }\n      return {\n        x: s,\n        y: i\n      };\n    },\n    createPlaceholder: function createPlaceholder(t) {\n      var e,\n        i = t.css(\"position\"),\n        s = t.position();\n      return t.css({\n        marginTop: t.css(\"marginTop\"),\n        marginBottom: t.css(\"marginBottom\"),\n        marginLeft: t.css(\"marginLeft\"),\n        marginRight: t.css(\"marginRight\")\n      }).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()), /^(static|relative)/.test(i) && (i = \"absolute\", e = V(\"<\" + t[0].nodeName + \">\").insertAfter(t).css({\n        display: /^(inline|ruby)/.test(t.css(\"display\")) ? \"inline-block\" : \"block\",\n        visibility: \"hidden\",\n        marginTop: t.css(\"marginTop\"),\n        marginBottom: t.css(\"marginBottom\"),\n        marginLeft: t.css(\"marginLeft\"),\n        marginRight: t.css(\"marginRight\"),\n        \"float\": t.css(\"float\")\n      }).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).addClass(\"ui-effects-placeholder\"), t.data(w + \"placeholder\", e)), t.css({\n        position: i,\n        left: s.left,\n        top: s.top\n      }), e;\n    },\n    removePlaceholder: function removePlaceholder(t) {\n      var e = w + \"placeholder\",\n        i = t.data(e);\n      i && (i.remove(), t.removeData(e));\n    },\n    cleanUp: function cleanUp(t) {\n      V.effects.restoreStyle(t), V.effects.removePlaceholder(t);\n    },\n    setTransition: function setTransition(s, t, n, o) {\n      return o = o || {}, V.each(t, function (t, e) {\n        var i = s.cssUnit(e);\n        0 < i[0] && (o[e] = i[0] * n + i[1]);\n      }), o;\n    }\n  }), V.fn.extend({\n    effect: function effect() {\n      function t(t) {\n        var e = V(this),\n          i = V.effects.mode(e, r) || o;\n        e.data(T, !0), l.push(i), o && (\"show\" === i || i === o && \"hide\" === i) && e.show(), o && \"none\" === i || V.effects.saveStyle(e), \"function\" == typeof t && t();\n      }\n      var s = P.apply(this, arguments),\n        n = V.effects.effect[s.effect],\n        o = n.mode,\n        e = s.queue,\n        i = e || \"fx\",\n        a = s.complete,\n        r = s.mode,\n        l = [];\n      return V.fx.off || !n ? r ? this[r](s.duration, a) : this.each(function () {\n        a && a.call(this);\n      }) : !1 === e ? this.each(t).each(h) : this.queue(i, t).queue(i, h);\n      function h(t) {\n        var e = V(this);\n        function i() {\n          \"function\" == typeof a && a.call(e[0]), \"function\" == typeof t && t();\n        }\n        s.mode = l.shift(), !0 !== V.uiBackCompat || o ? \"none\" === s.mode ? (e[r](), i()) : n.call(e[0], s, function () {\n          e.removeData(T), V.effects.cleanUp(e), \"hide\" === s.mode && e.hide(), i();\n        }) : (e.is(\":hidden\") ? \"hide\" === r : \"show\" === r) ? (e[r](), i()) : n.call(e[0], s, i);\n      }\n    },\n    show: (Q = V.fn.show, function (t) {\n      return M(t) ? Q.apply(this, arguments) : ((t = P.apply(this, arguments)).mode = \"show\", this.effect.call(this, t));\n    }),\n    hide: (G = V.fn.hide, function (t) {\n      return M(t) ? G.apply(this, arguments) : ((t = P.apply(this, arguments)).mode = \"hide\", this.effect.call(this, t));\n    }),\n    toggle: ($ = V.fn.toggle, function (t) {\n      return M(t) || \"boolean\" == typeof t ? $.apply(this, arguments) : ((t = P.apply(this, arguments)).mode = \"toggle\", this.effect.call(this, t));\n    }),\n    cssUnit: function cssUnit(t) {\n      var i = this.css(t),\n        s = [];\n      return V.each([\"em\", \"px\", \"%\", \"pt\"], function (t, e) {\n        0 < i.indexOf(e) && (s = [parseFloat(i), e]);\n      }), s;\n    },\n    cssClip: function cssClip(t) {\n      return t ? this.css(\"clip\", \"rect(\" + t.top + \"px \" + t.right + \"px \" + t.bottom + \"px \" + t.left + \"px)\") : Z(this.css(\"clip\"), this);\n    },\n    transfer: function transfer(t, e) {\n      var i = V(this),\n        s = V(t.to),\n        n = \"fixed\" === s.css(\"position\"),\n        o = V(\"body\"),\n        a = n ? o.scrollTop() : 0,\n        o = n ? o.scrollLeft() : 0,\n        r = s.offset(),\n        r = {\n          top: r.top - a,\n          left: r.left - o,\n          height: s.innerHeight(),\n          width: s.innerWidth()\n        },\n        s = i.offset(),\n        l = V(\"<div class='ui-effects-transfer'></div>\");\n      l.appendTo(\"body\").addClass(t.className).css({\n        top: s.top - a,\n        left: s.left - o,\n        height: i.innerHeight(),\n        width: i.innerWidth(),\n        position: n ? \"fixed\" : \"absolute\"\n      }).animate(r, t.duration, t.easing, function () {\n        l.remove(), \"function\" == typeof e && e();\n      });\n    }\n  }), V.fx.step.clip = function (t) {\n    t.clipInit || (t.start = V(t.elem).cssClip(), \"string\" == typeof t.end && (t.end = Z(t.end, t.elem)), t.clipInit = !0), V(t.elem).cssClip({\n      top: t.pos * (t.end.top - t.start.top) + t.start.top,\n      right: t.pos * (t.end.right - t.start.right) + t.start.right,\n      bottom: t.pos * (t.end.bottom - t.start.bottom) + t.start.bottom,\n      left: t.pos * (t.end.left - t.start.left) + t.start.left\n    });\n  }, b = {}, V.each([\"Quad\", \"Cubic\", \"Quart\", \"Quint\", \"Expo\"], function (e, t) {\n    b[t] = function (t) {\n      return Math.pow(t, e + 2);\n    };\n  }), V.extend(b, {\n    Sine: function Sine(t) {\n      return 1 - Math.cos(t * Math.PI / 2);\n    },\n    Circ: function Circ(t) {\n      return 1 - Math.sqrt(1 - t * t);\n    },\n    Elastic: function Elastic(t) {\n      return 0 === t || 1 === t ? t : -Math.pow(2, 8 * (t - 1)) * Math.sin((80 * (t - 1) - 7.5) * Math.PI / 15);\n    },\n    Back: function Back(t) {\n      return t * t * (3 * t - 2);\n    },\n    Bounce: function Bounce(t) {\n      for (var e, i = 4; t < ((e = Math.pow(2, --i)) - 1) / 11;);\n      return 1 / Math.pow(4, 3 - i) - 7.5625 * Math.pow((3 * e - 2) / 22 - t, 2);\n    }\n  }), V.each(b, function (t, e) {\n    V.easing[\"easeIn\" + t] = e, V.easing[\"easeOut\" + t] = function (t) {\n      return 1 - e(1 - t);\n    }, V.easing[\"easeInOut\" + t] = function (t) {\n      return t < .5 ? e(2 * t) / 2 : 1 - e(-2 * t + 2) / 2;\n    };\n  });\n  var tt,\n    et,\n    S,\n    it = V.effects,\n    st = (V.effects.define(\"blind\", \"hide\", function (t, e) {\n      var i = {\n          up: [\"bottom\", \"top\"],\n          vertical: [\"bottom\", \"top\"],\n          down: [\"top\", \"bottom\"],\n          left: [\"right\", \"left\"],\n          horizontal: [\"right\", \"left\"],\n          right: [\"left\", \"right\"]\n        },\n        s = V(this),\n        n = t.direction || \"up\",\n        o = s.cssClip(),\n        a = {\n          clip: V.extend({}, o)\n        },\n        r = V.effects.createPlaceholder(s);\n      a.clip[i[n][0]] = a.clip[i[n][1]], \"show\" === t.mode && (s.cssClip(a.clip), r && r.css(V.effects.clipToBox(a)), a.clip = o), r && r.animate(V.effects.clipToBox(a), t.duration, t.easing), s.animate(a, {\n        queue: !1,\n        duration: t.duration,\n        easing: t.easing,\n        complete: e\n      });\n    }), V.effects.define(\"bounce\", function (t, e) {\n      var i,\n        s,\n        n = V(this),\n        o = t.mode,\n        a = \"hide\" === o,\n        o = \"show\" === o,\n        r = t.direction || \"up\",\n        l = t.distance,\n        h = t.times || 5,\n        c = 2 * h + (o || a ? 1 : 0),\n        u = t.duration / c,\n        d = t.easing,\n        p = \"up\" === r || \"down\" === r ? \"top\" : \"left\",\n        f = \"up\" === r || \"left\" === r,\n        g = 0,\n        t = n.queue().length;\n      for (V.effects.createPlaceholder(n), r = n.css(p), l = l || n[\"top\" == p ? \"outerHeight\" : \"outerWidth\"]() / 3, o && ((s = {\n        opacity: 1\n      })[p] = r, n.css(\"opacity\", 0).css(p, f ? 2 * -l : 2 * l).animate(s, u, d)), a && (l /= Math.pow(2, h - 1)), (s = {})[p] = r; g < h; g++) (i = {})[p] = (f ? \"-=\" : \"+=\") + l, n.animate(i, u, d).animate(s, u, d), l = a ? 2 * l : l / 2;\n      a && ((i = {\n        opacity: 0\n      })[p] = (f ? \"-=\" : \"+=\") + l, n.animate(i, u, d)), n.queue(e), V.effects.unshift(n, t, 1 + c);\n    }), V.effects.define(\"clip\", \"hide\", function (t, e) {\n      var i = {},\n        s = V(this),\n        n = t.direction || \"vertical\",\n        o = \"both\" === n,\n        a = o || \"horizontal\" === n,\n        o = o || \"vertical\" === n,\n        n = s.cssClip();\n      i.clip = {\n        top: o ? (n.bottom - n.top) / 2 : n.top,\n        right: a ? (n.right - n.left) / 2 : n.right,\n        bottom: o ? (n.bottom - n.top) / 2 : n.bottom,\n        left: a ? (n.right - n.left) / 2 : n.left\n      }, V.effects.createPlaceholder(s), \"show\" === t.mode && (s.cssClip(i.clip), i.clip = n), s.animate(i, {\n        queue: !1,\n        duration: t.duration,\n        easing: t.easing,\n        complete: e\n      });\n    }), V.effects.define(\"drop\", \"hide\", function (t, e) {\n      var i,\n        s = V(this),\n        n = \"show\" === t.mode,\n        o = t.direction || \"left\",\n        a = \"up\" === o || \"down\" === o ? \"top\" : \"left\",\n        o = \"up\" === o || \"left\" === o ? \"-=\" : \"+=\",\n        r = \"+=\" == o ? \"-=\" : \"+=\",\n        l = {\n          opacity: 0\n        };\n      V.effects.createPlaceholder(s), i = t.distance || s[\"top\" == a ? \"outerHeight\" : \"outerWidth\"](!0) / 2, l[a] = o + i, n && (s.css(l), l[a] = r + i, l.opacity = 1), s.animate(l, {\n        queue: !1,\n        duration: t.duration,\n        easing: t.easing,\n        complete: e\n      });\n    }), V.effects.define(\"explode\", \"hide\", function (t, e) {\n      var i,\n        s,\n        n,\n        o,\n        a,\n        r,\n        l = t.pieces ? Math.round(Math.sqrt(t.pieces)) : 3,\n        h = l,\n        c = V(this),\n        u = \"show\" === t.mode,\n        d = c.show().css(\"visibility\", \"hidden\").offset(),\n        p = Math.ceil(c.outerWidth() / h),\n        f = Math.ceil(c.outerHeight() / l),\n        g = [];\n      function m() {\n        g.push(this), g.length === l * h && (c.css({\n          visibility: \"visible\"\n        }), V(g).remove(), e());\n      }\n      for (i = 0; i < l; i++) for (o = d.top + i * f, r = i - (l - 1) / 2, s = 0; s < h; s++) n = d.left + s * p, a = s - (h - 1) / 2, c.clone().appendTo(\"body\").wrap(\"<div></div>\").css({\n        position: \"absolute\",\n        visibility: \"visible\",\n        left: -s * p,\n        top: -i * f\n      }).parent().addClass(\"ui-effects-explode\").css({\n        position: \"absolute\",\n        overflow: \"hidden\",\n        width: p,\n        height: f,\n        left: n + (u ? a * p : 0),\n        top: o + (u ? r * f : 0),\n        opacity: u ? 0 : 1\n      }).animate({\n        left: n + (u ? 0 : a * p),\n        top: o + (u ? 0 : r * f),\n        opacity: u ? 1 : 0\n      }, t.duration || 500, t.easing, m);\n    }), V.effects.define(\"fade\", \"toggle\", function (t, e) {\n      var i = \"show\" === t.mode;\n      V(this).css(\"opacity\", i ? 0 : 1).animate({\n        opacity: i ? 1 : 0\n      }, {\n        queue: !1,\n        duration: t.duration,\n        easing: t.easing,\n        complete: e\n      });\n    }), V.effects.define(\"fold\", \"hide\", function (e, t) {\n      var i = V(this),\n        s = e.mode,\n        n = \"show\" === s,\n        s = \"hide\" === s,\n        o = e.size || 15,\n        a = /([0-9]+)%/.exec(o),\n        r = !!e.horizFirst ? [\"right\", \"bottom\"] : [\"bottom\", \"right\"],\n        l = e.duration / 2,\n        h = V.effects.createPlaceholder(i),\n        c = i.cssClip(),\n        u = {\n          clip: V.extend({}, c)\n        },\n        d = {\n          clip: V.extend({}, c)\n        },\n        p = [c[r[0]], c[r[1]]],\n        f = i.queue().length;\n      a && (o = parseInt(a[1], 10) / 100 * p[s ? 0 : 1]), u.clip[r[0]] = o, d.clip[r[0]] = o, d.clip[r[1]] = 0, n && (i.cssClip(d.clip), h && h.css(V.effects.clipToBox(d)), d.clip = c), i.queue(function (t) {\n        h && h.animate(V.effects.clipToBox(u), l, e.easing).animate(V.effects.clipToBox(d), l, e.easing), t();\n      }).animate(u, l, e.easing).animate(d, l, e.easing).queue(t), V.effects.unshift(i, f, 4);\n    }), V.effects.define(\"highlight\", \"show\", function (t, e) {\n      var i = V(this),\n        s = {\n          backgroundColor: i.css(\"backgroundColor\")\n        };\n      \"hide\" === t.mode && (s.opacity = 0), V.effects.saveStyle(i), i.css({\n        backgroundImage: \"none\",\n        backgroundColor: t.color || \"#ffff99\"\n      }).animate(s, {\n        queue: !1,\n        duration: t.duration,\n        easing: t.easing,\n        complete: e\n      });\n    }), V.effects.define(\"size\", function (s, e) {\n      var n,\n        i = V(this),\n        t = [\"fontSize\"],\n        o = [\"borderTopWidth\", \"borderBottomWidth\", \"paddingTop\", \"paddingBottom\"],\n        a = [\"borderLeftWidth\", \"borderRightWidth\", \"paddingLeft\", \"paddingRight\"],\n        r = s.mode,\n        l = \"effect\" !== r,\n        h = s.scale || \"both\",\n        c = s.origin || [\"middle\", \"center\"],\n        u = i.css(\"position\"),\n        d = i.position(),\n        p = V.effects.scaledDimensions(i),\n        f = s.from || p,\n        g = s.to || V.effects.scaledDimensions(i, 0);\n      V.effects.createPlaceholder(i), \"show\" === r && (r = f, f = g, g = r), n = {\n        from: {\n          y: f.height / p.height,\n          x: f.width / p.width\n        },\n        to: {\n          y: g.height / p.height,\n          x: g.width / p.width\n        }\n      }, \"box\" !== h && \"both\" !== h || (n.from.y !== n.to.y && (f = V.effects.setTransition(i, o, n.from.y, f), g = V.effects.setTransition(i, o, n.to.y, g)), n.from.x !== n.to.x && (f = V.effects.setTransition(i, a, n.from.x, f), g = V.effects.setTransition(i, a, n.to.x, g))), \"content\" !== h && \"both\" !== h || n.from.y !== n.to.y && (f = V.effects.setTransition(i, t, n.from.y, f), g = V.effects.setTransition(i, t, n.to.y, g)), c && (r = V.effects.getBaseline(c, p), f.top = (p.outerHeight - f.outerHeight) * r.y + d.top, f.left = (p.outerWidth - f.outerWidth) * r.x + d.left, g.top = (p.outerHeight - g.outerHeight) * r.y + d.top, g.left = (p.outerWidth - g.outerWidth) * r.x + d.left), delete f.outerHeight, delete f.outerWidth, i.css(f), \"content\" !== h && \"both\" !== h || (o = o.concat([\"marginTop\", \"marginBottom\"]).concat(t), a = a.concat([\"marginLeft\", \"marginRight\"]), i.find(\"*[width]\").each(function () {\n        var t = V(this),\n          e = V.effects.scaledDimensions(t),\n          i = {\n            height: e.height * n.from.y,\n            width: e.width * n.from.x,\n            outerHeight: e.outerHeight * n.from.y,\n            outerWidth: e.outerWidth * n.from.x\n          },\n          e = {\n            height: e.height * n.to.y,\n            width: e.width * n.to.x,\n            outerHeight: e.height * n.to.y,\n            outerWidth: e.width * n.to.x\n          };\n        n.from.y !== n.to.y && (i = V.effects.setTransition(t, o, n.from.y, i), e = V.effects.setTransition(t, o, n.to.y, e)), n.from.x !== n.to.x && (i = V.effects.setTransition(t, a, n.from.x, i), e = V.effects.setTransition(t, a, n.to.x, e)), l && V.effects.saveStyle(t), t.css(i), t.animate(e, s.duration, s.easing, function () {\n          l && V.effects.restoreStyle(t);\n        });\n      })), i.animate(g, {\n        queue: !1,\n        duration: s.duration,\n        easing: s.easing,\n        complete: function complete() {\n          var t = i.offset();\n          0 === g.opacity && i.css(\"opacity\", f.opacity), l || (i.css(\"position\", \"static\" === u ? \"relative\" : u).offset(t), V.effects.saveStyle(i)), e();\n        }\n      });\n    }), V.effects.define(\"scale\", function (t, e) {\n      var i = V(this),\n        s = t.mode,\n        s = parseInt(t.percent, 10) || (0 === parseInt(t.percent, 10) || \"effect\" !== s ? 0 : 100),\n        i = V.extend(!0, {\n          from: V.effects.scaledDimensions(i),\n          to: V.effects.scaledDimensions(i, s, t.direction || \"both\"),\n          origin: t.origin || [\"middle\", \"center\"]\n        }, t);\n      t.fade && (i.from.opacity = 1, i.to.opacity = 0), V.effects.effect.size.call(this, i, e);\n    }), V.effects.define(\"puff\", \"hide\", function (t, e) {\n      t = V.extend(!0, {}, t, {\n        fade: !0,\n        percent: parseInt(t.percent, 10) || 150\n      });\n      V.effects.effect.scale.call(this, t, e);\n    }), V.effects.define(\"pulsate\", \"show\", function (t, e) {\n      var i = V(this),\n        s = t.mode,\n        n = \"show\" === s,\n        o = 2 * (t.times || 5) + (n || \"hide\" === s ? 1 : 0),\n        a = t.duration / o,\n        r = 0,\n        l = 1,\n        s = i.queue().length;\n      for (!n && i.is(\":visible\") || (i.css(\"opacity\", 0).show(), r = 1); l < o; l++) i.animate({\n        opacity: r\n      }, a, t.easing), r = 1 - r;\n      i.animate({\n        opacity: r\n      }, a, t.easing), i.queue(e), V.effects.unshift(i, s, 1 + o);\n    }), V.effects.define(\"shake\", function (t, e) {\n      var i = 1,\n        s = V(this),\n        n = t.direction || \"left\",\n        o = t.distance || 20,\n        a = t.times || 3,\n        r = 2 * a + 1,\n        l = Math.round(t.duration / r),\n        h = \"up\" === n || \"down\" === n ? \"top\" : \"left\",\n        n = \"up\" === n || \"left\" === n,\n        c = {},\n        u = {},\n        d = {},\n        p = s.queue().length;\n      for (V.effects.createPlaceholder(s), c[h] = (n ? \"-=\" : \"+=\") + o, u[h] = (n ? \"+=\" : \"-=\") + 2 * o, d[h] = (n ? \"-=\" : \"+=\") + 2 * o, s.animate(c, l, t.easing); i < a; i++) s.animate(u, l, t.easing).animate(d, l, t.easing);\n      s.animate(u, l, t.easing).animate(c, l / 2, t.easing).queue(e), V.effects.unshift(s, p, 1 + r);\n    }), V.effects.define(\"slide\", \"show\", function (t, e) {\n      var i,\n        s,\n        n = V(this),\n        o = {\n          up: [\"bottom\", \"top\"],\n          down: [\"top\", \"bottom\"],\n          left: [\"right\", \"left\"],\n          right: [\"left\", \"right\"]\n        },\n        a = t.mode,\n        r = t.direction || \"left\",\n        l = \"up\" === r || \"down\" === r ? \"top\" : \"left\",\n        h = \"up\" === r || \"left\" === r,\n        c = t.distance || n[\"top\" == l ? \"outerHeight\" : \"outerWidth\"](!0),\n        u = {};\n      V.effects.createPlaceholder(n), i = n.cssClip(), s = n.position()[l], u[l] = (h ? -1 : 1) * c + s, u.clip = n.cssClip(), u.clip[o[r][1]] = u.clip[o[r][0]], \"show\" === a && (n.cssClip(u.clip), n.css(l, u[l]), u.clip = i, u[l] = s), n.animate(u, {\n        queue: !1,\n        duration: t.duration,\n        easing: t.easing,\n        complete: e\n      });\n    }), it = !0 === V.uiBackCompat ? V.effects.define(\"transfer\", function (t, e) {\n      V(this).transfer(t, e);\n    }) : it, V.ui.focusable = function (t, e) {\n      var i,\n        s,\n        n,\n        o = t.nodeName.toLowerCase();\n      return \"area\" === o ? (n = (i = t.parentNode).name, !(!t.href || !n || \"map\" !== i.nodeName.toLowerCase()) && 0 < (i = V(\"img[usemap='#\" + n + \"']\")).length && i.is(\":visible\")) : (/^(input|select|textarea|button|object)$/.test(o) ? (s = !t.disabled) && (n = V(t).closest(\"fieldset\")[0]) && (s = !n.disabled) : s = \"a\" === o && t.href || e, s && V(t).is(\":visible\") && \"visible\" === V(t).css(\"visibility\"));\n    }, V.extend(V.expr.pseudos, {\n      focusable: function focusable(t) {\n        return V.ui.focusable(t, null != V.attr(t, \"tabindex\"));\n      }\n    }), V.ui.focusable, V.ui.formResetMixin = {\n      _formResetHandler: function _formResetHandler() {\n        var e = V(this);\n        setTimeout(function () {\n          var t = e.data(\"ui-form-reset-instances\");\n          V.each(t, function () {\n            this.refresh();\n          });\n        });\n      },\n      _bindFormResetHandler: function _bindFormResetHandler() {\n        var t;\n        this.form = V(this.element.prop(\"form\")), this.form.length && ((t = this.form.data(\"ui-form-reset-instances\") || []).length || this.form.on(\"reset.ui-form-reset\", this._formResetHandler), t.push(this), this.form.data(\"ui-form-reset-instances\", t));\n      },\n      _unbindFormResetHandler: function _unbindFormResetHandler() {\n        var t;\n        this.form.length && ((t = this.form.data(\"ui-form-reset-instances\")).splice(V.inArray(this, t), 1), t.length ? this.form.data(\"ui-form-reset-instances\", t) : this.form.removeData(\"ui-form-reset-instances\").off(\"reset.ui-form-reset\"));\n      }\n    }, V.escapeSelector || (V.escapeSelector = function (t) {\n      return CSS.escape(t + \"\");\n    }), V.fn.even && V.fn.odd || V.fn.extend({\n      even: function even() {\n        return this.filter(function (t) {\n          return t % 2 == 0;\n        });\n      },\n      odd: function odd() {\n        return this.filter(function (t) {\n          return t % 2 == 1;\n        });\n      }\n    }), V.ui.keyCode = {\n      BACKSPACE: 8,\n      COMMA: 188,\n      DELETE: 46,\n      DOWN: 40,\n      END: 35,\n      ENTER: 13,\n      ESCAPE: 27,\n      HOME: 36,\n      LEFT: 37,\n      PAGE_DOWN: 34,\n      PAGE_UP: 33,\n      PERIOD: 190,\n      RIGHT: 39,\n      SPACE: 32,\n      TAB: 9,\n      UP: 38\n    }, V.fn.labels = function () {\n      var t, e, i;\n      return this.length ? this[0].labels && this[0].labels.length ? this.pushStack(this[0].labels) : (e = this.eq(0).parents(\"label\"), (t = this.attr(\"id\")) && (i = (i = this.eq(0).parents().last()).add((i.length ? i : this).siblings()), t = \"label[for='\" + CSS.escape(t) + \"']\", e = e.add(i.find(t).addBack(t))), this.pushStack(e)) : this.pushStack([]);\n    }, V.fn.scrollParent = function (t) {\n      var e = this.css(\"position\"),\n        i = \"absolute\" === e,\n        s = t ? /(auto|scroll|hidden)/ : /(auto|scroll)/,\n        t = this.parents().filter(function () {\n          var t = V(this);\n          return (!i || \"static\" !== t.css(\"position\")) && s.test(t.css(\"overflow\") + t.css(\"overflow-y\") + t.css(\"overflow-x\"));\n        }).eq(0);\n      return \"fixed\" !== e && t.length ? t : V(this[0].ownerDocument || document);\n    }, V.extend(V.expr.pseudos, {\n      tabbable: function tabbable(t) {\n        var e = V.attr(t, \"tabindex\"),\n          i = null != e;\n        return (!i || 0 <= e) && V.ui.focusable(t, i);\n      }\n    }), V.fn.extend({\n      uniqueId: (tt = 0, function () {\n        return this.each(function () {\n          this.id || (this.id = \"ui-id-\" + ++tt);\n        });\n      }),\n      removeUniqueId: function removeUniqueId() {\n        return this.each(function () {\n          /^ui-id-\\d+$/.test(this.id) && V(this).removeAttr(\"id\");\n        });\n      }\n    }), V.widget(\"ui.accordion\", {\n      version: \"1.14.1\",\n      options: {\n        active: 0,\n        animate: {},\n        classes: {\n          \"ui-accordion-header\": \"ui-corner-top\",\n          \"ui-accordion-header-collapsed\": \"ui-corner-all\",\n          \"ui-accordion-content\": \"ui-corner-bottom\"\n        },\n        collapsible: !1,\n        event: \"click\",\n        header: function header(t) {\n          return t.find(\"> li > :first-child\").add(t.find(\"> :not(li)\").filter(function (t) {\n            return t % 2 == 0;\n          }));\n        },\n        heightStyle: \"auto\",\n        icons: {\n          activeHeader: \"ui-icon-triangle-1-s\",\n          header: \"ui-icon-triangle-1-e\"\n        },\n        activate: null,\n        beforeActivate: null\n      },\n      hideProps: {\n        borderTopWidth: \"hide\",\n        borderBottomWidth: \"hide\",\n        paddingTop: \"hide\",\n        paddingBottom: \"hide\",\n        height: \"hide\"\n      },\n      showProps: {\n        borderTopWidth: \"show\",\n        borderBottomWidth: \"show\",\n        paddingTop: \"show\",\n        paddingBottom: \"show\",\n        height: \"show\"\n      },\n      _create: function _create() {\n        var t = this.options;\n        this.prevShow = this.prevHide = V(), this._addClass(\"ui-accordion\", \"ui-widget ui-helper-reset\"), this.element.attr(\"role\", \"tablist\"), t.collapsible || !1 !== t.active && null != t.active || (t.active = 0), this._processPanels(), t.active < 0 && (t.active += this.headers.length), this._refresh();\n      },\n      _getCreateEventData: function _getCreateEventData() {\n        return {\n          header: this.active,\n          panel: this.active.length ? this.active.next() : V()\n        };\n      },\n      _createIcons: function _createIcons() {\n        var t,\n          e = this.options.icons;\n        e && (t = V(\"<span>\"), this._addClass(t, \"ui-accordion-header-icon\", \"ui-icon \" + e.header), t.prependTo(this.headers), t = this.active.children(\".ui-accordion-header-icon\"), this._removeClass(t, e.header)._addClass(t, null, e.activeHeader)._addClass(this.headers, \"ui-accordion-icons\"));\n      },\n      _destroyIcons: function _destroyIcons() {\n        this._removeClass(this.headers, \"ui-accordion-icons\"), this.headers.children(\".ui-accordion-header-icon\").remove();\n      },\n      _destroy: function _destroy() {\n        var t;\n        this.element.removeAttr(\"role\"), this.headers.removeAttr(\"role aria-expanded aria-selected aria-controls tabIndex\").removeUniqueId(), this._destroyIcons(), t = this.headers.next().css(\"display\", \"\").removeAttr(\"role aria-hidden aria-labelledby\").removeUniqueId(), \"content\" !== this.options.heightStyle && t.css(\"height\", \"\");\n      },\n      _setOption: function _setOption(t, e) {\n        \"active\" === t ? this._activate(e) : (\"event\" === t && (this.options.event && this._off(this.headers, this.options.event), this._setupEvents(e)), this._super(t, e), \"collapsible\" !== t || e || !1 !== this.options.active || this._activate(0), \"icons\" === t && (this._destroyIcons(), e) && this._createIcons());\n      },\n      _setOptionDisabled: function _setOptionDisabled(t) {\n        this._super(t), this.element.attr(\"aria-disabled\", t), this._toggleClass(null, \"ui-state-disabled\", !!t);\n      },\n      _keydown: function _keydown(t) {\n        if (!t.altKey && !t.ctrlKey) {\n          var e = V.ui.keyCode,\n            i = this.headers.length,\n            s = this.headers.index(t.target),\n            n = !1;\n          switch (t.keyCode) {\n            case e.RIGHT:\n            case e.DOWN:\n              n = this.headers[(s + 1) % i];\n              break;\n            case e.LEFT:\n            case e.UP:\n              n = this.headers[(s - 1 + i) % i];\n              break;\n            case e.SPACE:\n            case e.ENTER:\n              this._eventHandler(t);\n              break;\n            case e.HOME:\n              n = this.headers[0];\n              break;\n            case e.END:\n              n = this.headers[i - 1];\n          }\n          n && (V(t.target).attr(\"tabIndex\", -1), V(n).attr(\"tabIndex\", 0), V(n).trigger(\"focus\"), t.preventDefault());\n        }\n      },\n      _panelKeyDown: function _panelKeyDown(t) {\n        t.keyCode === V.ui.keyCode.UP && t.ctrlKey && V(t.currentTarget).prev().trigger(\"focus\");\n      },\n      refresh: function refresh() {\n        var t = this.options;\n        this._processPanels(), !1 === t.active && !0 === t.collapsible || !this.headers.length ? (t.active = !1, this.active = V()) : !1 === t.active ? this._activate(0) : this.active.length && !V.contains(this.element[0], this.active[0]) ? this.headers.length === this.headers.find(\".ui-state-disabled\").length ? (t.active = !1, this.active = V()) : this._activate(Math.max(0, t.active - 1)) : t.active = this.headers.index(this.active), this._destroyIcons(), this._refresh();\n      },\n      _processPanels: function _processPanels() {\n        var t = this.headers,\n          e = this.panels;\n        \"function\" == typeof this.options.header ? this.headers = this.options.header(this.element) : this.headers = this.element.find(this.options.header), this._addClass(this.headers, \"ui-accordion-header ui-accordion-header-collapsed\", \"ui-state-default\"), this.panels = this.headers.next().filter(\":not(.ui-accordion-content-active)\").hide(), this._addClass(this.panels, \"ui-accordion-content\", \"ui-helper-reset ui-widget-content\"), e && (this._off(t.not(this.headers)), this._off(e.not(this.panels)));\n      },\n      _refresh: function _refresh() {\n        var i,\n          t = this.options,\n          e = t.heightStyle,\n          s = this.element.parent();\n        this.active = this._findActive(t.active), this._addClass(this.active, \"ui-accordion-header-active\", \"ui-state-active\")._removeClass(this.active, \"ui-accordion-header-collapsed\"), this._addClass(this.active.next(), \"ui-accordion-content-active\"), this.active.next().show(), this.headers.attr(\"role\", \"tab\").each(function () {\n          var t = V(this),\n            e = t.uniqueId().attr(\"id\"),\n            i = t.next(),\n            s = i.uniqueId().attr(\"id\");\n          t.attr(\"aria-controls\", s), i.attr(\"aria-labelledby\", e);\n        }).next().attr(\"role\", \"tabpanel\"), this.headers.not(this.active).attr({\n          \"aria-selected\": \"false\",\n          \"aria-expanded\": \"false\",\n          tabIndex: -1\n        }).next().attr({\n          \"aria-hidden\": \"true\"\n        }).hide(), this.active.length ? this.active.attr({\n          \"aria-selected\": \"true\",\n          \"aria-expanded\": \"true\",\n          tabIndex: 0\n        }).next().attr({\n          \"aria-hidden\": \"false\"\n        }) : this.headers.eq(0).attr(\"tabIndex\", 0), this._createIcons(), this._setupEvents(t.event), \"fill\" === e ? (i = s.height(), this.element.siblings(\":visible\").each(function () {\n          var t = V(this),\n            e = t.css(\"position\");\n          \"absolute\" !== e && \"fixed\" !== e && (i -= t.outerHeight(!0));\n        }), this.headers.each(function () {\n          i -= V(this).outerHeight(!0);\n        }), this.headers.next().each(function () {\n          V(this).height(Math.max(0, i - V(this).innerHeight() + V(this).height()));\n        }).css(\"overflow\", \"auto\")) : \"auto\" === e && (i = 0, this.headers.next().each(function () {\n          var t = V(this).is(\":visible\");\n          t || V(this).show(), i = Math.max(i, V(this).css(\"height\", \"\").height()), t || V(this).hide();\n        }).height(i));\n      },\n      _activate: function _activate(t) {\n        t = this._findActive(t)[0];\n        t !== this.active[0] && (t = t || this.active[0], this._eventHandler({\n          target: t,\n          currentTarget: t,\n          preventDefault: V.noop\n        }));\n      },\n      _findActive: function _findActive(t) {\n        return \"number\" == typeof t ? this.headers.eq(t) : V();\n      },\n      _setupEvents: function _setupEvents(t) {\n        var i = {\n          keydown: \"_keydown\"\n        };\n        t && V.each(t.split(\" \"), function (t, e) {\n          i[e] = \"_eventHandler\";\n        }), this._off(this.headers.add(this.headers.next())), this._on(this.headers, i), this._on(this.headers.next(), {\n          keydown: \"_panelKeyDown\"\n        }), this._hoverable(this.headers), this._focusable(this.headers);\n      },\n      _eventHandler: function _eventHandler(t) {\n        var e = this.options,\n          i = this.active,\n          s = V(t.currentTarget),\n          n = s[0] === i[0],\n          o = n && e.collapsible,\n          a = o ? V() : s.next(),\n          r = i.next(),\n          r = {\n            oldHeader: i,\n            oldPanel: r,\n            newHeader: o ? V() : s,\n            newPanel: a\n          };\n        t.preventDefault(), n && !e.collapsible || !1 === this._trigger(\"beforeActivate\", t, r) || (e.active = !o && this.headers.index(s), this.active = n ? V() : s, this._toggle(r), this._removeClass(i, \"ui-accordion-header-active\", \"ui-state-active\"), e.icons && (a = i.children(\".ui-accordion-header-icon\"), this._removeClass(a, null, e.icons.activeHeader)._addClass(a, null, e.icons.header)), n) || (this._removeClass(s, \"ui-accordion-header-collapsed\")._addClass(s, \"ui-accordion-header-active\", \"ui-state-active\"), e.icons && (t = s.children(\".ui-accordion-header-icon\"), this._removeClass(t, null, e.icons.header)._addClass(t, null, e.icons.activeHeader)), this._addClass(s.next(), \"ui-accordion-content-active\"));\n      },\n      _toggle: function _toggle(t) {\n        var e = t.newPanel,\n          i = this.prevShow.length ? this.prevShow : t.oldPanel;\n        this.prevShow.add(this.prevHide).stop(!0, !0), this.prevShow = e, this.prevHide = i, this.options.animate ? this._animate(e, i, t) : (i.hide(), e.show(), this._toggleComplete(t)), i.attr({\n          \"aria-hidden\": \"true\"\n        }), i.prev().attr({\n          \"aria-selected\": \"false\",\n          \"aria-expanded\": \"false\"\n        }), e.length && i.length ? i.prev().attr({\n          tabIndex: -1,\n          \"aria-expanded\": \"false\"\n        }) : e.length && this.headers.filter(function () {\n          return 0 === parseInt(V(this).attr(\"tabIndex\"), 10);\n        }).attr(\"tabIndex\", -1), e.attr(\"aria-hidden\", \"false\").prev().attr({\n          \"aria-selected\": \"true\",\n          \"aria-expanded\": \"true\",\n          tabIndex: 0\n        });\n      },\n      _animate: function _animate(t, i, e) {\n        function s() {\n          o._toggleComplete(e);\n        }\n        var n,\n          o = this,\n          a = 0,\n          r = t.css(\"box-sizing\"),\n          l = t.length && (!i.length || t.index() < i.index()),\n          h = this.options.animate || {},\n          l = l && h.down || h,\n          c = (c = \"string\" == typeof l ? l : c) || l.easing || h.easing,\n          u = (u = \"number\" == typeof l ? l : u) || l.duration || h.duration;\n        return i.length ? t.length ? (n = t.show().outerHeight(), i.animate(this.hideProps, {\n          duration: u,\n          easing: c,\n          step: function step(t, e) {\n            e.now = Math.round(t);\n          }\n        }), void t.hide().animate(this.showProps, {\n          duration: u,\n          easing: c,\n          complete: s,\n          step: function step(t, e) {\n            e.now = Math.round(t), \"height\" !== e.prop ? \"content-box\" === r && (a += e.now) : \"content\" !== o.options.heightStyle && (e.now = Math.round(n - i.outerHeight() - a), a = 0);\n          }\n        })) : i.animate(this.hideProps, u, c, s) : t.animate(this.showProps, u, c, s);\n      },\n      _toggleComplete: function _toggleComplete(t) {\n        var e = t.oldPanel,\n          i = e.prev();\n        this._removeClass(e, \"ui-accordion-content-active\"), this._removeClass(i, \"ui-accordion-header-active\")._addClass(i, \"ui-accordion-header-collapsed\"), this._trigger(\"activate\", null, t);\n      }\n    }), V.widget(\"ui.menu\", {\n      version: \"1.14.1\",\n      defaultElement: \"<ul>\",\n      delay: 300,\n      options: {\n        icons: {\n          submenu: \"ui-icon-caret-1-e\"\n        },\n        items: \"> *\",\n        menus: \"ul\",\n        position: {\n          my: \"left top\",\n          at: \"right top\"\n        },\n        role: \"menu\",\n        blur: null,\n        focus: null,\n        select: null\n      },\n      _create: function _create() {\n        this.activeMenu = this.element, this.mouseHandled = !1, this.lastMousePosition = {\n          x: null,\n          y: null\n        }, this.element.uniqueId().attr({\n          role: this.options.role,\n          tabIndex: 0\n        }), this._addClass(\"ui-menu\", \"ui-widget ui-widget-content\"), this._on({\n          \"mousedown .ui-menu-item\": function mousedown_UiMenuItem(t) {\n            t.preventDefault(), this._activateItem(t);\n          },\n          \"click .ui-menu-item\": function click_UiMenuItem(t) {\n            var e = V(t.target),\n              i = V(this.document[0].activeElement);\n            !this.mouseHandled && e.not(\".ui-state-disabled\").length && (this.select(t), t.isPropagationStopped() || (this.mouseHandled = !0), e.has(\".ui-menu\").length ? this.expand(t) : !this.element.is(\":focus\") && i.closest(\".ui-menu\").length && (this.element.trigger(\"focus\", [!0]), this.active) && 1 === this.active.parents(\".ui-menu\").length && clearTimeout(this.timer));\n          },\n          \"mouseenter .ui-menu-item\": \"_activateItem\",\n          \"mousemove .ui-menu-item\": \"_activateItem\",\n          mouseleave: \"collapseAll\",\n          \"mouseleave .ui-menu\": \"collapseAll\",\n          focus: function focus(t, e) {\n            var i = this.active || this._menuItems().first();\n            e || this.focus(t, i);\n          },\n          blur: function blur(t) {\n            this._delay(function () {\n              V.contains(this.element[0], this.document[0].activeElement) || this.collapseAll(t);\n            });\n          },\n          keydown: \"_keydown\"\n        }), this.refresh(), this._on(this.document, {\n          click: function click(t) {\n            this._closeOnDocumentClick(t) && this.collapseAll(t, !0), this.mouseHandled = !1;\n          }\n        });\n      },\n      _activateItem: function _activateItem(t) {\n        var e, i;\n        this.previousFilter || t.clientX === this.lastMousePosition.x && t.clientY === this.lastMousePosition.y || (this.lastMousePosition = {\n          x: t.clientX,\n          y: t.clientY\n        }, e = V(t.target).closest(\".ui-menu-item\"), i = V(t.currentTarget), e[0] !== i[0]) || i.is(\".ui-state-active\") || (this._removeClass(i.siblings().children(\".ui-state-active\"), null, \"ui-state-active\"), this.focus(t, i));\n      },\n      _destroy: function _destroy() {\n        var t = this.element.find(\".ui-menu-item\").removeAttr(\"role aria-disabled\").children(\".ui-menu-item-wrapper\").removeUniqueId().removeAttr(\"tabIndex role aria-haspopup\");\n        this.element.removeAttr(\"aria-activedescendant\").find(\".ui-menu\").addBack().removeAttr(\"role aria-labelledby aria-expanded aria-hidden aria-disabled tabIndex\").removeUniqueId().show(), t.children().each(function () {\n          var t = V(this);\n          t.data(\"ui-menu-submenu-caret\") && t.remove();\n        });\n      },\n      _keydown: function _keydown(t) {\n        var e,\n          i,\n          s,\n          n = !0;\n        switch (t.keyCode) {\n          case V.ui.keyCode.PAGE_UP:\n            this.previousPage(t);\n            break;\n          case V.ui.keyCode.PAGE_DOWN:\n            this.nextPage(t);\n            break;\n          case V.ui.keyCode.HOME:\n            this._move(\"first\", \"first\", t);\n            break;\n          case V.ui.keyCode.END:\n            this._move(\"last\", \"last\", t);\n            break;\n          case V.ui.keyCode.UP:\n            this.previous(t);\n            break;\n          case V.ui.keyCode.DOWN:\n            this.next(t);\n            break;\n          case V.ui.keyCode.LEFT:\n            this.collapse(t);\n            break;\n          case V.ui.keyCode.RIGHT:\n            this.active && !this.active.is(\".ui-state-disabled\") && this.expand(t);\n            break;\n          case V.ui.keyCode.ENTER:\n          case V.ui.keyCode.SPACE:\n            this._activate(t);\n            break;\n          case V.ui.keyCode.ESCAPE:\n            this.collapse(t);\n            break;\n          default:\n            e = this.previousFilter || \"\", s = n = !1, i = 96 <= t.keyCode && t.keyCode <= 105 ? (t.keyCode - 96).toString() : String.fromCharCode(t.keyCode), clearTimeout(this.filterTimer), i === e ? s = !0 : i = e + i, e = this._filterMenuItems(i), (e = s && -1 !== e.index(this.active.next()) ? this.active.nextAll(\".ui-menu-item\") : e).length || (i = String.fromCharCode(t.keyCode), e = this._filterMenuItems(i)), e.length ? (this.focus(t, e), this.previousFilter = i, this.filterTimer = this._delay(function () {\n              delete this.previousFilter;\n            }, 1e3)) : delete this.previousFilter;\n        }\n        n && t.preventDefault();\n      },\n      _activate: function _activate(t) {\n        this.active && !this.active.is(\".ui-state-disabled\") && (this.active.children(\"[aria-haspopup='true']\").length ? this.expand(t) : this.select(t));\n      },\n      refresh: function refresh() {\n        var t,\n          e,\n          s = this,\n          n = this.options.icons.submenu,\n          i = this.element.find(this.options.menus);\n        this._toggleClass(\"ui-menu-icons\", null, !!this.element.find(\".ui-icon\").length), t = i.filter(\":not(.ui-menu)\").hide().attr({\n          role: this.options.role,\n          \"aria-hidden\": \"true\",\n          \"aria-expanded\": \"false\"\n        }).each(function () {\n          var t = V(this),\n            e = t.prev(),\n            i = V(\"<span>\").data(\"ui-menu-submenu-caret\", !0);\n          s._addClass(i, \"ui-menu-icon\", \"ui-icon \" + n), e.attr(\"aria-haspopup\", \"true\").prepend(i), t.attr(\"aria-labelledby\", e.attr(\"id\"));\n        }), this._addClass(t, \"ui-menu\", \"ui-widget ui-widget-content ui-front\"), (t = i.add(this.element).find(this.options.items)).not(\".ui-menu-item\").each(function () {\n          var t = V(this);\n          s._isDivider(t) && s._addClass(t, \"ui-menu-divider\", \"ui-widget-content\");\n        }), e = (i = t.not(\".ui-menu-item, .ui-menu-divider\")).children().not(\".ui-menu\").uniqueId().attr({\n          tabIndex: -1,\n          role: this._itemRole()\n        }), this._addClass(i, \"ui-menu-item\")._addClass(e, \"ui-menu-item-wrapper\"), t.filter(\".ui-state-disabled\").attr(\"aria-disabled\", \"true\"), this.active && !V.contains(this.element[0], this.active[0]) && this.blur();\n      },\n      _itemRole: function _itemRole() {\n        return {\n          menu: \"menuitem\",\n          listbox: \"option\"\n        }[this.options.role];\n      },\n      _setOption: function _setOption(t, e) {\n        var i;\n        \"icons\" === t && (i = this.element.find(\".ui-menu-icon\"), this._removeClass(i, null, this.options.icons.submenu)._addClass(i, null, e.submenu)), this._super(t, e);\n      },\n      _setOptionDisabled: function _setOptionDisabled(t) {\n        this._super(t), this.element.attr(\"aria-disabled\", String(t)), this._toggleClass(null, \"ui-state-disabled\", !!t);\n      },\n      focus: function focus(t, e) {\n        var i;\n        this.blur(t, t && \"focus\" === t.type), this._scrollIntoView(e), this.active = e.first(), i = this.active.children(\".ui-menu-item-wrapper\"), this._addClass(i, null, \"ui-state-active\"), this.options.role && this.element.attr(\"aria-activedescendant\", i.attr(\"id\")), i = this.active.parent().closest(\".ui-menu-item\").children(\".ui-menu-item-wrapper\"), this._addClass(i, null, \"ui-state-active\"), t && \"keydown\" === t.type ? this._close() : this.timer = this._delay(function () {\n          this._close();\n        }, this.delay), (i = e.children(\".ui-menu\")).length && t && /^mouse/.test(t.type) && this._startOpening(i), this.activeMenu = e.parent(), this._trigger(\"focus\", t, {\n          item: e\n        });\n      },\n      _scrollIntoView: function _scrollIntoView(t) {\n        var e, i, s;\n        this._hasScroll() && (e = parseFloat(V.css(this.activeMenu[0], \"borderTopWidth\")) || 0, i = parseFloat(V.css(this.activeMenu[0], \"paddingTop\")) || 0, e = t.offset().top - this.activeMenu.offset().top - e - i, i = this.activeMenu.scrollTop(), s = this.activeMenu.height(), t = t.outerHeight(), e < 0 ? this.activeMenu.scrollTop(i + e) : s < e + t && this.activeMenu.scrollTop(i + e - s + t));\n      },\n      blur: function blur(t, e) {\n        e || clearTimeout(this.timer), this.active && (this._removeClass(this.active.children(\".ui-menu-item-wrapper\"), null, \"ui-state-active\"), this._trigger(\"blur\", t, {\n          item: this.active\n        }), this.active = null);\n      },\n      _startOpening: function _startOpening(t) {\n        clearTimeout(this.timer), \"true\" === t.attr(\"aria-hidden\") && (this.timer = this._delay(function () {\n          this._close(), this._open(t);\n        }, this.delay));\n      },\n      _open: function _open(t) {\n        var e = V.extend({\n          of: this.active\n        }, this.options.position);\n        clearTimeout(this.timer), this.element.find(\".ui-menu\").not(t.parents(\".ui-menu\")).hide().attr(\"aria-hidden\", \"true\"), t.show().removeAttr(\"aria-hidden\").attr(\"aria-expanded\", \"true\").position(e);\n      },\n      collapseAll: function collapseAll(e, i) {\n        clearTimeout(this.timer), this.timer = this._delay(function () {\n          var t = i ? this.element : V(e && e.target).closest(this.element.find(\".ui-menu\"));\n          t.length || (t = this.element), this._close(t), this.blur(e), this._removeClass(t.find(\".ui-state-active\"), null, \"ui-state-active\"), this.activeMenu = t;\n        }, i ? 0 : this.delay);\n      },\n      _close: function _close(t) {\n        (t = t || (this.active ? this.active.parent() : this.element)).find(\".ui-menu\").hide().attr(\"aria-hidden\", \"true\").attr(\"aria-expanded\", \"false\");\n      },\n      _closeOnDocumentClick: function _closeOnDocumentClick(t) {\n        return !V(t.target).closest(\".ui-menu\").length;\n      },\n      _isDivider: function _isDivider(t) {\n        return !/[^\\-\\u2014\\u2013\\s]/.test(t.text());\n      },\n      collapse: function collapse(t) {\n        var e = this.active && this.active.parent().closest(\".ui-menu-item\", this.element);\n        e && e.length && (this._close(), this.focus(t, e));\n      },\n      expand: function expand(t) {\n        var e = this.active && this._menuItems(this.active.children(\".ui-menu\")).first();\n        e && e.length && (this._open(e.parent()), this._delay(function () {\n          this.focus(t, e);\n        }));\n      },\n      next: function next(t) {\n        this._move(\"next\", \"first\", t);\n      },\n      previous: function previous(t) {\n        this._move(\"prev\", \"last\", t);\n      },\n      isFirstItem: function isFirstItem() {\n        return this.active && !this.active.prevAll(\".ui-menu-item\").length;\n      },\n      isLastItem: function isLastItem() {\n        return this.active && !this.active.nextAll(\".ui-menu-item\").length;\n      },\n      _menuItems: function _menuItems(t) {\n        return (t || this.element).find(this.options.items).filter(\".ui-menu-item\");\n      },\n      _move: function _move(t, e, i) {\n        var s;\n        (s = this.active ? \"first\" === t || \"last\" === t ? this.active[\"first\" === t ? \"prevAll\" : \"nextAll\"](\".ui-menu-item\").last() : this.active[t + \"All\"](\".ui-menu-item\").first() : s) && s.length && this.active || (s = this._menuItems(this.activeMenu)[e]()), this.focus(i, s);\n      },\n      nextPage: function nextPage(t) {\n        var e, i, s;\n        this.active ? this.isLastItem() || (this._hasScroll() ? (i = this.active.offset().top, s = this.element.innerHeight(), 0 === V.fn.jquery.indexOf(\"3.2.\") && (s += this.element[0].offsetHeight - this.element.outerHeight()), this.active.nextAll(\".ui-menu-item\").each(function () {\n          return (e = V(this)).offset().top - i - s < 0;\n        }), this.focus(t, e)) : this.focus(t, this._menuItems(this.activeMenu)[this.active ? \"last\" : \"first\"]())) : this.next(t);\n      },\n      previousPage: function previousPage(t) {\n        var e, i, s;\n        this.active ? this.isFirstItem() || (this._hasScroll() ? (i = this.active.offset().top, s = this.element.innerHeight(), 0 === V.fn.jquery.indexOf(\"3.2.\") && (s += this.element[0].offsetHeight - this.element.outerHeight()), this.active.prevAll(\".ui-menu-item\").each(function () {\n          return 0 < (e = V(this)).offset().top - i + s;\n        }), this.focus(t, e)) : this.focus(t, this._menuItems(this.activeMenu).first())) : this.next(t);\n      },\n      _hasScroll: function _hasScroll() {\n        return this.element.outerHeight() < this.element.prop(\"scrollHeight\");\n      },\n      select: function select(t) {\n        this.active = this.active || V(t.target).closest(\".ui-menu-item\");\n        var e = {\n          item: this.active\n        };\n        this.active.has(\".ui-menu\").length || this.collapseAll(t, !0), this._trigger(\"select\", t, e);\n      },\n      _filterMenuItems: function _filterMenuItems(t) {\n        var t = t.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\"),\n          e = new RegExp(\"^\" + t, \"i\");\n        return this.activeMenu.find(this.options.items).filter(\".ui-menu-item\").filter(function () {\n          return e.test(String.prototype.trim.call(V(this).children(\".ui-menu-item-wrapper\").text()));\n        });\n      }\n    }), V.widget(\"ui.autocomplete\", {\n      version: \"1.14.1\",\n      defaultElement: \"<input>\",\n      options: {\n        appendTo: null,\n        autoFocus: !1,\n        delay: 300,\n        minLength: 1,\n        position: {\n          my: \"left top\",\n          at: \"left bottom\",\n          collision: \"none\"\n        },\n        source: null,\n        change: null,\n        close: null,\n        focus: null,\n        open: null,\n        response: null,\n        search: null,\n        select: null\n      },\n      requestIndex: 0,\n      pending: 0,\n      liveRegionTimer: null,\n      _create: function _create() {\n        var i,\n          s,\n          n,\n          t = this.element[0].nodeName.toLowerCase(),\n          e = \"textarea\" === t,\n          t = \"input\" === t;\n        this.isMultiLine = e || !t && \"true\" === this.element.prop(\"contentEditable\"), this.valueMethod = this.element[e || t ? \"val\" : \"text\"], this.isNewMenu = !0, this._addClass(\"ui-autocomplete-input\"), this.element.attr(\"autocomplete\", \"off\"), this._on(this.element, {\n          keydown: function keydown(t) {\n            if (this.element.prop(\"readOnly\")) s = n = i = !0;else {\n              s = n = i = !1;\n              var e = V.ui.keyCode;\n              switch (t.keyCode) {\n                case e.PAGE_UP:\n                  i = !0, this._move(\"previousPage\", t);\n                  break;\n                case e.PAGE_DOWN:\n                  i = !0, this._move(\"nextPage\", t);\n                  break;\n                case e.UP:\n                  i = !0, this._keyEvent(\"previous\", t);\n                  break;\n                case e.DOWN:\n                  i = !0, this._keyEvent(\"next\", t);\n                  break;\n                case e.ENTER:\n                  this.menu.active && (i = !0, t.preventDefault(), this.menu.select(t));\n                  break;\n                case e.TAB:\n                  this.menu.active && this.menu.select(t);\n                  break;\n                case e.ESCAPE:\n                  this.menu.element.is(\":visible\") && (this.isMultiLine || this._value(this.term), this.close(t), t.preventDefault());\n                  break;\n                default:\n                  s = !0, this._searchTimeout(t);\n              }\n            }\n          },\n          keypress: function keypress(t) {\n            if (i) i = !1, this.isMultiLine && !this.menu.element.is(\":visible\") || t.preventDefault();else if (!s) {\n              var e = V.ui.keyCode;\n              switch (t.keyCode) {\n                case e.PAGE_UP:\n                  this._move(\"previousPage\", t);\n                  break;\n                case e.PAGE_DOWN:\n                  this._move(\"nextPage\", t);\n                  break;\n                case e.UP:\n                  this._keyEvent(\"previous\", t);\n                  break;\n                case e.DOWN:\n                  this._keyEvent(\"next\", t);\n              }\n            }\n          },\n          input: function input(t) {\n            n ? (n = !1, t.preventDefault()) : this._searchTimeout(t);\n          },\n          focus: function focus() {\n            this.selectedItem = null, this.previous = this._value();\n          },\n          blur: function blur(t) {\n            clearTimeout(this.searching), this.close(t), this._change(t);\n          }\n        }), this._initSource(), this.menu = V(\"<ul>\").appendTo(this._appendTo()).menu({\n          role: null\n        }).hide().menu(\"instance\"), this._addClass(this.menu.element, \"ui-autocomplete\", \"ui-front\"), this._on(this.menu.element, {\n          mousedown: function mousedown(t) {\n            t.preventDefault();\n          },\n          menufocus: function menufocus(t, e) {\n            var i, s;\n            this.isNewMenu && (this.isNewMenu = !1, t.originalEvent) && /^mouse/.test(t.originalEvent.type) ? (this.menu.blur(), this.document.one(\"mousemove\", function () {\n              V(t.target).trigger(t.originalEvent);\n            })) : (s = e.item.data(\"ui-autocomplete-item\"), !1 !== this._trigger(\"focus\", t, {\n              item: s\n            }) && t.originalEvent && /^key/.test(t.originalEvent.type) && this._value(s.value), (i = e.item.attr(\"aria-label\") || s.value) && String.prototype.trim.call(i).length && (clearTimeout(this.liveRegionTimer), this.liveRegionTimer = this._delay(function () {\n              this.liveRegion.html(V(\"<div>\").text(i));\n            }, 100)));\n          },\n          menuselect: function menuselect(t, e) {\n            var e = e.item.data(\"ui-autocomplete-item\"),\n              i = this.previous;\n            this.element[0] !== this.document[0].activeElement && (this.element.trigger(\"focus\"), this.previous = i), !1 !== this._trigger(\"select\", t, {\n              item: e\n            }) && this._value(e.value), this.term = this._value(), this.close(t), this.selectedItem = e;\n          }\n        }), this.liveRegion = V(\"<div>\", {\n          role: \"status\",\n          \"aria-live\": \"assertive\",\n          \"aria-relevant\": \"additions\"\n        }).appendTo(this.document[0].body), this._addClass(this.liveRegion, null, \"ui-helper-hidden-accessible\"), this._on(this.window, {\n          beforeunload: function beforeunload() {\n            this.element.removeAttr(\"autocomplete\");\n          }\n        });\n      },\n      _destroy: function _destroy() {\n        clearTimeout(this.searching), this.element.removeAttr(\"autocomplete\"), this.menu.element.remove(), this.liveRegion.remove();\n      },\n      _setOption: function _setOption(t, e) {\n        this._super(t, e), \"source\" === t && this._initSource(), \"appendTo\" === t && this.menu.element.appendTo(this._appendTo()), \"disabled\" === t && e && this.xhr && this.xhr.abort();\n      },\n      _isEventTargetInWidget: function _isEventTargetInWidget(t) {\n        var e = this.menu.element[0];\n        return t.target === this.element[0] || t.target === e || V.contains(e, t.target);\n      },\n      _closeOnClickOutside: function _closeOnClickOutside(t) {\n        this._isEventTargetInWidget(t) || this.close();\n      },\n      _appendTo: function _appendTo() {\n        var t = this.options.appendTo;\n        return t = (t = (t = t && (t.jquery || t.nodeType ? V(t) : this.document.find(t).eq(0))) && t[0] ? t : this.element.closest(\".ui-front, dialog\")).length ? t : this.document[0].body;\n      },\n      _initSource: function _initSource() {\n        var i,\n          s,\n          n = this;\n        Array.isArray(this.options.source) ? (i = this.options.source, this.source = function (t, e) {\n          e(V.ui.autocomplete.filter(i, t.term));\n        }) : \"string\" == typeof this.options.source ? (s = this.options.source, this.source = function (t, e) {\n          n.xhr && n.xhr.abort(), n.xhr = V.ajax({\n            url: s,\n            data: t,\n            dataType: \"json\",\n            success: function success(t) {\n              e(t);\n            },\n            error: function error() {\n              e([]);\n            }\n          });\n        }) : this.source = this.options.source;\n      },\n      _searchTimeout: function _searchTimeout(s) {\n        clearTimeout(this.searching), this.searching = this._delay(function () {\n          var t = this.term === this._value(),\n            e = this.menu.element.is(\":visible\"),\n            i = s.altKey || s.ctrlKey || s.metaKey || s.shiftKey;\n          t && (e || i) || (this.selectedItem = null, this.search(null, s));\n        }, this.options.delay);\n      },\n      search: function search(t, e) {\n        return t = null != t ? t : this._value(), this.term = this._value(), t.length < this.options.minLength ? this.close(e) : !1 !== this._trigger(\"search\", e) ? this._search(t) : void 0;\n      },\n      _search: function _search(t) {\n        this.pending++, this._addClass(\"ui-autocomplete-loading\"), this.cancelSearch = !1, this.source({\n          term: t\n        }, this._response());\n      },\n      _response: function _response() {\n        var e = ++this.requestIndex;\n        return function (t) {\n          e === this.requestIndex && this.__response(t), this.pending--, this.pending || this._removeClass(\"ui-autocomplete-loading\");\n        }.bind(this);\n      },\n      __response: function __response(t) {\n        t = t && this._normalize(t), this._trigger(\"response\", null, {\n          content: t\n        }), !this.options.disabled && t && t.length && !this.cancelSearch ? (this._suggest(t), this._trigger(\"open\")) : this._close();\n      },\n      close: function close(t) {\n        this.cancelSearch = !0, this._close(t);\n      },\n      _close: function _close(t) {\n        this._off(this.document, \"mousedown\"), this.menu.element.is(\":visible\") && (this.menu.element.hide(), this.menu.blur(), this.isNewMenu = !0, this._trigger(\"close\", t));\n      },\n      _change: function _change(t) {\n        this.previous !== this._value() && this._trigger(\"change\", t, {\n          item: this.selectedItem\n        });\n      },\n      _normalize: function _normalize(t) {\n        return t.length && t[0].label && t[0].value ? t : V.map(t, function (t) {\n          return \"string\" == typeof t ? {\n            label: t,\n            value: t\n          } : V.extend({}, t, {\n            label: t.label || t.value,\n            value: t.value || t.label\n          });\n        });\n      },\n      _suggest: function _suggest(t) {\n        var e = this.menu.element.empty();\n        this._renderMenu(e, t), this.isNewMenu = !0, this.menu.refresh(), e.show(), this._resizeMenu(), e.position(V.extend({\n          of: this.element\n        }, this.options.position)), this.options.autoFocus && this.menu.next(), this._on(this.document, {\n          mousedown: \"_closeOnClickOutside\"\n        });\n      },\n      _resizeMenu: function _resizeMenu() {\n        var t = this.menu.element;\n        t.outerWidth(Math.max(t.width(\"\").outerWidth() + 1, this.element.outerWidth()));\n      },\n      _renderMenu: function _renderMenu(i, t) {\n        var s = this;\n        V.each(t, function (t, e) {\n          s._renderItemData(i, e);\n        });\n      },\n      _renderItemData: function _renderItemData(t, e) {\n        return this._renderItem(t, e).data(\"ui-autocomplete-item\", e);\n      },\n      _renderItem: function _renderItem(t, e) {\n        return V(\"<li>\").append(V(\"<div>\").text(e.label)).appendTo(t);\n      },\n      _move: function _move(t, e) {\n        this.menu.element.is(\":visible\") ? this.menu.isFirstItem() && /^previous/.test(t) || this.menu.isLastItem() && /^next/.test(t) ? (this.isMultiLine || this._value(this.term), this.menu.blur()) : this.menu[t](e) : this.search(null, e);\n      },\n      widget: function widget() {\n        return this.menu.element;\n      },\n      _value: function _value() {\n        return this.valueMethod.apply(this.element, arguments);\n      },\n      _keyEvent: function _keyEvent(t, e) {\n        this.isMultiLine && !this.menu.element.is(\":visible\") || (this._move(t, e), e.preventDefault());\n      }\n    }), V.extend(V.ui.autocomplete, {\n      escapeRegex: function escapeRegex(t) {\n        return t.replace(/[\\-\\[\\]{}()*+?.,\\\\\\^$|#\\s]/g, \"\\\\$&\");\n      },\n      filter: function filter(t, e) {\n        var i = new RegExp(V.ui.autocomplete.escapeRegex(e), \"i\");\n        return V.grep(t, function (t) {\n          return i.test(t.label || t.value || t);\n        });\n      }\n    }), V.widget(\"ui.autocomplete\", V.ui.autocomplete, {\n      options: {\n        messages: {\n          noResults: \"No search results.\",\n          results: function results(t) {\n            return t + (1 < t ? \" results are\" : \" result is\") + \" available, use up and down arrow keys to navigate.\";\n          }\n        }\n      },\n      __response: function __response(t) {\n        var e;\n        this._superApply(arguments), this.options.disabled || this.cancelSearch || (e = t && t.length ? this.options.messages.results(t.length) : this.options.messages.noResults, clearTimeout(this.liveRegionTimer), this.liveRegionTimer = this._delay(function () {\n          this.liveRegion.html(V(\"<div>\").text(e));\n        }, 100));\n      }\n    }), V.ui.autocomplete, /ui-corner-([a-z]){2,6}/g);\n  V.widget(\"ui.controlgroup\", {\n    version: \"1.14.1\",\n    defaultElement: \"<div>\",\n    options: {\n      direction: \"horizontal\",\n      disabled: null,\n      onlyVisible: !0,\n      items: {\n        button: \"input[type=button], input[type=submit], input[type=reset], button, a\",\n        controlgroupLabel: \".ui-controlgroup-label\",\n        checkboxradio: \"input[type='checkbox'], input[type='radio']\",\n        selectmenu: \"select\",\n        spinner: \".ui-spinner-input\"\n      }\n    },\n    _create: function _create() {\n      this._enhance();\n    },\n    _enhance: function _enhance() {\n      this.element.attr(\"role\", \"toolbar\"), this.refresh();\n    },\n    _destroy: function _destroy() {\n      this._callChildMethod(\"destroy\"), this.childWidgets.removeData(\"ui-controlgroup-data\"), this.element.removeAttr(\"role\"), this.options.items.controlgroupLabel && this.element.find(this.options.items.controlgroupLabel).find(\".ui-controlgroup-label-contents\").contents().unwrap();\n    },\n    _initWidgets: function _initWidgets() {\n      var o = this,\n        a = [];\n      V.each(this.options.items, function (s, t) {\n        var e,\n          n = {};\n        t && (\"controlgroupLabel\" === s ? ((e = o.element.find(t)).each(function () {\n          var t = V(this);\n          t.children(\".ui-controlgroup-label-contents\").length || t.contents().wrapAll(\"<span class='ui-controlgroup-label-contents'></span>\");\n        }), o._addClass(e, null, \"ui-widget ui-widget-content ui-state-default\"), a = a.concat(e.get())) : V.fn[s] && (n = o[\"_\" + s + \"Options\"] ? o[\"_\" + s + \"Options\"](\"middle\") : {\n          classes: {}\n        }, o.element.find(t).each(function () {\n          var t = V(this),\n            e = t[s](\"instance\"),\n            i = V.widget.extend({}, n);\n          \"button\" === s && t.parent(\".ui-spinner\").length || ((e = e || t[s]()[s](\"instance\")) && (i.classes = o._resolveClassesValues(i.classes, e)), t[s](i), i = t[s](\"widget\"), V.data(i[0], \"ui-controlgroup-data\", e || t[s](\"instance\")), a.push(i[0]));\n        })));\n      }), this.childWidgets = V(V.uniqueSort(a)), this._addClass(this.childWidgets, \"ui-controlgroup-item\");\n    },\n    _callChildMethod: function _callChildMethod(e) {\n      this.childWidgets.each(function () {\n        var t = V(this).data(\"ui-controlgroup-data\");\n        t && t[e] && t[e]();\n      });\n    },\n    _updateCornerClass: function _updateCornerClass(t, e) {\n      e = this._buildSimpleOptions(e, \"label\").classes.label;\n      this._removeClass(t, null, \"ui-corner-top ui-corner-bottom ui-corner-left ui-corner-right ui-corner-all\"), this._addClass(t, null, e);\n    },\n    _buildSimpleOptions: function _buildSimpleOptions(t, e) {\n      var i = \"vertical\" === this.options.direction,\n        s = {\n          classes: {}\n        };\n      return s.classes[e] = {\n        middle: \"\",\n        first: \"ui-corner-\" + (i ? \"top\" : \"left\"),\n        last: \"ui-corner-\" + (i ? \"bottom\" : \"right\"),\n        only: \"ui-corner-all\"\n      }[t], s;\n    },\n    _spinnerOptions: function _spinnerOptions(t) {\n      t = this._buildSimpleOptions(t, \"ui-spinner\");\n      return t.classes[\"ui-spinner-up\"] = \"\", t.classes[\"ui-spinner-down\"] = \"\", t;\n    },\n    _buttonOptions: function _buttonOptions(t) {\n      return this._buildSimpleOptions(t, \"ui-button\");\n    },\n    _checkboxradioOptions: function _checkboxradioOptions(t) {\n      return this._buildSimpleOptions(t, \"ui-checkboxradio-label\");\n    },\n    _selectmenuOptions: function _selectmenuOptions(t) {\n      var e = \"vertical\" === this.options.direction;\n      return {\n        width: e && \"auto\",\n        classes: {\n          middle: {\n            \"ui-selectmenu-button-open\": \"\",\n            \"ui-selectmenu-button-closed\": \"\"\n          },\n          first: {\n            \"ui-selectmenu-button-open\": \"ui-corner-\" + (e ? \"top\" : \"tl\"),\n            \"ui-selectmenu-button-closed\": \"ui-corner-\" + (e ? \"top\" : \"left\")\n          },\n          last: {\n            \"ui-selectmenu-button-open\": e ? \"\" : \"ui-corner-tr\",\n            \"ui-selectmenu-button-closed\": \"ui-corner-\" + (e ? \"bottom\" : \"right\")\n          },\n          only: {\n            \"ui-selectmenu-button-open\": \"ui-corner-top\",\n            \"ui-selectmenu-button-closed\": \"ui-corner-all\"\n          }\n        }[t]\n      };\n    },\n    _resolveClassesValues: function _resolveClassesValues(i, s) {\n      var n = {};\n      return V.each(i, function (t) {\n        var e = s.options.classes[t] || \"\",\n          e = String.prototype.trim.call(e.replace(st, \"\"));\n        n[t] = (e + \" \" + i[t]).replace(/\\s+/g, \" \");\n      }), n;\n    },\n    _setOption: function _setOption(t, e) {\n      \"direction\" === t && this._removeClass(\"ui-controlgroup-\" + this.options.direction), this._super(t, e), \"disabled\" === t ? this._callChildMethod(e ? \"disable\" : \"enable\") : this.refresh();\n    },\n    refresh: function refresh() {\n      var n,\n        o = this;\n      this._addClass(\"ui-controlgroup ui-controlgroup-\" + this.options.direction), \"horizontal\" === this.options.direction && this._addClass(null, \"ui-helper-clearfix\"), this._initWidgets(), n = this.childWidgets, (n = this.options.onlyVisible ? n.filter(\":visible\") : n).length && (V.each([\"first\", \"last\"], function (t, e) {\n        var i,\n          s = n[e]().data(\"ui-controlgroup-data\");\n        s && o[\"_\" + s.widgetName + \"Options\"] ? ((i = o[\"_\" + s.widgetName + \"Options\"](1 === n.length ? \"only\" : e)).classes = o._resolveClassesValues(i.classes, s), s.element[s.widgetName](i)) : o._updateCornerClass(n[e](), e);\n      }), this._callChildMethod(\"refresh\"));\n    }\n  }), V.widget(\"ui.checkboxradio\", [V.ui.formResetMixin, {\n    version: \"1.14.1\",\n    options: {\n      disabled: null,\n      label: null,\n      icon: !0,\n      classes: {\n        \"ui-checkboxradio-label\": \"ui-corner-all\",\n        \"ui-checkboxradio-icon\": \"ui-corner-all\"\n      }\n    },\n    _getCreateOptions: function _getCreateOptions() {\n      var t,\n        e = this._super() || {};\n      return this._readType(), t = this.element.labels(), this.label = V(t[t.length - 1]), this.label.length || V.error(\"No label found for checkboxradio widget\"), this.originalLabel = \"\", (t = this.label.contents().not(this.element[0])).length && (this.originalLabel += t.clone().wrapAll(\"<div></div>\").parent().html()), this.originalLabel && (e.label = this.originalLabel), null != (t = this.element[0].disabled) && (e.disabled = t), e;\n    },\n    _create: function _create() {\n      var t = this.element[0].checked;\n      this._bindFormResetHandler(), null == this.options.disabled && (this.options.disabled = this.element[0].disabled), this._setOption(\"disabled\", this.options.disabled), this._addClass(\"ui-checkboxradio\", \"ui-helper-hidden-accessible\"), this._addClass(this.label, \"ui-checkboxradio-label\", \"ui-button ui-widget\"), \"radio\" === this.type && this._addClass(this.label, \"ui-checkboxradio-radio-label\"), this.options.label && this.options.label !== this.originalLabel ? this._updateLabel() : this.originalLabel && (this.options.label = this.originalLabel), this._enhance(), t && this._addClass(this.label, \"ui-checkboxradio-checked\", \"ui-state-active\"), this._on({\n        change: \"_toggleClasses\",\n        focus: function focus() {\n          this._addClass(this.label, null, \"ui-state-focus ui-visual-focus\");\n        },\n        blur: function blur() {\n          this._removeClass(this.label, null, \"ui-state-focus ui-visual-focus\");\n        }\n      });\n    },\n    _readType: function _readType() {\n      var t = this.element[0].nodeName.toLowerCase();\n      this.type = this.element[0].type, \"input\" === t && /radio|checkbox/.test(this.type) || V.error(\"Can't create checkboxradio on element.nodeName=\" + t + \" and element.type=\" + this.type);\n    },\n    _enhance: function _enhance() {\n      this._updateIcon(this.element[0].checked);\n    },\n    widget: function widget() {\n      return this.label;\n    },\n    _getRadioGroup: function _getRadioGroup() {\n      var t = this.element[0].name,\n        e = \"input[name='\" + CSS.escape(t) + \"']\";\n      return t ? (this.form.length ? V(this.form[0].elements).filter(e) : V(e).filter(function () {\n        return 0 === V(V(this).prop(\"form\")).length;\n      })).not(this.element) : V([]);\n    },\n    _toggleClasses: function _toggleClasses() {\n      var t = this.element[0].checked;\n      this._toggleClass(this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", t), this.options.icon && \"checkbox\" === this.type && this._toggleClass(this.icon, null, \"ui-icon-check ui-state-checked\", t)._toggleClass(this.icon, null, \"ui-icon-blank\", !t), \"radio\" === this.type && this._getRadioGroup().each(function () {\n        var t = V(this).checkboxradio(\"instance\");\n        t && t._removeClass(t.label, \"ui-checkboxradio-checked\", \"ui-state-active\");\n      });\n    },\n    _destroy: function _destroy() {\n      this._unbindFormResetHandler(), this.icon && (this.icon.remove(), this.iconSpace.remove());\n    },\n    _setOption: function _setOption(t, e) {\n      \"label\" === t && !e || (this._super(t, e), \"disabled\" === t ? (this._toggleClass(this.label, null, \"ui-state-disabled\", e), this.element[0].disabled = e) : this.refresh());\n    },\n    _updateIcon: function _updateIcon(t) {\n      var e = \"ui-icon ui-icon-background \";\n      this.options.icon ? (this.icon || (this.icon = V(\"<span>\"), this.iconSpace = V(\"<span> </span>\"), this._addClass(this.iconSpace, \"ui-checkboxradio-icon-space\")), \"checkbox\" === this.type ? (e += t ? \"ui-icon-check ui-state-checked\" : \"ui-icon-blank\", this._removeClass(this.icon, null, t ? \"ui-icon-blank\" : \"ui-icon-check\")) : e += \"ui-icon-blank\", this._addClass(this.icon, \"ui-checkboxradio-icon\", e), t || this._removeClass(this.icon, null, \"ui-icon-check ui-state-checked\"), this.icon.prependTo(this.label).after(this.iconSpace)) : void 0 !== this.icon && (this.icon.remove(), this.iconSpace.remove(), delete this.icon);\n    },\n    _updateLabel: function _updateLabel() {\n      var t = this.label.contents().not(this.element[0]);\n      this.icon && (t = t.not(this.icon[0])), (t = this.iconSpace ? t.not(this.iconSpace[0]) : t).remove(), this.label.append(this.options.label);\n    },\n    refresh: function refresh() {\n      var t = this.element[0].checked,\n        e = this.element[0].disabled;\n      this._updateIcon(t), this._toggleClass(this.label, \"ui-checkboxradio-checked\", \"ui-state-active\", t), null !== this.options.label && this._updateLabel(), e !== this.options.disabled && this._setOptions({\n        disabled: e\n      });\n    }\n  }]), V.ui.checkboxradio, V.widget(\"ui.button\", {\n    version: \"1.14.1\",\n    defaultElement: \"<button>\",\n    options: {\n      classes: {\n        \"ui-button\": \"ui-corner-all\"\n      },\n      disabled: null,\n      icon: null,\n      iconPosition: \"beginning\",\n      label: null,\n      showLabel: !0\n    },\n    _getCreateOptions: function _getCreateOptions() {\n      var t,\n        e = this._super() || {};\n      return this.isInput = this.element.is(\"input\"), null != (t = this.element[0].disabled) && (e.disabled = t), this.originalLabel = this.isInput ? this.element.val() : this.element.html(), this.originalLabel && (e.label = this.originalLabel), e;\n    },\n    _create: function _create() {\n      !this.option.showLabel & !this.options.icon && (this.options.showLabel = !0), null == this.options.disabled && (this.options.disabled = this.element[0].disabled || !1), this.hasTitle = !!this.element.attr(\"title\"), this.options.label && this.options.label !== this.originalLabel && (this.isInput ? this.element.val(this.options.label) : this.element.html(this.options.label)), this._addClass(\"ui-button\", \"ui-widget\"), this._setOption(\"disabled\", this.options.disabled), this._enhance(), this.element.is(\"a\") && this._on({\n        keyup: function keyup(t) {\n          t.keyCode === V.ui.keyCode.SPACE && (t.preventDefault(), this.element[0].click ? this.element[0].click() : this.element.trigger(\"click\"));\n        }\n      });\n    },\n    _enhance: function _enhance() {\n      this.element.is(\"button\") || this.element.attr(\"role\", \"button\"), this.options.icon && (this._updateIcon(\"icon\", this.options.icon), this._updateTooltip());\n    },\n    _updateTooltip: function _updateTooltip() {\n      this.title = this.element.attr(\"title\"), this.options.showLabel || this.title || this.element.attr(\"title\", this.options.label);\n    },\n    _updateIcon: function _updateIcon(t, e) {\n      var t = \"iconPosition\" !== t,\n        i = t ? this.options.iconPosition : e,\n        s = \"top\" === i || \"bottom\" === i;\n      this.icon ? t && this._removeClass(this.icon, null, this.options.icon) : (this.icon = V(\"<span>\"), this._addClass(this.icon, \"ui-button-icon\", \"ui-icon\"), this.options.showLabel || this._addClass(\"ui-button-icon-only\")), t && this._addClass(this.icon, null, e), this._attachIcon(i), s ? (this._addClass(this.icon, null, \"ui-widget-icon-block\"), this.iconSpace && this.iconSpace.remove()) : (this.iconSpace || (this.iconSpace = V(\"<span> </span>\"), this._addClass(this.iconSpace, \"ui-button-icon-space\")), this._removeClass(this.icon, null, \"ui-wiget-icon-block\"), this._attachIconSpace(i));\n    },\n    _destroy: function _destroy() {\n      this.element.removeAttr(\"role\"), this.icon && this.icon.remove(), this.iconSpace && this.iconSpace.remove(), this.hasTitle || this.element.removeAttr(\"title\");\n    },\n    _attachIconSpace: function _attachIconSpace(t) {\n      this.icon[/^(?:end|bottom)/.test(t) ? \"before\" : \"after\"](this.iconSpace);\n    },\n    _attachIcon: function _attachIcon(t) {\n      this.element[/^(?:end|bottom)/.test(t) ? \"append\" : \"prepend\"](this.icon);\n    },\n    _setOptions: function _setOptions(t) {\n      var e = (void 0 === t.showLabel ? this.options : t).showLabel,\n        i = (void 0 === t.icon ? this.options : t).icon;\n      e || i || (t.showLabel = !0), this._super(t);\n    },\n    _setOption: function _setOption(t, e) {\n      \"icon\" === t && (e ? this._updateIcon(t, e) : this.icon && (this.icon.remove(), this.iconSpace) && this.iconSpace.remove()), \"iconPosition\" === t && this._updateIcon(t, e), \"showLabel\" === t && (this._toggleClass(\"ui-button-icon-only\", null, !e), this._updateTooltip()), \"label\" === t && (this.isInput ? this.element.val(e) : (this.element.html(e), this.icon && (this._attachIcon(this.options.iconPosition), this._attachIconSpace(this.options.iconPosition)))), this._super(t, e), \"disabled\" === t && (this._toggleClass(null, \"ui-state-disabled\", e), this.element[0].disabled = e) && this.element.trigger(\"blur\");\n    },\n    refresh: function refresh() {\n      var t = this.element.is(\"input, button\") ? this.element[0].disabled : this.element.hasClass(\"ui-button-disabled\");\n      t !== this.options.disabled && this._setOptions({\n        disabled: t\n      }), this._updateTooltip();\n    }\n  }), !0 === V.uiBackCompat && (V.widget(\"ui.button\", V.ui.button, {\n    options: {\n      text: !0,\n      icons: {\n        primary: null,\n        secondary: null\n      }\n    },\n    _create: function _create() {\n      this.options.showLabel && !this.options.text && (this.options.showLabel = this.options.text), !this.options.showLabel && this.options.text && (this.options.text = this.options.showLabel), this.options.icon || !this.options.icons.primary && !this.options.icons.secondary ? this.options.icon && (this.options.icons.primary = this.options.icon) : this.options.icons.primary ? this.options.icon = this.options.icons.primary : (this.options.icon = this.options.icons.secondary, this.options.iconPosition = \"end\"), this._super();\n    },\n    _setOption: function _setOption(t, e) {\n      \"text\" === t ? this._super(\"showLabel\", e) : (\"showLabel\" === t && (this.options.text = e), \"icon\" === t && (this.options.icons.primary = e), \"icons\" === t && (e.primary ? (this._super(\"icon\", e.primary), this._super(\"iconPosition\", \"beginning\")) : e.secondary && (this._super(\"icon\", e.secondary), this._super(\"iconPosition\", \"end\"))), this._superApply(arguments));\n    }\n  }), V.fn.button = (et = V.fn.button, function (i) {\n    var t = \"string\" == typeof i,\n      s = Array.prototype.slice.call(arguments, 1),\n      n = this;\n    return t ? this.length || \"instance\" !== i ? this.each(function () {\n      var t,\n        e = V(this).attr(\"type\"),\n        e = V.data(this, \"ui-\" + (\"checkbox\" !== e && \"radio\" !== e ? \"button\" : \"checkboxradio\"));\n      return \"instance\" === i ? (n = e, !1) : e ? \"function\" != typeof e[i] || \"_\" === i.charAt(0) ? V.error(\"no such method '\" + i + \"' for button widget instance\") : (t = e[i].apply(e, s)) !== e && void 0 !== t ? (n = t && t.jquery ? n.pushStack(t.get()) : t, !1) : void 0 : V.error(\"cannot call methods on button prior to initialization; attempted to call method '\" + i + \"'\");\n    }) : n = void 0 : (s.length && (i = V.widget.extend.apply(null, [i].concat(s))), this.each(function () {\n      var t = V(this).attr(\"type\"),\n        t = \"checkbox\" !== t && \"radio\" !== t ? \"button\" : \"checkboxradio\",\n        e = V.data(this, \"ui-\" + t);\n      e ? (e.option(i || {}), e._init && e._init()) : \"button\" == t ? et.call(V(this), i) : V(this).checkboxradio(V.extend({\n        icon: !1\n      }, i));\n    })), n;\n  }), V.fn.buttonset = function () {\n    return V.ui.controlgroup || V.error(\"Controlgroup widget missing\"), \"option\" === arguments[0] && \"items\" === arguments[1] && arguments[2] ? this.controlgroup.apply(this, [arguments[0], \"items.button\", arguments[2]]) : \"option\" === arguments[0] && \"items\" === arguments[1] ? this.controlgroup.apply(this, [arguments[0], \"items.button\"]) : (\"object\" == _typeof(arguments[0]) && arguments[0].items && (arguments[0].items = {\n      button: arguments[0].items\n    }), this.controlgroup.apply(this, arguments));\n  }), V.ui.button;\n  function nt() {\n    this._curInst = null, this._keyEvent = !1, this._disabledInputs = [], this._datepickerShowing = !1, this._inDialog = !1, this._mainDivId = \"ui-datepicker-div\", this._inlineClass = \"ui-datepicker-inline\", this._appendClass = \"ui-datepicker-append\", this._triggerClass = \"ui-datepicker-trigger\", this._dialogClass = \"ui-datepicker-dialog\", this._disableClass = \"ui-datepicker-disabled\", this._unselectableClass = \"ui-datepicker-unselectable\", this._currentClass = \"ui-datepicker-current-day\", this._dayOverClass = \"ui-datepicker-days-cell-over\", this.regional = [], this.regional[\"\"] = {\n      closeText: \"Done\",\n      prevText: \"Prev\",\n      nextText: \"Next\",\n      currentText: \"Today\",\n      monthNames: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      monthNamesShort: [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sep\", \"Oct\", \"Nov\", \"Dec\"],\n      dayNames: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      dayNamesShort: [\"Sun\", \"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\"],\n      dayNamesMin: [\"Su\", \"Mo\", \"Tu\", \"We\", \"Th\", \"Fr\", \"Sa\"],\n      weekHeader: \"Wk\",\n      dateFormat: \"mm/dd/yy\",\n      firstDay: 0,\n      isRTL: !1,\n      showMonthAfterYear: !1,\n      yearSuffix: \"\",\n      selectMonthLabel: \"Select month\",\n      selectYearLabel: \"Select year\"\n    }, this._defaults = {\n      showOn: \"focus\",\n      showAnim: \"fadeIn\",\n      showOptions: {},\n      defaultDate: null,\n      appendText: \"\",\n      buttonText: \"...\",\n      buttonImage: \"\",\n      buttonImageOnly: !1,\n      hideIfNoPrevNext: !1,\n      navigationAsDateFormat: !1,\n      gotoCurrent: !1,\n      changeMonth: !1,\n      changeYear: !1,\n      yearRange: \"c-10:c+10\",\n      showOtherMonths: !1,\n      selectOtherMonths: !1,\n      showWeek: !1,\n      calculateWeek: this.iso8601Week,\n      shortYearCutoff: \"+10\",\n      minDate: null,\n      maxDate: null,\n      duration: \"fast\",\n      beforeShowDay: null,\n      beforeShow: null,\n      onSelect: null,\n      onChangeMonthYear: null,\n      onClose: null,\n      onUpdateDatepicker: null,\n      numberOfMonths: 1,\n      showCurrentAtPos: 0,\n      stepMonths: 1,\n      stepBigMonths: 12,\n      altField: \"\",\n      altFormat: \"\",\n      constrainInput: !0,\n      showButtonPanel: !1,\n      autoSize: !1,\n      disabled: !1\n    }, V.extend(this._defaults, this.regional[\"\"]), this.regional.en = V.extend(!0, {}, this.regional[\"\"]), this.regional[\"en-US\"] = V.extend(!0, {}, this.regional.en), this.dpDiv = ot(V(\"<div id='\" + this._mainDivId + \"' class='ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\"));\n  }\n  function ot(t) {\n    var e = \"button, .ui-datepicker-prev, .ui-datepicker-next, .ui-datepicker-calendar td a\";\n    return t.on(\"mouseout\", e, function () {\n      V(this).removeClass(\"ui-state-hover\"), -1 !== this.className.indexOf(\"ui-datepicker-prev\") && V(this).removeClass(\"ui-datepicker-prev-hover\"), -1 !== this.className.indexOf(\"ui-datepicker-next\") && V(this).removeClass(\"ui-datepicker-next-hover\");\n    }).on(\"mouseover\", e, at);\n  }\n  function at() {\n    V.datepicker._isDisabledDatepicker((S.inline ? S.dpDiv.parent() : S.input)[0]) || (V(this).parents(\".ui-datepicker-calendar\").find(\"a\").removeClass(\"ui-state-hover\"), V(this).addClass(\"ui-state-hover\"), -1 !== this.className.indexOf(\"ui-datepicker-prev\") && V(this).addClass(\"ui-datepicker-prev-hover\"), -1 !== this.className.indexOf(\"ui-datepicker-next\") && V(this).addClass(\"ui-datepicker-next-hover\"));\n  }\n  function H(t, e) {\n    for (var i in V.extend(t, e), e) null == e[i] && (t[i] = e[i]);\n  }\n  V.extend(V.ui, {\n    datepicker: {\n      version: \"1.14.1\"\n    }\n  }), V.extend(nt.prototype, {\n    markerClassName: \"hasDatepicker\",\n    maxRows: 4,\n    _widgetDatepicker: function _widgetDatepicker() {\n      return this.dpDiv;\n    },\n    setDefaults: function setDefaults(t) {\n      return H(this._defaults, t || {}), this;\n    },\n    _attachDatepicker: function _attachDatepicker(t, e) {\n      var i,\n        s = t.nodeName.toLowerCase(),\n        n = \"div\" === s || \"span\" === s;\n      t.id || (this.uuid += 1, t.id = \"dp\" + this.uuid), (i = this._newInst(V(t), n)).settings = V.extend({}, e || {}), \"input\" === s ? this._connectDatepicker(t, i) : n && this._inlineDatepicker(t, i);\n    },\n    _newInst: function _newInst(t, e) {\n      return {\n        id: t[0].id.replace(/([^A-Za-z0-9_\\-])/g, \"\\\\\\\\$1\"),\n        input: t,\n        selectedDay: 0,\n        selectedMonth: 0,\n        selectedYear: 0,\n        drawMonth: 0,\n        drawYear: 0,\n        inline: e,\n        dpDiv: e ? ot(V(\"<div class='\" + this._inlineClass + \" ui-datepicker ui-widget ui-widget-content ui-helper-clearfix ui-corner-all'></div>\")) : this.dpDiv\n      };\n    },\n    _connectDatepicker: function _connectDatepicker(t, e) {\n      var i = V(t);\n      e.append = V([]), e.trigger = V([]), i.hasClass(this.markerClassName) || (this._attachments(i, e), i.addClass(this.markerClassName).on(\"keydown\", this._doKeyDown).on(\"keypress\", this._doKeyPress).on(\"keyup\", this._doKeyUp), this._autoSize(e), V.data(t, \"datepicker\", e), e.settings.disabled && this._disableDatepicker(t));\n    },\n    _attachments: function _attachments(t, e) {\n      var i,\n        s = this._get(e, \"appendText\"),\n        n = this._get(e, \"isRTL\");\n      e.append && e.append.remove(), s && (e.append = V(\"<span>\").addClass(this._appendClass).text(s), t[n ? \"before\" : \"after\"](e.append)), t.off(\"focus\", this._showDatepicker), e.trigger && e.trigger.remove(), \"focus\" !== (s = this._get(e, \"showOn\")) && \"both\" !== s || t.on(\"focus\", this._showDatepicker), \"button\" !== s && \"both\" !== s || (s = this._get(e, \"buttonText\"), i = this._get(e, \"buttonImage\"), this._get(e, \"buttonImageOnly\") ? e.trigger = V(\"<img>\").addClass(this._triggerClass).attr({\n        src: i,\n        alt: s,\n        title: s\n      }) : (e.trigger = V(\"<button type='button'>\").addClass(this._triggerClass), i ? e.trigger.html(V(\"<img>\").attr({\n        src: i,\n        alt: s,\n        title: s\n      })) : e.trigger.text(s)), t[n ? \"before\" : \"after\"](e.trigger), e.trigger.on(\"click\", function () {\n        return V.datepicker._datepickerShowing && V.datepicker._lastInput === t[0] ? V.datepicker._hideDatepicker() : (V.datepicker._datepickerShowing && V.datepicker._lastInput !== t[0] && V.datepicker._hideDatepicker(), V.datepicker._showDatepicker(t[0])), !1;\n      }));\n    },\n    _autoSize: function _autoSize(t) {\n      var e, i, s, n, o, a;\n      this._get(t, \"autoSize\") && !t.inline && (o = new Date(2009, 11, 20), (a = this._get(t, \"dateFormat\")).match(/[DM]/) && (o.setMonth((e = function e(t) {\n        for (n = s = i = 0; n < t.length; n++) t[n].length > i && (i = t[n].length, s = n);\n        return s;\n      })(this._get(t, a.match(/MM/) ? \"monthNames\" : \"monthNamesShort\"))), o.setDate(e(this._get(t, a.match(/DD/) ? \"dayNames\" : \"dayNamesShort\")) + 20 - o.getDay())), t.input.attr(\"size\", this._formatDate(t, o).length));\n    },\n    _inlineDatepicker: function _inlineDatepicker(t, e) {\n      var i = V(t);\n      i.hasClass(this.markerClassName) || (i.addClass(this.markerClassName).append(e.dpDiv), V.data(t, \"datepicker\", e), this._setDate(e, this._getDefaultDate(e), !0), this._updateDatepicker(e), this._updateAlternate(e), e.settings.disabled && this._disableDatepicker(t), e.dpDiv.css(\"display\", \"block\"));\n    },\n    _dialogDatepicker: function _dialogDatepicker(t, e, i, s, n) {\n      var o,\n        a = this._dialogInst;\n      return a || (this.uuid += 1, o = \"dp\" + this.uuid, this._dialogInput = V(\"<input type='text' id='\" + o + \"' style='position: absolute; top: -100px; width: 0px;'/>\"), this._dialogInput.on(\"keydown\", this._doKeyDown), V(\"body\").append(this._dialogInput), (a = this._dialogInst = this._newInst(this._dialogInput, !1)).settings = {}, V.data(this._dialogInput[0], \"datepicker\", a)), H(a.settings, s || {}), e = e && e.constructor === Date ? this._formatDate(a, e) : e, this._dialogInput.val(e), this._pos = n ? n.length ? n : [n.pageX, n.pageY] : null, this._pos || (o = document.documentElement.clientWidth, s = document.documentElement.clientHeight, e = document.documentElement.scrollLeft || document.body.scrollLeft, n = document.documentElement.scrollTop || document.body.scrollTop, this._pos = [o / 2 - 100 + e, s / 2 - 150 + n]), this._dialogInput.css(\"left\", this._pos[0] + 20 + \"px\").css(\"top\", this._pos[1] + \"px\"), a.settings.onSelect = i, this._inDialog = !0, this.dpDiv.addClass(this._dialogClass), this._showDatepicker(this._dialogInput[0]), V.blockUI && V.blockUI(this.dpDiv), V.data(this._dialogInput[0], \"datepicker\", a), this;\n    },\n    _destroyDatepicker: function _destroyDatepicker(t) {\n      var e,\n        i = V(t),\n        s = V.data(t, \"datepicker\");\n      i.hasClass(this.markerClassName) && (e = t.nodeName.toLowerCase(), V.removeData(t, \"datepicker\"), \"input\" === e ? (s.append.remove(), s.trigger.remove(), i.removeClass(this.markerClassName).off(\"focus\", this._showDatepicker).off(\"keydown\", this._doKeyDown).off(\"keypress\", this._doKeyPress).off(\"keyup\", this._doKeyUp)) : \"div\" !== e && \"span\" !== e || i.removeClass(this.markerClassName).empty(), V.datepicker._hideDatepicker(), S === s) && (S = null, this._curInst = null);\n    },\n    _enableDatepicker: function _enableDatepicker(e) {\n      var t,\n        i = V(e),\n        s = V.data(e, \"datepicker\");\n      i.hasClass(this.markerClassName) && (\"input\" === (t = e.nodeName.toLowerCase()) ? (e.disabled = !1, s.trigger.filter(\"button\").each(function () {\n        this.disabled = !1;\n      }).end().filter(\"img\").css({\n        opacity: \"1.0\",\n        cursor: \"\"\n      })) : \"div\" !== t && \"span\" !== t || ((s = i.children(\".\" + this._inlineClass)).children().removeClass(\"ui-state-disabled\"), s.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\", !1)), this._disabledInputs = V.map(this._disabledInputs, function (t) {\n        return t === e ? null : t;\n      }));\n    },\n    _disableDatepicker: function _disableDatepicker(e) {\n      var t,\n        i = V(e),\n        s = V.data(e, \"datepicker\");\n      i.hasClass(this.markerClassName) && (\"input\" === (t = e.nodeName.toLowerCase()) ? (e.disabled = !0, s.trigger.filter(\"button\").each(function () {\n        this.disabled = !0;\n      }).end().filter(\"img\").css({\n        opacity: \"0.5\",\n        cursor: \"default\"\n      })) : \"div\" !== t && \"span\" !== t || ((s = i.children(\".\" + this._inlineClass)).children().addClass(\"ui-state-disabled\"), s.find(\"select.ui-datepicker-month, select.ui-datepicker-year\").prop(\"disabled\", !0)), this._disabledInputs = V.map(this._disabledInputs, function (t) {\n        return t === e ? null : t;\n      }), this._disabledInputs[this._disabledInputs.length] = e);\n    },\n    _isDisabledDatepicker: function _isDisabledDatepicker(t) {\n      if (t) for (var e = 0; e < this._disabledInputs.length; e++) if (this._disabledInputs[e] === t) return !0;\n      return !1;\n    },\n    _getInst: function _getInst(t) {\n      try {\n        return V.data(t, \"datepicker\");\n      } catch (t) {\n        throw \"Missing instance data for this datepicker\";\n      }\n    },\n    _optionDatepicker: function _optionDatepicker(t, e, i) {\n      var s,\n        n,\n        o = this._getInst(t);\n      if (2 === arguments.length && \"string\" == typeof e) return \"defaults\" === e ? V.extend({}, V.datepicker._defaults) : o ? \"all\" === e ? V.extend({}, o.settings) : this._get(o, e) : null;\n      s = e || {}, \"string\" == typeof e && ((s = {})[e] = i), o && (this._curInst === o && this._hideDatepicker(), e = this._getDateDatepicker(t, !0), i = this._getMinMaxDate(o, \"min\"), n = this._getMinMaxDate(o, \"max\"), H(o.settings, s), null !== i && void 0 !== s.dateFormat && void 0 === s.minDate && (o.settings.minDate = this._formatDate(o, i)), null !== n && void 0 !== s.dateFormat && void 0 === s.maxDate && (o.settings.maxDate = this._formatDate(o, n)), \"disabled\" in s && (s.disabled ? this._disableDatepicker(t) : this._enableDatepicker(t)), this._attachments(V(t), o), this._autoSize(o), this._setDate(o, e), this._updateAlternate(o), this._updateDatepicker(o));\n    },\n    _changeDatepicker: function _changeDatepicker(t, e, i) {\n      this._optionDatepicker(t, e, i);\n    },\n    _refreshDatepicker: function _refreshDatepicker(t) {\n      t = this._getInst(t);\n      t && this._updateDatepicker(t);\n    },\n    _setDateDatepicker: function _setDateDatepicker(t, e) {\n      t = this._getInst(t);\n      t && (this._setDate(t, e), this._updateDatepicker(t), this._updateAlternate(t));\n    },\n    _getDateDatepicker: function _getDateDatepicker(t, e) {\n      t = this._getInst(t);\n      return t && !t.inline && this._setDateFromField(t, e), t ? this._getDate(t) : null;\n    },\n    _doKeyDown: function _doKeyDown(t) {\n      var e,\n        i,\n        s = V.datepicker._getInst(t.target),\n        n = !0,\n        o = s.dpDiv.is(\".ui-datepicker-rtl\");\n      if (s._keyEvent = !0, V.datepicker._datepickerShowing) switch (t.keyCode) {\n        case 9:\n          V.datepicker._hideDatepicker(), n = !1;\n          break;\n        case 13:\n          return (i = V(\"td.\" + V.datepicker._dayOverClass + \":not(.\" + V.datepicker._currentClass + \")\", s.dpDiv))[0] && V.datepicker._selectDay(t.target, s.selectedMonth, s.selectedYear, i[0]), (i = V.datepicker._get(s, \"onSelect\")) ? (e = V.datepicker._formatDate(s), i.apply(s.input ? s.input[0] : null, [e, s])) : V.datepicker._hideDatepicker(), !1;\n        case 27:\n          V.datepicker._hideDatepicker();\n          break;\n        case 33:\n          V.datepicker._adjustDate(t.target, t.ctrlKey ? -V.datepicker._get(s, \"stepBigMonths\") : -V.datepicker._get(s, \"stepMonths\"), \"M\");\n          break;\n        case 34:\n          V.datepicker._adjustDate(t.target, t.ctrlKey ? +V.datepicker._get(s, \"stepBigMonths\") : +V.datepicker._get(s, \"stepMonths\"), \"M\");\n          break;\n        case 35:\n          (t.ctrlKey || t.metaKey) && V.datepicker._clearDate(t.target), n = t.ctrlKey || t.metaKey;\n          break;\n        case 36:\n          (t.ctrlKey || t.metaKey) && V.datepicker._gotoToday(t.target), n = t.ctrlKey || t.metaKey;\n          break;\n        case 37:\n          (t.ctrlKey || t.metaKey) && V.datepicker._adjustDate(t.target, o ? 1 : -1, \"D\"), n = t.ctrlKey || t.metaKey, t.originalEvent.altKey && V.datepicker._adjustDate(t.target, t.ctrlKey ? -V.datepicker._get(s, \"stepBigMonths\") : -V.datepicker._get(s, \"stepMonths\"), \"M\");\n          break;\n        case 38:\n          (t.ctrlKey || t.metaKey) && V.datepicker._adjustDate(t.target, -7, \"D\"), n = t.ctrlKey || t.metaKey;\n          break;\n        case 39:\n          (t.ctrlKey || t.metaKey) && V.datepicker._adjustDate(t.target, o ? -1 : 1, \"D\"), n = t.ctrlKey || t.metaKey, t.originalEvent.altKey && V.datepicker._adjustDate(t.target, t.ctrlKey ? +V.datepicker._get(s, \"stepBigMonths\") : +V.datepicker._get(s, \"stepMonths\"), \"M\");\n          break;\n        case 40:\n          (t.ctrlKey || t.metaKey) && V.datepicker._adjustDate(t.target, 7, \"D\"), n = t.ctrlKey || t.metaKey;\n          break;\n        default:\n          n = !1;\n      } else 36 === t.keyCode && t.ctrlKey ? V.datepicker._showDatepicker(this) : n = !1;\n      n && (t.preventDefault(), t.stopPropagation());\n    },\n    _doKeyPress: function _doKeyPress(t) {\n      var e,\n        i = V.datepicker._getInst(t.target);\n      if (V.datepicker._get(i, \"constrainInput\")) return i = V.datepicker._possibleChars(V.datepicker._get(i, \"dateFormat\")), e = String.fromCharCode(null == t.charCode ? t.keyCode : t.charCode), t.ctrlKey || t.metaKey || e < \" \" || !i || -1 < i.indexOf(e);\n    },\n    _doKeyUp: function _doKeyUp(t) {\n      t = V.datepicker._getInst(t.target);\n      if (t.input.val() !== t.lastVal) try {\n        V.datepicker.parseDate(V.datepicker._get(t, \"dateFormat\"), t.input ? t.input.val() : null, V.datepicker._getFormatConfig(t)) && (V.datepicker._setDateFromField(t), V.datepicker._updateAlternate(t), V.datepicker._updateDatepicker(t));\n      } catch (t) {}\n      return !0;\n    },\n    _showDatepicker: function _showDatepicker(t) {\n      var e, i, s, n;\n      \"input\" !== (t = t.target || t).nodeName.toLowerCase() && (t = V(\"input\", t.parentNode)[0]), V.datepicker._isDisabledDatepicker(t) || V.datepicker._lastInput === t || (n = V.datepicker._getInst(t), V.datepicker._curInst && V.datepicker._curInst !== n && (V.datepicker._curInst.dpDiv.stop(!0, !0), n) && V.datepicker._datepickerShowing && V.datepicker._hideDatepicker(V.datepicker._curInst.input[0]), !1 === (i = (i = V.datepicker._get(n, \"beforeShow\")) ? i.apply(t, [t, n]) : {})) || (H(n.settings, i), n.lastVal = null, V.datepicker._lastInput = t, V.datepicker._setDateFromField(n), V.datepicker._inDialog && (t.value = \"\"), V.datepicker._pos || (V.datepicker._pos = V.datepicker._findPos(t), V.datepicker._pos[1] += t.offsetHeight), e = !1, V(t).parents().each(function () {\n        return !(e |= \"fixed\" === V(this).css(\"position\"));\n      }), i = {\n        left: V.datepicker._pos[0],\n        top: V.datepicker._pos[1]\n      }, V.datepicker._pos = null, n.dpDiv.empty(), n.dpDiv.css({\n        position: \"absolute\",\n        display: \"block\",\n        top: \"-1000px\"\n      }), V.datepicker._updateDatepicker(n), i = V.datepicker._checkOffset(n, i, e), n.dpDiv.css({\n        position: V.datepicker._inDialog && V.blockUI ? \"static\" : e ? \"fixed\" : \"absolute\",\n        display: \"none\",\n        left: i.left + \"px\",\n        top: i.top + \"px\"\n      }), n.inline) || (i = V.datepicker._get(n, \"showAnim\"), s = V.datepicker._get(n, \"duration\"), n.dpDiv.css(\"z-index\", function (t) {\n        for (var e; t.length && t[0] !== document;) {\n          if ((\"absolute\" === (e = t.css(\"position\")) || \"relative\" === e || \"fixed\" === e) && (e = parseInt(t.css(\"zIndex\"), 10), !isNaN(e)) && 0 !== e) return e;\n          t = t.parent();\n        }\n        return 0;\n      }(V(t)) + 1), V.datepicker._datepickerShowing = !0, V.effects && V.effects.effect[i] ? n.dpDiv.show(i, V.datepicker._get(n, \"showOptions\"), s) : n.dpDiv[i || \"show\"](i ? s : null), V.datepicker._shouldFocusInput(n) && n.input.trigger(\"focus\"), V.datepicker._curInst = n);\n    },\n    _updateDatepicker: function _updateDatepicker(t) {\n      this.maxRows = 4, (S = t).dpDiv.empty().append(this._generateHTML(t)), this._attachHandlers(t);\n      var e,\n        i = this._getNumberOfMonths(t),\n        s = i[1],\n        n = t.dpDiv.find(\".\" + this._dayOverClass + \" a\"),\n        o = V.datepicker._get(t, \"onUpdateDatepicker\");\n      0 < n.length && at.apply(n.get(0)), t.dpDiv.removeClass(\"ui-datepicker-multi-2 ui-datepicker-multi-3 ui-datepicker-multi-4\").width(\"\"), 1 < s && t.dpDiv.addClass(\"ui-datepicker-multi-\" + s).css(\"width\", 17 * s + \"em\"), t.dpDiv[(1 !== i[0] || 1 !== i[1] ? \"add\" : \"remove\") + \"Class\"](\"ui-datepicker-multi\"), t.dpDiv[(this._get(t, \"isRTL\") ? \"add\" : \"remove\") + \"Class\"](\"ui-datepicker-rtl\"), t === V.datepicker._curInst && V.datepicker._datepickerShowing && V.datepicker._shouldFocusInput(t) && t.input.trigger(\"focus\"), t.yearshtml && (e = t.yearshtml, setTimeout(function () {\n        e === t.yearshtml && t.yearshtml && t.dpDiv.find(\"select.ui-datepicker-year\").first().replaceWith(t.yearshtml), e = t.yearshtml = null;\n      }, 0)), o && o.apply(t.input ? t.input[0] : null, [t]);\n    },\n    _shouldFocusInput: function _shouldFocusInput(t) {\n      return t.input && t.input.is(\":visible\") && !t.input.is(\":disabled\");\n    },\n    _checkOffset: function _checkOffset(t, e, i) {\n      var s = t.dpDiv.outerWidth(),\n        n = t.dpDiv.outerHeight(),\n        o = t.input ? t.input.outerWidth() : 0,\n        a = t.input ? t.input.outerHeight() : 0,\n        r = document.documentElement.clientWidth + (i ? 0 : V(document).scrollLeft()),\n        l = document.documentElement.clientHeight + (i ? 0 : V(document).scrollTop());\n      return e.left -= this._get(t, \"isRTL\") ? s - o : 0, e.left -= i && e.left === t.input.offset().left ? V(document).scrollLeft() : 0, e.top -= i && e.top === t.input.offset().top + a ? V(document).scrollTop() : 0, e.left -= Math.min(e.left, r < e.left + s && s < r ? Math.abs(e.left + s - r) : 0), e.top -= Math.min(e.top, l < e.top + n && n < l ? Math.abs(n + a) : 0), e;\n    },\n    _findPos: function _findPos(t) {\n      for (var e = this._getInst(t), i = this._get(e, \"isRTL\"); t && (\"hidden\" === t.type || 1 !== t.nodeType || V.expr.pseudos.hidden(t));) t = t[i ? \"previousSibling\" : \"nextSibling\"];\n      return [(e = V(t).offset()).left, e.top];\n    },\n    _hideDatepicker: function _hideDatepicker(t) {\n      var e,\n        i,\n        s = this._curInst;\n      !s || t && s !== V.data(t, \"datepicker\") || this._datepickerShowing && (t = this._get(s, \"showAnim\"), i = this._get(s, \"duration\"), e = function e() {\n        V.datepicker._tidyDialog(s);\n      }, V.effects && V.effects.effect[t] ? s.dpDiv.hide(t, V.datepicker._get(s, \"showOptions\"), i, e) : s.dpDiv[\"slideDown\" === t ? \"slideUp\" : \"fadeIn\" === t ? \"fadeOut\" : \"hide\"](t ? i : null, e), t || e(), this._datepickerShowing = !1, (i = this._get(s, \"onClose\")) && i.apply(s.input ? s.input[0] : null, [s.input ? s.input.val() : \"\", s]), this._lastInput = null, this._inDialog && (this._dialogInput.css({\n        position: \"absolute\",\n        left: \"0\",\n        top: \"-100px\"\n      }), V.blockUI) && (V.unblockUI(), V(\"body\").append(this.dpDiv)), this._inDialog = !1);\n    },\n    _tidyDialog: function _tidyDialog(t) {\n      t.dpDiv.removeClass(this._dialogClass).off(\".ui-datepicker-calendar\");\n    },\n    _checkExternalClick: function _checkExternalClick(t) {\n      var e;\n      V.datepicker._curInst && (t = V(t.target), e = V.datepicker._getInst(t[0]), !(t[0].id === V.datepicker._mainDivId || 0 !== t.parents(\"#\" + V.datepicker._mainDivId).length || t.hasClass(V.datepicker.markerClassName) || t.closest(\".\" + V.datepicker._triggerClass).length || !V.datepicker._datepickerShowing || V.datepicker._inDialog && V.blockUI) || t.hasClass(V.datepicker.markerClassName) && V.datepicker._curInst !== e) && V.datepicker._hideDatepicker();\n    },\n    _adjustDate: function _adjustDate(t, e, i) {\n      var t = V(t),\n        s = this._getInst(t[0]);\n      this._isDisabledDatepicker(t[0]) || (this._adjustInstDate(s, e, i), this._updateDatepicker(s));\n    },\n    _gotoToday: function _gotoToday(t) {\n      var e,\n        t = V(t),\n        i = this._getInst(t[0]);\n      this._get(i, \"gotoCurrent\") && i.currentDay ? (i.selectedDay = i.currentDay, i.drawMonth = i.selectedMonth = i.currentMonth, i.drawYear = i.selectedYear = i.currentYear) : (e = new Date(), i.selectedDay = e.getDate(), i.drawMonth = i.selectedMonth = e.getMonth(), i.drawYear = i.selectedYear = e.getFullYear()), this._notifyChange(i), this._adjustDate(t);\n    },\n    _selectMonthYear: function _selectMonthYear(t, e, i) {\n      var t = V(t),\n        s = this._getInst(t[0]);\n      s[\"selected\" + (\"M\" === i ? \"Month\" : \"Year\")] = s[\"draw\" + (\"M\" === i ? \"Month\" : \"Year\")] = parseInt(e.options[e.selectedIndex].value, 10), this._notifyChange(s), this._adjustDate(t);\n    },\n    _selectDay: function _selectDay(t, e, i, s) {\n      var n = V(t);\n      V(s).hasClass(this._unselectableClass) || this._isDisabledDatepicker(n[0]) || ((n = this._getInst(n[0])).selectedDay = n.currentDay = parseInt(V(\"a\", s).attr(\"data-date\")), n.selectedMonth = n.currentMonth = e, n.selectedYear = n.currentYear = i, this._selectDate(t, this._formatDate(n, n.currentDay, n.currentMonth, n.currentYear)));\n    },\n    _clearDate: function _clearDate(t) {\n      t = V(t);\n      this._selectDate(t, \"\");\n    },\n    _selectDate: function _selectDate(t, e) {\n      var i,\n        t = V(t),\n        t = this._getInst(t[0]);\n      e = null != e ? e : this._formatDate(t), t.input && t.input.val(e), this._updateAlternate(t), (i = this._get(t, \"onSelect\")) ? i.apply(t.input ? t.input[0] : null, [e, t]) : t.input && t.input.trigger(\"change\"), t.inline ? this._updateDatepicker(t) : (this._hideDatepicker(), this._lastInput = t.input[0], \"object\" != _typeof(t.input[0]) && t.input.trigger(\"focus\"), this._lastInput = null);\n    },\n    _updateAlternate: function _updateAlternate(t) {\n      var e,\n        i,\n        s = this._get(t, \"altField\");\n      s && (i = this._get(t, \"altFormat\") || this._get(t, \"dateFormat\"), e = this._getDate(t), i = this.formatDate(i, e, this._getFormatConfig(t)), V(document).find(s).val(i));\n    },\n    noWeekends: function noWeekends(t) {\n      t = t.getDay();\n      return [0 < t && t < 6, \"\"];\n    },\n    iso8601Week: function iso8601Week(t) {\n      var e,\n        t = new Date(t.getTime());\n      return t.setDate(t.getDate() + 4 - (t.getDay() || 7)), e = t.getTime(), t.setMonth(0), t.setDate(1), Math.floor(Math.round((e - t) / 864e5) / 7) + 1;\n    },\n    parseDate: function parseDate(e, n, t) {\n      if (null == e || null == n) throw \"Invalid arguments\";\n      if (\"\" === (n = \"object\" == _typeof(n) ? n.toString() : n + \"\")) return null;\n      for (var i, s, o = 0, a = (t ? t.shortYearCutoff : null) || this._defaults.shortYearCutoff, a = \"string\" != typeof a ? a : new Date().getFullYear() % 100 + parseInt(a, 10), r = (t ? t.dayNamesShort : null) || this._defaults.dayNamesShort, l = (t ? t.dayNames : null) || this._defaults.dayNames, h = (t ? t.monthNamesShort : null) || this._defaults.monthNamesShort, c = (t ? t.monthNames : null) || this._defaults.monthNames, u = -1, d = -1, p = -1, f = -1, g = !1, m = function m(t) {\n          t = y + 1 < e.length && e.charAt(y + 1) === t;\n          return t && y++, t;\n        }, _ = function _(t) {\n          var e = m(t),\n            e = \"@\" === t ? 14 : \"!\" === t ? 20 : \"y\" === t && e ? 4 : \"o\" === t ? 3 : 2,\n            t = new RegExp(\"^\\\\d{\" + (\"y\" === t ? e : 1) + \",\" + e + \"}\"),\n            e = n.substring(o).match(t);\n          if (e) return o += e[0].length, parseInt(e[0], 10);\n          throw \"Missing number at position \" + o;\n        }, v = function v(t, e, i) {\n          var s = -1,\n            t = V.map(m(t) ? i : e, function (t, e) {\n              return [[e, t]];\n            }).sort(function (t, e) {\n              return -(t[1].length - e[1].length);\n            });\n          if (V.each(t, function (t, e) {\n            var i = e[1];\n            if (n.substr(o, i.length).toLowerCase() === i.toLowerCase()) return s = e[0], o += i.length, !1;\n          }), -1 !== s) return s + 1;\n          throw \"Unknown name at position \" + o;\n        }, b = function b() {\n          if (n.charAt(o) !== e.charAt(y)) throw \"Unexpected literal at position \" + o;\n          o++;\n        }, y = 0; y < e.length; y++) if (g) \"'\" !== e.charAt(y) || m(\"'\") ? b() : g = !1;else switch (e.charAt(y)) {\n        case \"d\":\n          p = _(\"d\");\n          break;\n        case \"D\":\n          v(\"D\", r, l);\n          break;\n        case \"o\":\n          f = _(\"o\");\n          break;\n        case \"m\":\n          d = _(\"m\");\n          break;\n        case \"M\":\n          d = v(\"M\", h, c);\n          break;\n        case \"y\":\n          u = _(\"y\");\n          break;\n        case \"@\":\n          u = (s = new Date(_(\"@\"))).getFullYear(), d = s.getMonth() + 1, p = s.getDate();\n          break;\n        case \"!\":\n          u = (s = new Date((_(\"!\") - this._ticksTo1970) / 1e4)).getFullYear(), d = s.getMonth() + 1, p = s.getDate();\n          break;\n        case \"'\":\n          m(\"'\") ? b() : g = !0;\n          break;\n        default:\n          b();\n      }\n      if (o < n.length && (t = n.substr(o), !/^\\s+/.test(t))) throw \"Extra/unparsed characters found in date: \" + t;\n      if (-1 === u ? u = new Date().getFullYear() : u < 100 && (u += new Date().getFullYear() - new Date().getFullYear() % 100 + (u <= a ? 0 : -100)), -1 < f) for (d = 1, p = f;;) {\n        if (p <= (i = this._getDaysInMonth(u, d - 1))) break;\n        d++, p -= i;\n      }\n      if ((s = this._daylightSavingAdjust(new Date(u, d - 1, p))).getFullYear() !== u || s.getMonth() + 1 !== d || s.getDate() !== p) throw \"Invalid date\";\n      return s;\n    },\n    ATOM: \"yy-mm-dd\",\n    COOKIE: \"D, dd M yy\",\n    ISO_8601: \"yy-mm-dd\",\n    RFC_822: \"D, d M y\",\n    RFC_850: \"DD, dd-M-y\",\n    RFC_1036: \"D, d M y\",\n    RFC_1123: \"D, d M yy\",\n    RFC_2822: \"D, d M yy\",\n    RSS: \"D, d M y\",\n    TICKS: \"!\",\n    TIMESTAMP: \"@\",\n    W3C: \"yy-mm-dd\",\n    _ticksTo1970: 24 * (718685 + Math.floor(492.5) - Math.floor(19.7) + Math.floor(4.925)) * 60 * 60 * 1e7,\n    formatDate: function formatDate(e, t, i) {\n      if (!t) return \"\";\n      function s(t, e, i) {\n        var s = \"\" + e;\n        if (c(t)) for (; s.length < i;) s = \"0\" + s;\n        return s;\n      }\n      function n(t, e, i, s) {\n        return (c(t) ? s : i)[e];\n      }\n      var o,\n        a = (i ? i.dayNamesShort : null) || this._defaults.dayNamesShort,\n        r = (i ? i.dayNames : null) || this._defaults.dayNames,\n        l = (i ? i.monthNamesShort : null) || this._defaults.monthNamesShort,\n        h = (i ? i.monthNames : null) || this._defaults.monthNames,\n        c = function c(t) {\n          t = o + 1 < e.length && e.charAt(o + 1) === t;\n          return t && o++, t;\n        },\n        u = \"\",\n        d = !1;\n      if (t) for (o = 0; o < e.length; o++) if (d) \"'\" !== e.charAt(o) || c(\"'\") ? u += e.charAt(o) : d = !1;else switch (e.charAt(o)) {\n        case \"d\":\n          u += s(\"d\", t.getDate(), 2);\n          break;\n        case \"D\":\n          u += n(\"D\", t.getDay(), a, r);\n          break;\n        case \"o\":\n          u += s(\"o\", Math.round((new Date(t.getFullYear(), t.getMonth(), t.getDate()).getTime() - new Date(t.getFullYear(), 0, 0).getTime()) / 864e5), 3);\n          break;\n        case \"m\":\n          u += s(\"m\", t.getMonth() + 1, 2);\n          break;\n        case \"M\":\n          u += n(\"M\", t.getMonth(), l, h);\n          break;\n        case \"y\":\n          u += c(\"y\") ? t.getFullYear() : (t.getFullYear() % 100 < 10 ? \"0\" : \"\") + t.getFullYear() % 100;\n          break;\n        case \"@\":\n          u += t.getTime();\n          break;\n        case \"!\":\n          u += 1e4 * t.getTime() + this._ticksTo1970;\n          break;\n        case \"'\":\n          c(\"'\") ? u += \"'\" : d = !0;\n          break;\n        default:\n          u += e.charAt(o);\n      }\n      return u;\n    },\n    _possibleChars: function _possibleChars(e) {\n      for (var t = \"\", i = !1, s = function s(t) {\n          t = n + 1 < e.length && e.charAt(n + 1) === t;\n          return t && n++, t;\n        }, n = 0; n < e.length; n++) if (i) \"'\" !== e.charAt(n) || s(\"'\") ? t += e.charAt(n) : i = !1;else switch (e.charAt(n)) {\n        case \"d\":\n        case \"m\":\n        case \"y\":\n        case \"@\":\n          t += \"0123456789\";\n          break;\n        case \"D\":\n        case \"M\":\n          return null;\n        case \"'\":\n          s(\"'\") ? t += \"'\" : i = !0;\n          break;\n        default:\n          t += e.charAt(n);\n      }\n      return t;\n    },\n    _get: function _get(t, e) {\n      return (void 0 !== t.settings[e] ? t.settings : this._defaults)[e];\n    },\n    _setDateFromField: function _setDateFromField(t, e) {\n      if (t.input.val() !== t.lastVal) {\n        var i = this._get(t, \"dateFormat\"),\n          s = t.lastVal = t.input ? t.input.val() : null,\n          n = this._getDefaultDate(t),\n          o = n,\n          a = this._getFormatConfig(t);\n        try {\n          o = this.parseDate(i, s, a) || n;\n        } catch (t) {\n          s = e ? \"\" : s;\n        }\n        t.selectedDay = o.getDate(), t.drawMonth = t.selectedMonth = o.getMonth(), t.drawYear = t.selectedYear = o.getFullYear(), t.currentDay = s ? o.getDate() : 0, t.currentMonth = s ? o.getMonth() : 0, t.currentYear = s ? o.getFullYear() : 0, this._adjustInstDate(t);\n      }\n    },\n    _getDefaultDate: function _getDefaultDate(t) {\n      return this._restrictMinMax(t, this._determineDate(t, this._get(t, \"defaultDate\"), new Date()));\n    },\n    _determineDate: function _determineDate(r, t, e) {\n      var i,\n        s = null == t || \"\" === t ? e : \"string\" == typeof t ? function (t) {\n          try {\n            return V.datepicker.parseDate(V.datepicker._get(r, \"dateFormat\"), t, V.datepicker._getFormatConfig(r));\n          } catch (t) {}\n          for (var e = (t.toLowerCase().match(/^c/) ? V.datepicker._getDate(r) : null) || new Date(), i = e.getFullYear(), s = e.getMonth(), n = e.getDate(), o = /([+\\-]?[0-9]+)\\s*(d|D|w|W|m|M|y|Y)?/g, a = o.exec(t); a;) {\n            switch (a[2] || \"d\") {\n              case \"d\":\n              case \"D\":\n                n += parseInt(a[1], 10);\n                break;\n              case \"w\":\n              case \"W\":\n                n += 7 * parseInt(a[1], 10);\n                break;\n              case \"m\":\n              case \"M\":\n                s += parseInt(a[1], 10), n = Math.min(n, V.datepicker._getDaysInMonth(i, s));\n                break;\n              case \"y\":\n              case \"Y\":\n                i += parseInt(a[1], 10), n = Math.min(n, V.datepicker._getDaysInMonth(i, s));\n            }\n            a = o.exec(t);\n          }\n          return new Date(i, s, n);\n        }(t) : \"number\" == typeof t ? isNaN(t) ? e : (s = t, (i = new Date()).setDate(i.getDate() + s), i) : new Date(t.getTime());\n      return (s = s && \"Invalid Date\" === s.toString() ? e : s) && (s.setHours(0), s.setMinutes(0), s.setSeconds(0), s.setMilliseconds(0)), this._daylightSavingAdjust(s);\n    },\n    _daylightSavingAdjust: function _daylightSavingAdjust(t) {\n      return t ? (t.setHours(12 < t.getHours() ? t.getHours() + 2 : 0), t) : null;\n    },\n    _setDate: function _setDate(t, e, i) {\n      var s = !e,\n        n = t.selectedMonth,\n        o = t.selectedYear,\n        e = this._restrictMinMax(t, this._determineDate(t, e, new Date()));\n      t.selectedDay = t.currentDay = e.getDate(), t.drawMonth = t.selectedMonth = t.currentMonth = e.getMonth(), t.drawYear = t.selectedYear = t.currentYear = e.getFullYear(), n === t.selectedMonth && o === t.selectedYear || i || this._notifyChange(t), this._adjustInstDate(t), t.input && t.input.val(s ? \"\" : this._formatDate(t));\n    },\n    _getDate: function _getDate(t) {\n      return !t.currentYear || t.input && \"\" === t.input.val() ? null : this._daylightSavingAdjust(new Date(t.currentYear, t.currentMonth, t.currentDay));\n    },\n    _attachHandlers: function _attachHandlers(t) {\n      var e = this._get(t, \"stepMonths\"),\n        i = \"#\" + t.id.replace(/\\\\\\\\/g, \"\\\\\");\n      t.dpDiv.find(\"[data-handler]\").map(function () {\n        var t = {\n          prev: function prev() {\n            V.datepicker._adjustDate(i, -e, \"M\");\n          },\n          next: function next() {\n            V.datepicker._adjustDate(i, +e, \"M\");\n          },\n          hide: function hide() {\n            V.datepicker._hideDatepicker();\n          },\n          today: function today() {\n            V.datepicker._gotoToday(i);\n          },\n          selectDay: function selectDay() {\n            return V.datepicker._selectDay(i, +this.getAttribute(\"data-month\"), +this.getAttribute(\"data-year\"), this), !1;\n          },\n          selectMonth: function selectMonth() {\n            return V.datepicker._selectMonthYear(i, this, \"M\"), !1;\n          },\n          selectYear: function selectYear() {\n            return V.datepicker._selectMonthYear(i, this, \"Y\"), !1;\n          }\n        };\n        V(this).on(this.getAttribute(\"data-event\"), t[this.getAttribute(\"data-handler\")]);\n      });\n    },\n    _generateHTML: function _generateHTML(t) {\n      var e,\n        i,\n        s,\n        n,\n        o,\n        N,\n        W,\n        F,\n        L,\n        a,\n        r,\n        R,\n        l,\n        h,\n        c,\n        u,\n        d,\n        p,\n        f,\n        g,\n        m,\n        _,\n        Y,\n        v,\n        b,\n        B,\n        y,\n        j,\n        q,\n        w,\n        x,\n        k,\n        C = new Date(),\n        K = this._daylightSavingAdjust(new Date(C.getFullYear(), C.getMonth(), C.getDate())),\n        D = this._get(t, \"isRTL\"),\n        C = this._get(t, \"showButtonPanel\"),\n        I = this._get(t, \"hideIfNoPrevNext\"),\n        T = this._get(t, \"navigationAsDateFormat\"),\n        P = this._getNumberOfMonths(t),\n        M = this._get(t, \"showCurrentAtPos\"),\n        S = this._get(t, \"stepMonths\"),\n        U = 1 !== P[0] || 1 !== P[1],\n        H = this._daylightSavingAdjust(t.currentDay ? new Date(t.currentYear, t.currentMonth, t.currentDay) : new Date(9999, 9, 9)),\n        z = this._getMinMaxDate(t, \"min\"),\n        O = this._getMinMaxDate(t, \"max\"),\n        A = t.drawMonth - M,\n        E = t.drawYear;\n      if (A < 0 && (A += 12, E--), O) for (e = this._daylightSavingAdjust(new Date(O.getFullYear(), O.getMonth() - P[0] * P[1] + 1, O.getDate())), e = z && e < z ? z : e; this._daylightSavingAdjust(new Date(E, A, 1)) > e;) --A < 0 && (A = 11, E--);\n      for (t.drawMonth = A, t.drawYear = E, M = this._get(t, \"prevText\"), M = T ? this.formatDate(M, this._daylightSavingAdjust(new Date(E, A - S, 1)), this._getFormatConfig(t)) : M, i = this._canAdjustMonth(t, -1, E, A) ? V(\"<a>\").attr({\n        \"class\": \"ui-datepicker-prev ui-corner-all\",\n        \"data-handler\": \"prev\",\n        \"data-event\": \"click\",\n        title: M\n      }).append(V(\"<span>\").addClass(\"ui-icon ui-icon-circle-triangle-\" + (D ? \"e\" : \"w\")).text(M))[0].outerHTML : I ? \"\" : V(\"<a>\").attr({\n        \"class\": \"ui-datepicker-prev ui-corner-all ui-state-disabled\",\n        title: M\n      }).append(V(\"<span>\").addClass(\"ui-icon ui-icon-circle-triangle-\" + (D ? \"e\" : \"w\")).text(M))[0].outerHTML, M = this._get(t, \"nextText\"), M = T ? this.formatDate(M, this._daylightSavingAdjust(new Date(E, A + S, 1)), this._getFormatConfig(t)) : M, s = this._canAdjustMonth(t, 1, E, A) ? V(\"<a>\").attr({\n        \"class\": \"ui-datepicker-next ui-corner-all\",\n        \"data-handler\": \"next\",\n        \"data-event\": \"click\",\n        title: M\n      }).append(V(\"<span>\").addClass(\"ui-icon ui-icon-circle-triangle-\" + (D ? \"w\" : \"e\")).text(M))[0].outerHTML : I ? \"\" : V(\"<a>\").attr({\n        \"class\": \"ui-datepicker-next ui-corner-all ui-state-disabled\",\n        title: M\n      }).append(V(\"<span>\").attr(\"class\", \"ui-icon ui-icon-circle-triangle-\" + (D ? \"w\" : \"e\")).text(M))[0].outerHTML, S = this._get(t, \"currentText\"), I = this._get(t, \"gotoCurrent\") && t.currentDay ? H : K, S = T ? this.formatDate(S, I, this._getFormatConfig(t)) : S, M = \"\", t.inline || (M = V(\"<button>\").attr({\n        type: \"button\",\n        \"class\": \"ui-datepicker-close ui-state-default ui-priority-primary ui-corner-all\",\n        \"data-handler\": \"hide\",\n        \"data-event\": \"click\"\n      }).text(this._get(t, \"closeText\"))[0].outerHTML), T = \"\", C && (T = V(\"<div class='ui-datepicker-buttonpane ui-widget-content'>\").append(D ? M : \"\").append(this._isInRange(t, I) ? V(\"<button>\").attr({\n        type: \"button\",\n        \"class\": \"ui-datepicker-current ui-state-default ui-priority-secondary ui-corner-all\",\n        \"data-handler\": \"today\",\n        \"data-event\": \"click\"\n      }).text(S) : \"\").append(D ? \"\" : M)[0].outerHTML), n = parseInt(this._get(t, \"firstDay\"), 10), n = isNaN(n) ? 0 : n, o = this._get(t, \"showWeek\"), N = this._get(t, \"dayNames\"), W = this._get(t, \"dayNamesMin\"), F = this._get(t, \"monthNames\"), L = this._get(t, \"monthNamesShort\"), a = this._get(t, \"beforeShowDay\"), r = this._get(t, \"showOtherMonths\"), R = this._get(t, \"selectOtherMonths\"), l = this._getDefaultDate(t), h = \"\", u = 0; u < P[0]; u++) {\n        for (d = \"\", this.maxRows = 4, p = 0; p < P[1]; p++) {\n          if (f = this._daylightSavingAdjust(new Date(E, A, t.selectedDay)), g = \" ui-corner-all\", m = \"\", U) {\n            if (m += \"<div class='ui-datepicker-group\", 1 < P[1]) switch (p) {\n              case 0:\n                m += \" ui-datepicker-group-first\", g = \" ui-corner-\" + (D ? \"right\" : \"left\");\n                break;\n              case P[1] - 1:\n                m += \" ui-datepicker-group-last\", g = \" ui-corner-\" + (D ? \"left\" : \"right\");\n                break;\n              default:\n                m += \" ui-datepicker-group-middle\", g = \"\";\n            }\n            m += \"'>\";\n          }\n          for (m += \"<div class='ui-datepicker-header ui-widget-header ui-helper-clearfix\" + g + \"'>\" + (/all|left/.test(g) && 0 === u ? D ? s : i : \"\") + (/all|right/.test(g) && 0 === u ? D ? i : s : \"\") + this._generateMonthYearHeader(t, A, E, z, O, 0 < u || 0 < p, F, L) + \"</div><table class='ui-datepicker-calendar'><thead><tr>\", _ = o ? \"<th class='ui-datepicker-week-col'>\" + this._get(t, \"weekHeader\") + \"</th>\" : \"\", c = 0; c < 7; c++) _ += \"<th scope='col'\" + (5 <= (c + n + 6) % 7 ? \" class='ui-datepicker-week-end'\" : \"\") + \"><span title='\" + N[Y = (c + n) % 7] + \"'>\" + W[Y] + \"</span></th>\";\n          for (m += _ + \"</tr></thead><tbody>\", b = this._getDaysInMonth(E, A), E === t.selectedYear && A === t.selectedMonth && (t.selectedDay = Math.min(t.selectedDay, b)), v = (this._getFirstDayOfMonth(E, A) - n + 7) % 7, b = Math.ceil((v + b) / 7), B = U && this.maxRows > b ? this.maxRows : b, this.maxRows = B, y = this._daylightSavingAdjust(new Date(E, A, 1 - v)), j = 0; j < B; j++) {\n            for (m += \"<tr>\", q = o ? \"<td class='ui-datepicker-week-col'>\" + this._get(t, \"calculateWeek\")(y) + \"</td>\" : \"\", c = 0; c < 7; c++) w = a ? a.apply(t.input ? t.input[0] : null, [y]) : [!0, \"\"], k = (x = y.getMonth() !== A) && !R || !w[0] || z && y < z || O && O < y, q += \"<td class='\" + (5 <= (c + n + 6) % 7 ? \" ui-datepicker-week-end\" : \"\") + (x ? \" ui-datepicker-other-month\" : \"\") + (y.getTime() === f.getTime() && A === t.selectedMonth && t._keyEvent || l.getTime() === y.getTime() && l.getTime() === f.getTime() ? \" \" + this._dayOverClass : \"\") + (k ? \" \" + this._unselectableClass + \" ui-state-disabled\" : \"\") + (x && !r ? \"\" : \" \" + w[1] + (y.getTime() === H.getTime() ? \" \" + this._currentClass : \"\") + (y.getTime() === K.getTime() ? \" ui-datepicker-today\" : \"\")) + \"'\" + (x && !r || !w[2] ? \"\" : \" title='\" + w[2].replace(/'/g, \"&#39;\") + \"'\") + (k ? \"\" : \" data-handler='selectDay' data-event='click' data-month='\" + y.getMonth() + \"' data-year='\" + y.getFullYear() + \"'\") + \">\" + (x && !r ? \"&#xa0;\" : k ? \"<span class='ui-state-default'>\" + y.getDate() + \"</span>\" : \"<a class='ui-state-default\" + (y.getTime() === K.getTime() ? \" ui-state-highlight\" : \"\") + (y.getTime() === H.getTime() ? \" ui-state-active\" : \"\") + (x ? \" ui-priority-secondary\" : \"\") + \"' href='#' aria-current='\" + (y.getTime() === H.getTime() ? \"true\" : \"false\") + \"' data-date='\" + y.getDate() + \"'>\" + y.getDate() + \"</a>\") + \"</td>\", y.setDate(y.getDate() + 1), y = this._daylightSavingAdjust(y);\n            m += q + \"</tr>\";\n          }\n          11 < ++A && (A = 0, E++), d += m += \"</tbody></table>\" + (U ? \"</div>\" + (0 < P[0] && p === P[1] - 1 ? \"<div class='ui-datepicker-row-break'></div>\" : \"\") : \"\");\n        }\n        h += d;\n      }\n      return h += T, t._keyEvent = !1, h;\n    },\n    _generateMonthYearHeader: function _generateMonthYearHeader(t, e, i, s, n, o, a, r) {\n      var l,\n        h,\n        c,\n        u,\n        d,\n        p,\n        f = this._get(t, \"changeMonth\"),\n        g = this._get(t, \"changeYear\"),\n        m = this._get(t, \"showMonthAfterYear\"),\n        _ = this._get(t, \"selectMonthLabel\"),\n        v = this._get(t, \"selectYearLabel\"),\n        b = \"<div class='ui-datepicker-title'>\",\n        y = \"\";\n      if (o || !f) y += \"<span class='ui-datepicker-month'>\" + a[e] + \"</span>\";else {\n        for (l = s && s.getFullYear() === i, h = n && n.getFullYear() === i, y += \"<select class='ui-datepicker-month' aria-label='\" + _ + \"' data-handler='selectMonth' data-event='change'>\", c = 0; c < 12; c++) (!l || c >= s.getMonth()) && (!h || c <= n.getMonth()) && (y += \"<option value='\" + c + \"'\" + (c === e ? \" selected='selected'\" : \"\") + \">\" + r[c] + \"</option>\");\n        y += \"</select>\";\n      }\n      if (m || (b += y + (!o && f && g ? \"\" : \"&#xa0;\")), !t.yearshtml) if (t.yearshtml = \"\", o || !g) b += \"<span class='ui-datepicker-year'>\" + i + \"</span>\";else {\n        for (a = this._get(t, \"yearRange\").split(\":\"), u = new Date().getFullYear(), d = (_ = function _(t) {\n          t = t.match(/c[+\\-].*/) ? i + parseInt(t.substring(1), 10) : t.match(/[+\\-].*/) ? u + parseInt(t, 10) : parseInt(t, 10);\n          return isNaN(t) ? u : t;\n        })(a[0]), p = Math.max(d, _(a[1] || \"\")), d = s ? Math.max(d, s.getFullYear()) : d, p = n ? Math.min(p, n.getFullYear()) : p, t.yearshtml += \"<select class='ui-datepicker-year' aria-label='\" + v + \"' data-handler='selectYear' data-event='change'>\"; d <= p; d++) t.yearshtml += \"<option value='\" + d + \"'\" + (d === i ? \" selected='selected'\" : \"\") + \">\" + d + \"</option>\";\n        t.yearshtml += \"</select>\", b += t.yearshtml, t.yearshtml = null;\n      }\n      return b += this._get(t, \"yearSuffix\"), m && (b += (!o && f && g ? \"\" : \"&#xa0;\") + y), b += \"</div>\";\n    },\n    _adjustInstDate: function _adjustInstDate(t, e, i) {\n      var s = t.selectedYear + (\"Y\" === i ? e : 0),\n        n = t.selectedMonth + (\"M\" === i ? e : 0),\n        e = Math.min(t.selectedDay, this._getDaysInMonth(s, n)) + (\"D\" === i ? e : 0),\n        s = this._restrictMinMax(t, this._daylightSavingAdjust(new Date(s, n, e)));\n      t.selectedDay = s.getDate(), t.drawMonth = t.selectedMonth = s.getMonth(), t.drawYear = t.selectedYear = s.getFullYear(), \"M\" !== i && \"Y\" !== i || this._notifyChange(t);\n    },\n    _restrictMinMax: function _restrictMinMax(t, e) {\n      var i = this._getMinMaxDate(t, \"min\"),\n        t = this._getMinMaxDate(t, \"max\"),\n        i = i && e < i ? i : e;\n      return t && t < i ? t : i;\n    },\n    _notifyChange: function _notifyChange(t) {\n      var e = this._get(t, \"onChangeMonthYear\");\n      e && e.apply(t.input ? t.input[0] : null, [t.selectedYear, t.selectedMonth + 1, t]);\n    },\n    _getNumberOfMonths: function _getNumberOfMonths(t) {\n      t = this._get(t, \"numberOfMonths\");\n      return null == t ? [1, 1] : \"number\" == typeof t ? [1, t] : t;\n    },\n    _getMinMaxDate: function _getMinMaxDate(t, e) {\n      return this._determineDate(t, this._get(t, e + \"Date\"), null);\n    },\n    _getDaysInMonth: function _getDaysInMonth(t, e) {\n      return 32 - this._daylightSavingAdjust(new Date(t, e, 32)).getDate();\n    },\n    _getFirstDayOfMonth: function _getFirstDayOfMonth(t, e) {\n      return new Date(t, e, 1).getDay();\n    },\n    _canAdjustMonth: function _canAdjustMonth(t, e, i, s) {\n      var n = this._getNumberOfMonths(t),\n        i = this._daylightSavingAdjust(new Date(i, s + (e < 0 ? e : n[0] * n[1]), 1));\n      return e < 0 && i.setDate(this._getDaysInMonth(i.getFullYear(), i.getMonth())), this._isInRange(t, i);\n    },\n    _isInRange: function _isInRange(t, e) {\n      var i,\n        s = this._getMinMaxDate(t, \"min\"),\n        n = this._getMinMaxDate(t, \"max\"),\n        o = null,\n        a = null,\n        t = this._get(t, \"yearRange\");\n      return t && (t = t.split(\":\"), i = new Date().getFullYear(), o = parseInt(t[0], 10), a = parseInt(t[1], 10), t[0].match(/[+\\-].*/) && (o += i), t[1].match(/[+\\-].*/)) && (a += i), (!s || e.getTime() >= s.getTime()) && (!n || e.getTime() <= n.getTime()) && (!o || e.getFullYear() >= o) && (!a || e.getFullYear() <= a);\n    },\n    _getFormatConfig: function _getFormatConfig(t) {\n      var e = this._get(t, \"shortYearCutoff\");\n      return {\n        shortYearCutoff: \"string\" != typeof e ? e : new Date().getFullYear() % 100 + parseInt(e, 10),\n        dayNamesShort: this._get(t, \"dayNamesShort\"),\n        dayNames: this._get(t, \"dayNames\"),\n        monthNamesShort: this._get(t, \"monthNamesShort\"),\n        monthNames: this._get(t, \"monthNames\")\n      };\n    },\n    _formatDate: function _formatDate(t, e, i, s) {\n      e || (t.currentDay = t.selectedDay, t.currentMonth = t.selectedMonth, t.currentYear = t.selectedYear);\n      s = e ? \"object\" == _typeof(e) ? e : this._daylightSavingAdjust(new Date(s, i, e)) : this._daylightSavingAdjust(new Date(t.currentYear, t.currentMonth, t.currentDay));\n      return this.formatDate(this._get(t, \"dateFormat\"), s, this._getFormatConfig(t));\n    }\n  }), V.fn.datepicker = function (t) {\n    if (!this.length) return this;\n    V.datepicker.initialized || (V(document).on(\"mousedown\", V.datepicker._checkExternalClick), V.datepicker.initialized = !0), 0 === V(\"#\" + V.datepicker._mainDivId).length && V(\"body\").append(V.datepicker.dpDiv);\n    var e = Array.prototype.slice.call(arguments, 1);\n    return \"string\" == typeof t && (\"isDisabled\" === t || \"getDate\" === t || \"widget\" === t) || \"option\" === t && 2 === arguments.length && \"string\" == typeof arguments[1] ? V.datepicker[\"_\" + t + \"Datepicker\"].apply(V.datepicker, [this[0]].concat(e)) : this.each(function () {\n      \"string\" == typeof t ? V.datepicker[\"_\" + t + \"Datepicker\"].apply(V.datepicker, [this].concat(e)) : V.datepicker._attachDatepicker(this, t);\n    });\n  }, V.datepicker = new nt(), V.datepicker.initialized = !1, V.datepicker.uuid = new Date().getTime(), V.datepicker.version = \"1.14.1\";\n  var z = !1;\n  V(document).on(\"mouseup\", function () {\n    z = !1;\n  }), V.widget(\"ui.mouse\", {\n    version: \"1.14.1\",\n    options: {\n      cancel: \"input, textarea, button, select, option\",\n      distance: 1,\n      delay: 0\n    },\n    _mouseInit: function _mouseInit() {\n      var e = this;\n      this.element.on(\"mousedown.\" + this.widgetName, function (t) {\n        return e._mouseDown(t);\n      }).on(\"click.\" + this.widgetName, function (t) {\n        if (!0 === V.data(t.target, e.widgetName + \".preventClickEvent\")) return V.removeData(t.target, e.widgetName + \".preventClickEvent\"), t.stopImmediatePropagation(), !1;\n      }), this.started = !1;\n    },\n    _mouseDestroy: function _mouseDestroy() {\n      this.element.off(\".\" + this.widgetName), this._mouseMoveDelegate && this.document.off(\"mousemove.\" + this.widgetName, this._mouseMoveDelegate).off(\"mouseup.\" + this.widgetName, this._mouseUpDelegate);\n    },\n    _mouseDown: function _mouseDown(t) {\n      var e, i, s;\n      if (!z) return this._mouseMoved = !1, this._mouseStarted && this._mouseUp(t), i = 1 === (this._mouseDownEvent = t).which, s = \"string\" == typeof (e = this).options.cancel && V(t.target).closest(this.options.cancel).length, i && !s && this._mouseCapture(t) && (this.mouseDelayMet = !this.options.delay, this.mouseDelayMet || (this._mouseDelayTimer = setTimeout(function () {\n        e.mouseDelayMet = !0;\n      }, this.options.delay)), this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = !1 !== this._mouseStart(t), !this._mouseStarted) ? t.preventDefault() : (!0 === V.data(t.target, this.widgetName + \".preventClickEvent\") && V.removeData(t.target, this.widgetName + \".preventClickEvent\"), this._mouseMoveDelegate = function (t) {\n        return e._mouseMove(t);\n      }, this._mouseUpDelegate = function (t) {\n        return e._mouseUp(t);\n      }, this.document.on(\"mousemove.\" + this.widgetName, this._mouseMoveDelegate).on(\"mouseup.\" + this.widgetName, this._mouseUpDelegate), t.preventDefault(), z = !0)), !0;\n    },\n    _mouseMove: function _mouseMove(t) {\n      if (this._mouseMoved && !t.which) if (t.originalEvent.altKey || t.originalEvent.ctrlKey || t.originalEvent.metaKey || t.originalEvent.shiftKey) this.ignoreMissingWhich = !0;else if (!this.ignoreMissingWhich) return this._mouseUp(t);\n      return (t.which || t.button) && (this._mouseMoved = !0), this._mouseStarted ? (this._mouseDrag(t), t.preventDefault()) : (this._mouseDistanceMet(t) && this._mouseDelayMet(t) && (this._mouseStarted = !1 !== this._mouseStart(this._mouseDownEvent, t), this._mouseStarted ? this._mouseDrag(t) : this._mouseUp(t)), !this._mouseStarted);\n    },\n    _mouseUp: function _mouseUp(t) {\n      this.document.off(\"mousemove.\" + this.widgetName, this._mouseMoveDelegate).off(\"mouseup.\" + this.widgetName, this._mouseUpDelegate), this._mouseStarted && (this._mouseStarted = !1, t.target === this._mouseDownEvent.target && V.data(t.target, this.widgetName + \".preventClickEvent\", !0), this._mouseStop(t)), this._mouseDelayTimer && (clearTimeout(this._mouseDelayTimer), delete this._mouseDelayTimer), this.ignoreMissingWhich = !1, z = !1, t.preventDefault();\n    },\n    _mouseDistanceMet: function _mouseDistanceMet(t) {\n      return Math.max(Math.abs(this._mouseDownEvent.pageX - t.pageX), Math.abs(this._mouseDownEvent.pageY - t.pageY)) >= this.options.distance;\n    },\n    _mouseDelayMet: function _mouseDelayMet() {\n      return this.mouseDelayMet;\n    },\n    _mouseStart: function _mouseStart() {},\n    _mouseDrag: function _mouseDrag() {},\n    _mouseStop: function _mouseStop() {},\n    _mouseCapture: function _mouseCapture() {\n      return !0;\n    }\n  }), V.ui.plugin = {\n    add: function add(t, e, i) {\n      var s,\n        n = V.ui[t].prototype;\n      for (s in i) n.plugins[s] = n.plugins[s] || [], n.plugins[s].push([e, i[s]]);\n    },\n    call: function call(t, e, i, s) {\n      var n,\n        o = t.plugins[e];\n      if (o && (s || t.element[0].parentNode && 11 !== t.element[0].parentNode.nodeType)) for (n = 0; n < o.length; n++) t.options[o[n][0]] && o[n][1].apply(t.element, i);\n    }\n  }, V.widget(\"ui.draggable\", V.ui.mouse, {\n    version: \"1.14.1\",\n    widgetEventPrefix: \"drag\",\n    options: {\n      addClasses: !0,\n      appendTo: \"parent\",\n      axis: !1,\n      connectToSortable: !1,\n      containment: !1,\n      cursor: \"auto\",\n      cursorAt: !1,\n      grid: !1,\n      handle: !1,\n      helper: \"original\",\n      iframeFix: !1,\n      opacity: !1,\n      refreshPositions: !1,\n      revert: !1,\n      revertDuration: 500,\n      scope: \"default\",\n      scroll: !0,\n      scrollSensitivity: 20,\n      scrollSpeed: 20,\n      snap: !1,\n      snapMode: \"both\",\n      snapTolerance: 20,\n      stack: !1,\n      zIndex: !1,\n      drag: null,\n      start: null,\n      stop: null\n    },\n    _create: function _create() {\n      \"original\" === this.options.helper && this._setPositionRelative(), this.options.addClasses && this._addClass(\"ui-draggable\"), this._setHandleClassName(), this._mouseInit();\n    },\n    _setOption: function _setOption(t, e) {\n      this._super(t, e), \"handle\" === t && (this._removeHandleClassName(), this._setHandleClassName());\n    },\n    _destroy: function _destroy() {\n      (this.helper || this.element).is(\".ui-draggable-dragging\") ? this.destroyOnClear = !0 : (this._removeHandleClassName(), this._mouseDestroy());\n    },\n    _mouseCapture: function _mouseCapture(t) {\n      var e = this.options;\n      return !(this.helper || e.disabled || 0 < V(t.target).closest(\".ui-resizable-handle\").length || (this.handle = this._getHandle(t), !this.handle) || (this._blurActiveElement(t), this._blockFrames(!0 === e.iframeFix ? \"iframe\" : e.iframeFix), 0));\n    },\n    _blockFrames: function _blockFrames(t) {\n      this.iframeBlocks = this.document.find(t).map(function () {\n        var t = V(this);\n        return V(\"<div>\").css(\"position\", \"absolute\").appendTo(t.parent()).outerWidth(t.outerWidth()).outerHeight(t.outerHeight()).offset(t.offset())[0];\n      });\n    },\n    _unblockFrames: function _unblockFrames() {\n      this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);\n    },\n    _blurActiveElement: function _blurActiveElement(t) {\n      var e = this.document[0].activeElement;\n      V(t.target).closest(e).length || V(e).trigger(\"blur\");\n    },\n    _mouseStart: function _mouseStart(t) {\n      var e = this.options;\n      return this.helper = this._createHelper(t), this._addClass(this.helper, \"ui-draggable-dragging\"), this._cacheHelperProportions(), V.ui.ddmanager && (V.ui.ddmanager.current = this), this._cacheMargins(), this.cssPosition = this.helper.css(\"position\"), this.scrollParent = this.helper.scrollParent(!0), this.offsetParent = this.helper.offsetParent(), this.hasFixedAncestor = 0 < this.helper.parents().filter(function () {\n        return \"fixed\" === V(this).css(\"position\");\n      }).length, this.positionAbs = this.element.offset(), this._refreshOffsets(t), this.originalPosition = this.position = this._generatePosition(t, !1), this.originalPageX = t.pageX, this.originalPageY = t.pageY, e.cursorAt && this._adjustOffsetFromHelper(e.cursorAt), this._setContainment(), !1 === this._trigger(\"start\", t) ? (this._clear(), !1) : (this._cacheHelperProportions(), V.ui.ddmanager && !e.dropBehaviour && V.ui.ddmanager.prepareOffsets(this, t), this._mouseDrag(t, !0), V.ui.ddmanager && V.ui.ddmanager.dragStart(this, t), !0);\n    },\n    _refreshOffsets: function _refreshOffsets(t) {\n      this.offset = {\n        top: this.positionAbs.top - this.margins.top,\n        left: this.positionAbs.left - this.margins.left,\n        scroll: !1,\n        parent: this._getParentOffset(),\n        relative: this._getRelativeOffset()\n      }, this.offset.click = {\n        left: t.pageX - this.offset.left,\n        top: t.pageY - this.offset.top\n      };\n    },\n    _mouseDrag: function _mouseDrag(t, e) {\n      if (this.hasFixedAncestor && (this.offset.parent = this._getParentOffset()), this.position = this._generatePosition(t, !0), this.positionAbs = this._convertPositionTo(\"absolute\"), !e) {\n        e = this._uiHash();\n        if (!1 === this._trigger(\"drag\", t, e)) return this._mouseUp(new V.Event(\"mouseup\", t)), !1;\n        this.position = e.position;\n      }\n      return this.helper[0].style.left = this.position.left + \"px\", this.helper[0].style.top = this.position.top + \"px\", V.ui.ddmanager && V.ui.ddmanager.drag(this, t), !1;\n    },\n    _mouseStop: function _mouseStop(t) {\n      var e = this,\n        i = !1;\n      return V.ui.ddmanager && !this.options.dropBehaviour && (i = V.ui.ddmanager.drop(this, t)), this.dropped && (i = this.dropped, this.dropped = !1), \"invalid\" === this.options.revert && !i || \"valid\" === this.options.revert && i || !0 === this.options.revert || \"function\" == typeof this.options.revert && this.options.revert.call(this.element, i) ? V(this.helper).animate(this.originalPosition, parseInt(this.options.revertDuration, 10), function () {\n        !1 !== e._trigger(\"stop\", t) && e._clear();\n      }) : !1 !== this._trigger(\"stop\", t) && this._clear(), !1;\n    },\n    _mouseUp: function _mouseUp(t) {\n      return this._unblockFrames(), V.ui.ddmanager && V.ui.ddmanager.dragStop(this, t), this.handleElement.is(t.target) && this.element.trigger(\"focus\"), V.ui.mouse.prototype._mouseUp.call(this, t);\n    },\n    cancel: function cancel() {\n      return this.helper.is(\".ui-draggable-dragging\") ? this._mouseUp(new V.Event(\"mouseup\", {\n        target: this.element[0]\n      })) : this._clear(), this;\n    },\n    _getHandle: function _getHandle(t) {\n      return !this.options.handle || !!V(t.target).closest(this.element.find(this.options.handle)).length;\n    },\n    _setHandleClassName: function _setHandleClassName() {\n      this.handleElement = this.options.handle ? this.element.find(this.options.handle) : this.element, this._addClass(this.handleElement, \"ui-draggable-handle\");\n    },\n    _removeHandleClassName: function _removeHandleClassName() {\n      this._removeClass(this.handleElement, \"ui-draggable-handle\");\n    },\n    _createHelper: function _createHelper(t) {\n      var e = this.options,\n        i = \"function\" == typeof e.helper,\n        t = i ? V(e.helper.apply(this.element[0], [t])) : \"clone\" === e.helper ? this.element.clone().removeAttr(\"id\") : this.element;\n      return t.parents(\"body\").length || t.appendTo(\"parent\" === e.appendTo ? this.element[0].parentNode : e.appendTo), i && t[0] === this.element[0] && this._setPositionRelative(), t[0] === this.element[0] || /(fixed|absolute)/.test(t.css(\"position\")) || t.css(\"position\", \"absolute\"), t;\n    },\n    _setPositionRelative: function _setPositionRelative() {\n      /^(?:r|a|f)/.test(this.element.css(\"position\")) || (this.element[0].style.position = \"relative\");\n    },\n    _adjustOffsetFromHelper: function _adjustOffsetFromHelper(t) {\n      \"string\" == typeof t && (t = t.split(\" \")), \"left\" in (t = Array.isArray(t) ? {\n        left: +t[0],\n        top: +t[1] || 0\n      } : t) && (this.offset.click.left = t.left + this.margins.left), \"right\" in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), \"top\" in t && (this.offset.click.top = t.top + this.margins.top), \"bottom\" in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top);\n    },\n    _isRootNode: function _isRootNode(t) {\n      return /(html|body)/i.test(t.tagName) || t === this.document[0];\n    },\n    _getParentOffset: function _getParentOffset() {\n      var t = this.offsetParent.offset(),\n        e = this.document[0];\n      return \"absolute\" === this.cssPosition && this.scrollParent[0] !== e && V.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), {\n        top: (t = this._isRootNode(this.offsetParent[0]) ? {\n          top: 0,\n          left: 0\n        } : t).top + (parseInt(this.offsetParent.css(\"borderTopWidth\"), 10) || 0),\n        left: t.left + (parseInt(this.offsetParent.css(\"borderLeftWidth\"), 10) || 0)\n      };\n    },\n    _getRelativeOffset: function _getRelativeOffset() {\n      var t, e;\n      return \"relative\" !== this.cssPosition ? {\n        top: 0,\n        left: 0\n      } : (t = this.element.position(), e = this._isRootNode(this.scrollParent[0]), {\n        top: t.top - (parseInt(this.helper.css(\"top\"), 10) || 0) + (e ? 0 : this.scrollParent.scrollTop()),\n        left: t.left - (parseInt(this.helper.css(\"left\"), 10) || 0) + (e ? 0 : this.scrollParent.scrollLeft())\n      });\n    },\n    _cacheMargins: function _cacheMargins() {\n      this.margins = {\n        left: parseInt(this.element.css(\"marginLeft\"), 10) || 0,\n        top: parseInt(this.element.css(\"marginTop\"), 10) || 0,\n        right: parseInt(this.element.css(\"marginRight\"), 10) || 0,\n        bottom: parseInt(this.element.css(\"marginBottom\"), 10) || 0\n      };\n    },\n    _cacheHelperProportions: function _cacheHelperProportions() {\n      this.helperProportions = {\n        width: this.helper.outerWidth(),\n        height: this.helper.outerHeight()\n      };\n    },\n    _setContainment: function _setContainment() {\n      var t,\n        e = this.options,\n        i = this.document[0];\n      this.relativeContainer = null, e.containment ? \"window\" === e.containment ? this.containment = [V(window).scrollLeft() - this.offset.relative.left - this.offset.parent.left, V(window).scrollTop() - this.offset.relative.top - this.offset.parent.top, V(window).scrollLeft() + V(window).width() - this.helperProportions.width - this.margins.left, V(window).scrollTop() + (V(window).height() || i.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top] : \"document\" === e.containment ? this.containment = [0, 0, V(i).width() - this.helperProportions.width - this.margins.left, (V(i).height() || i.body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top] : e.containment.constructor === Array ? this.containment = e.containment : (\"parent\" === e.containment && (e.containment = this.helper[0].parentNode), (e = (i = V(e.containment))[0]) && (t = /(scroll|auto)/.test(i.css(\"overflow\")), this.containment = [(parseInt(i.css(\"borderLeftWidth\"), 10) || 0) + (parseInt(i.css(\"paddingLeft\"), 10) || 0), (parseInt(i.css(\"borderTopWidth\"), 10) || 0) + (parseInt(i.css(\"paddingTop\"), 10) || 0), (t ? Math.max(e.scrollWidth, e.offsetWidth) : e.offsetWidth) - (parseInt(i.css(\"borderRightWidth\"), 10) || 0) - (parseInt(i.css(\"paddingRight\"), 10) || 0) - this.helperProportions.width - this.margins.left - this.margins.right, (t ? Math.max(e.scrollHeight, e.offsetHeight) : e.offsetHeight) - (parseInt(i.css(\"borderBottomWidth\"), 10) || 0) - (parseInt(i.css(\"paddingBottom\"), 10) || 0) - this.helperProportions.height - this.margins.top - this.margins.bottom], this.relativeContainer = i)) : this.containment = null;\n    },\n    _convertPositionTo: function _convertPositionTo(t, e) {\n      e = e || this.position;\n      var t = \"absolute\" === t ? 1 : -1,\n        i = this._isRootNode(this.scrollParent[0]);\n      return {\n        top: e.top + this.offset.relative.top * t + this.offset.parent.top * t - (\"fixed\" === this.cssPosition ? -this.offset.scroll.top : i ? 0 : this.offset.scroll.top) * t,\n        left: e.left + this.offset.relative.left * t + this.offset.parent.left * t - (\"fixed\" === this.cssPosition ? -this.offset.scroll.left : i ? 0 : this.offset.scroll.left) * t\n      };\n    },\n    _generatePosition: function _generatePosition(t, e) {\n      var i,\n        s = this.options,\n        n = this._isRootNode(this.scrollParent[0]),\n        o = t.pageX,\n        a = t.pageY;\n      return n && this.offset.scroll || (this.offset.scroll = {\n        top: this.scrollParent.scrollTop(),\n        left: this.scrollParent.scrollLeft()\n      }), {\n        top: (a = e && (this.containment && (i = this.relativeContainer ? (e = this.relativeContainer.offset(), [this.containment[0] + e.left, this.containment[1] + e.top, this.containment[2] + e.left, this.containment[3] + e.top]) : this.containment, t.pageX - this.offset.click.left < i[0] && (o = i[0] + this.offset.click.left), t.pageY - this.offset.click.top < i[1] && (a = i[1] + this.offset.click.top), t.pageX - this.offset.click.left > i[2] && (o = i[2] + this.offset.click.left), t.pageY - this.offset.click.top > i[3]) && (a = i[3] + this.offset.click.top), s.grid && (e = s.grid[1] ? this.originalPageY + Math.round((a - this.originalPageY) / s.grid[1]) * s.grid[1] : this.originalPageY, a = !i || e - this.offset.click.top >= i[1] || e - this.offset.click.top > i[3] ? e : e - this.offset.click.top >= i[1] ? e - s.grid[1] : e + s.grid[1], t = s.grid[0] ? this.originalPageX + Math.round((o - this.originalPageX) / s.grid[0]) * s.grid[0] : this.originalPageX, o = !i || t - this.offset.click.left >= i[0] || t - this.offset.click.left > i[2] ? t : t - this.offset.click.left >= i[0] ? t - s.grid[0] : t + s.grid[0]), \"y\" === s.axis && (o = this.originalPageX), \"x\" === s.axis) ? this.originalPageY : a) - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (\"fixed\" === this.cssPosition ? -this.offset.scroll.top : n ? 0 : this.offset.scroll.top),\n        left: o - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (\"fixed\" === this.cssPosition ? -this.offset.scroll.left : n ? 0 : this.offset.scroll.left)\n      };\n    },\n    _clear: function _clear() {\n      this._removeClass(this.helper, \"ui-draggable-dragging\"), this.helper[0] === this.element[0] || this.cancelHelperRemoval || this.helper.remove(), this.helper = null, this.cancelHelperRemoval = !1, this.destroyOnClear && this.destroy();\n    },\n    _trigger: function _trigger(t, e, i) {\n      return i = i || this._uiHash(), V.ui.plugin.call(this, t, [e, i, this], !0), /^(drag|start|stop)/.test(t) && (this.positionAbs = this._convertPositionTo(\"absolute\"), i.offset = this.positionAbs), V.Widget.prototype._trigger.call(this, t, e, i);\n    },\n    plugins: {},\n    _uiHash: function _uiHash() {\n      return {\n        helper: this.helper,\n        position: this.position,\n        originalPosition: this.originalPosition,\n        offset: this.positionAbs\n      };\n    }\n  }), V.ui.plugin.add(\"draggable\", \"connectToSortable\", {\n    start: function start(e, t, i) {\n      var s = V.extend({}, t, {\n        item: i.element\n      });\n      i.sortables = [], V(i.options.connectToSortable).each(function () {\n        var t = V(this).sortable(\"instance\");\n        t && !t.options.disabled && (i.sortables.push(t), t.refreshPositions(), t._trigger(\"activate\", e, s));\n      });\n    },\n    stop: function stop(e, t, i) {\n      var s = V.extend({}, t, {\n        item: i.element\n      });\n      i.cancelHelperRemoval = !1, V.each(i.sortables, function () {\n        var t = this;\n        t.isOver ? (t.isOver = 0, i.cancelHelperRemoval = !0, t.cancelHelperRemoval = !1, t._storedCSS = {\n          position: t.placeholder.css(\"position\"),\n          top: t.placeholder.css(\"top\"),\n          left: t.placeholder.css(\"left\")\n        }, t._mouseStop(e), t.options.helper = t.options._helper) : (t.cancelHelperRemoval = !0, t._trigger(\"deactivate\", e, s));\n      });\n    },\n    drag: function drag(i, s, n) {\n      V.each(n.sortables, function () {\n        var t = !1,\n          e = this;\n        e.positionAbs = n.positionAbs, e.helperProportions = n.helperProportions, e.offset.click = n.offset.click, e._intersectsWith(e.containerCache) && (t = !0, V.each(n.sortables, function () {\n          return this.positionAbs = n.positionAbs, this.helperProportions = n.helperProportions, this.offset.click = n.offset.click, t = this !== e && this._intersectsWith(this.containerCache) && V.contains(e.element[0], this.element[0]) ? !1 : t;\n        })), t ? (e.isOver || (e.isOver = 1, n._parent = s.helper.parent(), e.currentItem = s.helper.appendTo(e.element).data(\"ui-sortable-item\", !0), e.options._helper = e.options.helper, e.options.helper = function () {\n          return s.helper[0];\n        }, i.target = e.currentItem[0], e._mouseCapture(i, !0), e._mouseStart(i, !0, !0), e.offset.click.top = n.offset.click.top, e.offset.click.left = n.offset.click.left, e.offset.parent.left -= n.offset.parent.left - e.offset.parent.left, e.offset.parent.top -= n.offset.parent.top - e.offset.parent.top, n._trigger(\"toSortable\", i), n.dropped = e.element, V.each(n.sortables, function () {\n          this.refreshPositions();\n        }), n.currentItem = n.element, e.fromOutside = n), e.currentItem && (e._mouseDrag(i), s.position = e.position)) : e.isOver && (e.isOver = 0, e.cancelHelperRemoval = !0, e.options._revert = e.options.revert, e.options.revert = !1, e._trigger(\"out\", i, e._uiHash(e)), e._mouseStop(i, !0), e.options.revert = e.options._revert, e.options.helper = e.options._helper, e.placeholder && e.placeholder.remove(), s.helper.appendTo(n._parent), n._refreshOffsets(i), s.position = n._generatePosition(i, !0), n._trigger(\"fromSortable\", i), n.dropped = !1, V.each(n.sortables, function () {\n          this.refreshPositions();\n        }));\n      });\n    }\n  }), V.ui.plugin.add(\"draggable\", \"cursor\", {\n    start: function start(t, e, i) {\n      var s = V(\"body\"),\n        i = i.options;\n      s.css(\"cursor\") && (i._cursor = s.css(\"cursor\")), s.css(\"cursor\", i.cursor);\n    },\n    stop: function stop(t, e, i) {\n      i = i.options;\n      i._cursor && V(\"body\").css(\"cursor\", i._cursor);\n    }\n  }), V.ui.plugin.add(\"draggable\", \"opacity\", {\n    start: function start(t, e, i) {\n      e = V(e.helper), i = i.options;\n      e.css(\"opacity\") && (i._opacity = e.css(\"opacity\")), e.css(\"opacity\", i.opacity);\n    },\n    stop: function stop(t, e, i) {\n      i = i.options;\n      i._opacity && V(e.helper).css(\"opacity\", i._opacity);\n    }\n  }), V.ui.plugin.add(\"draggable\", \"scroll\", {\n    start: function start(t, e, i) {\n      i.scrollParentNotHidden || (i.scrollParentNotHidden = i.helper.scrollParent(!1)), i.scrollParentNotHidden[0] !== i.document[0] && \"HTML\" !== i.scrollParentNotHidden[0].tagName && (i.overflowOffset = i.scrollParentNotHidden.offset());\n    },\n    drag: function drag(t, e, i) {\n      var s = i.options,\n        n = !1,\n        o = i.scrollParentNotHidden[0],\n        a = i.document[0];\n      o !== a && \"HTML\" !== o.tagName ? (s.axis && \"x\" === s.axis || (i.overflowOffset.top + o.offsetHeight - t.pageY < s.scrollSensitivity ? o.scrollTop = n = o.scrollTop + s.scrollSpeed : t.pageY - i.overflowOffset.top < s.scrollSensitivity && (o.scrollTop = n = o.scrollTop - s.scrollSpeed)), s.axis && \"y\" === s.axis || (i.overflowOffset.left + o.offsetWidth - t.pageX < s.scrollSensitivity ? o.scrollLeft = n = o.scrollLeft + s.scrollSpeed : t.pageX - i.overflowOffset.left < s.scrollSensitivity && (o.scrollLeft = n = o.scrollLeft - s.scrollSpeed))) : (s.axis && \"x\" === s.axis || (t.pageY - V(a).scrollTop() < s.scrollSensitivity ? n = V(a).scrollTop(V(a).scrollTop() - s.scrollSpeed) : V(window).height() - (t.pageY - V(a).scrollTop()) < s.scrollSensitivity && (n = V(a).scrollTop(V(a).scrollTop() + s.scrollSpeed))), s.axis && \"y\" === s.axis || (t.pageX - V(a).scrollLeft() < s.scrollSensitivity ? n = V(a).scrollLeft(V(a).scrollLeft() - s.scrollSpeed) : V(window).width() - (t.pageX - V(a).scrollLeft()) < s.scrollSensitivity && (n = V(a).scrollLeft(V(a).scrollLeft() + s.scrollSpeed)))), !1 !== n && V.ui.ddmanager && !s.dropBehaviour && V.ui.ddmanager.prepareOffsets(i, t);\n    }\n  }), V.ui.plugin.add(\"draggable\", \"snap\", {\n    start: function start(t, e, i) {\n      var s = i.options;\n      i.snapElements = [], V(s.snap.constructor !== String ? s.snap.items || \":data(ui-draggable)\" : s.snap).each(function () {\n        var t = V(this),\n          e = t.offset();\n        this !== i.element[0] && i.snapElements.push({\n          item: this,\n          width: t.outerWidth(),\n          height: t.outerHeight(),\n          top: e.top,\n          left: e.left\n        });\n      });\n    },\n    drag: function drag(t, e, i) {\n      for (var s, n, o, a, r, l, h, c, u, d = i.options, p = d.snapTolerance, f = e.offset.left, g = f + i.helperProportions.width, m = e.offset.top, _ = m + i.helperProportions.height, v = i.snapElements.length - 1; 0 <= v; v--) l = (r = i.snapElements[v].left - i.margins.left) + i.snapElements[v].width, c = (h = i.snapElements[v].top - i.margins.top) + i.snapElements[v].height, g < r - p || l + p < f || _ < h - p || c + p < m || !V.contains(i.snapElements[v].item.ownerDocument, i.snapElements[v].item) ? (i.snapElements[v].snapping && i.options.snap.release && i.options.snap.release.call(i.element, t, V.extend(i._uiHash(), {\n        snapItem: i.snapElements[v].item\n      })), i.snapElements[v].snapping = !1) : (\"inner\" !== d.snapMode && (s = Math.abs(h - _) <= p, n = Math.abs(c - m) <= p, o = Math.abs(r - g) <= p, a = Math.abs(l - f) <= p, s && (e.position.top = i._convertPositionTo(\"relative\", {\n        top: h - i.helperProportions.height,\n        left: 0\n      }).top), n && (e.position.top = i._convertPositionTo(\"relative\", {\n        top: c,\n        left: 0\n      }).top), o && (e.position.left = i._convertPositionTo(\"relative\", {\n        top: 0,\n        left: r - i.helperProportions.width\n      }).left), a) && (e.position.left = i._convertPositionTo(\"relative\", {\n        top: 0,\n        left: l\n      }).left), u = s || n || o || a, \"outer\" !== d.snapMode && (s = Math.abs(h - m) <= p, n = Math.abs(c - _) <= p, o = Math.abs(r - f) <= p, a = Math.abs(l - g) <= p, s && (e.position.top = i._convertPositionTo(\"relative\", {\n        top: h,\n        left: 0\n      }).top), n && (e.position.top = i._convertPositionTo(\"relative\", {\n        top: c - i.helperProportions.height,\n        left: 0\n      }).top), o && (e.position.left = i._convertPositionTo(\"relative\", {\n        top: 0,\n        left: r\n      }).left), a) && (e.position.left = i._convertPositionTo(\"relative\", {\n        top: 0,\n        left: l - i.helperProportions.width\n      }).left), !i.snapElements[v].snapping && (s || n || o || a || u) && i.options.snap.snap && i.options.snap.snap.call(i.element, t, V.extend(i._uiHash(), {\n        snapItem: i.snapElements[v].item\n      })), i.snapElements[v].snapping = s || n || o || a || u);\n    }\n  }), V.ui.plugin.add(\"draggable\", \"stack\", {\n    start: function start(t, e, i) {\n      var s,\n        i = i.options,\n        i = V.makeArray(V(i.stack)).sort(function (t, e) {\n          return (parseInt(V(t).css(\"zIndex\"), 10) || 0) - (parseInt(V(e).css(\"zIndex\"), 10) || 0);\n        });\n      i.length && (s = parseInt(V(i[0]).css(\"zIndex\"), 10) || 0, V(i).each(function (t) {\n        V(this).css(\"zIndex\", s + t);\n      }), this.css(\"zIndex\", s + i.length));\n    }\n  }), V.ui.plugin.add(\"draggable\", \"zIndex\", {\n    start: function start(t, e, i) {\n      e = V(e.helper), i = i.options;\n      e.css(\"zIndex\") && (i._zIndex = e.css(\"zIndex\")), e.css(\"zIndex\", i.zIndex);\n    },\n    stop: function stop(t, e, i) {\n      i = i.options;\n      i._zIndex && V(e.helper).css(\"zIndex\", i._zIndex);\n    }\n  }), V.ui.draggable, V.widget(\"ui.resizable\", V.ui.mouse, {\n    version: \"1.14.1\",\n    widgetEventPrefix: \"resize\",\n    options: {\n      alsoResize: !1,\n      animate: !1,\n      animateDuration: \"slow\",\n      animateEasing: \"swing\",\n      aspectRatio: !1,\n      autoHide: !1,\n      classes: {\n        \"ui-resizable-se\": \"ui-icon ui-icon-gripsmall-diagonal-se\"\n      },\n      containment: !1,\n      ghost: !1,\n      grid: !1,\n      handles: \"e,s,se\",\n      helper: !1,\n      maxHeight: null,\n      maxWidth: null,\n      minHeight: 10,\n      minWidth: 10,\n      zIndex: 90,\n      resize: null,\n      start: null,\n      stop: null\n    },\n    _num: function _num(t) {\n      return parseFloat(t) || 0;\n    },\n    _isNumber: function _isNumber(t) {\n      return !isNaN(parseFloat(t));\n    },\n    _hasScroll: function _hasScroll(t, e) {\n      var i = !1,\n        s = V(t).css(\"overflow\");\n      if (\"hidden\" === s) return !1;\n      if (\"scroll\" === s) return !0;\n      if (0 < t[s = e && \"left\" === e ? \"scrollLeft\" : \"scrollTop\"]) return !0;\n      try {\n        t[s] = 1, i = 0 < t[s], t[s] = 0;\n      } catch (t) {}\n      return i;\n    },\n    _create: function _create() {\n      var t,\n        e = this.options,\n        i = this;\n      this._addClass(\"ui-resizable\"), V.extend(this, {\n        _aspectRatio: !!e.aspectRatio,\n        aspectRatio: e.aspectRatio,\n        originalElement: this.element,\n        _proportionallyResizeElements: [],\n        _helper: e.helper || e.ghost || e.animate ? e.helper || \"ui-resizable-helper\" : null\n      }), this.element[0].nodeName.match(/^(canvas|textarea|input|select|button|img)$/i) && (this.element.wrap(V(\"<div class='ui-wrapper'></div>\").css({\n        overflow: \"hidden\",\n        position: this.element.css(\"position\"),\n        width: this.element.outerWidth(),\n        height: this.element.outerHeight(),\n        top: this.element.css(\"top\"),\n        left: this.element.css(\"left\")\n      })), this.element = this.element.parent().data(\"ui-resizable\", this.element.resizable(\"instance\")), this.elementIsWrapper = !0, t = {\n        marginTop: this.originalElement.css(\"marginTop\"),\n        marginRight: this.originalElement.css(\"marginRight\"),\n        marginBottom: this.originalElement.css(\"marginBottom\"),\n        marginLeft: this.originalElement.css(\"marginLeft\")\n      }, this.element.css(t), this.originalResizeStyle = this.originalElement.css(\"resize\"), this.originalElement.css(\"resize\", \"none\"), this._proportionallyResizeElements.push(this.originalElement.css({\n        position: \"static\",\n        zoom: 1,\n        display: \"block\"\n      })), this._proportionallyResize()), this._setupHandles(), e.autoHide && V(this.element).on(\"mouseenter\", function () {\n        e.disabled || (i._removeClass(\"ui-resizable-autohide\"), i._handles.show());\n      }).on(\"mouseleave\", function () {\n        e.disabled || i.resizing || (i._addClass(\"ui-resizable-autohide\"), i._handles.hide());\n      }), this._mouseInit();\n    },\n    _destroy: function _destroy() {\n      this._mouseDestroy(), this._addedHandles.remove();\n      function t(t) {\n        V(t).removeData(\"resizable\").removeData(\"ui-resizable\").off(\".resizable\");\n      }\n      var e;\n      return this.elementIsWrapper && (t(this.element), e = this.element, this.originalElement.css({\n        position: e.css(\"position\"),\n        width: e.outerWidth(),\n        height: e.outerHeight(),\n        top: e.css(\"top\"),\n        left: e.css(\"left\")\n      }).insertAfter(e), e.remove()), this.originalElement.css(\"resize\", this.originalResizeStyle), t(this.originalElement), this;\n    },\n    _setOption: function _setOption(t, e) {\n      switch (this._super(t, e), t) {\n        case \"handles\":\n          this._removeHandles(), this._setupHandles();\n          break;\n        case \"aspectRatio\":\n          this._aspectRatio = !!e;\n      }\n    },\n    _setupHandles: function _setupHandles() {\n      var t,\n        e,\n        i,\n        s,\n        n,\n        o = this.options,\n        a = this;\n      if (this.handles = o.handles || (V(\".ui-resizable-handle\", this.element).length ? {\n        n: \".ui-resizable-n\",\n        e: \".ui-resizable-e\",\n        s: \".ui-resizable-s\",\n        w: \".ui-resizable-w\",\n        se: \".ui-resizable-se\",\n        sw: \".ui-resizable-sw\",\n        ne: \".ui-resizable-ne\",\n        nw: \".ui-resizable-nw\"\n      } : \"e,s,se\"), this._handles = V(), this._addedHandles = V(), this.handles.constructor === String) for (\"all\" === this.handles && (this.handles = \"n,e,s,w,se,sw,ne,nw\"), i = this.handles.split(\",\"), this.handles = {}, e = 0; e < i.length; e++) s = \"ui-resizable-\" + (t = String.prototype.trim.call(i[e])), n = V(\"<div>\"), this._addClass(n, \"ui-resizable-handle \" + s), n.css({\n        zIndex: o.zIndex\n      }), this.handles[t] = \".ui-resizable-\" + t, this.element.children(this.handles[t]).length || (this.element.append(n), this._addedHandles = this._addedHandles.add(n));\n      this._renderAxis = function (t) {\n        var e, i, s;\n        for (e in t = t || this.element, this.handles) this.handles[e].constructor === String ? this.handles[e] = this.element.children(this.handles[e]).first().show() : (this.handles[e].jquery || this.handles[e].nodeType) && (this.handles[e] = V(this.handles[e]), this._on(this.handles[e], {\n          mousedown: a._mouseDown\n        })), this.elementIsWrapper && this.originalElement[0].nodeName.match(/^(textarea|input|select|button)$/i) && (s = V(this.handles[e], this.element), s = /sw|ne|nw|se|n|s/.test(e) ? s.outerHeight() : s.outerWidth(), i = [\"padding\", /ne|nw|n/.test(e) ? \"Top\" : /se|sw|s/.test(e) ? \"Bottom\" : /^e$/.test(e) ? \"Right\" : \"Left\"].join(\"\"), t.css(i, s), this._proportionallyResize()), this._handles = this._handles.add(this.handles[e]);\n      }, this._renderAxis(this.element), this._handles = this._handles.add(this.element.find(\".ui-resizable-handle\")), this._handles.disableSelection(), this._handles.on(\"mouseover\", function () {\n        a.resizing || (this.className && (n = this.className.match(/ui-resizable-(se|sw|ne|nw|n|e|s|w)/i)), a.axis = n && n[1] ? n[1] : \"se\");\n      }), o.autoHide && (this._handles.hide(), this._addClass(\"ui-resizable-autohide\"));\n    },\n    _removeHandles: function _removeHandles() {\n      this._addedHandles.remove();\n    },\n    _mouseCapture: function _mouseCapture(t) {\n      var e,\n        i,\n        s = !1;\n      for (e in this.handles) (i = V(this.handles[e])[0]) !== t.target && !V.contains(i, t.target) || (s = !0);\n      return !this.options.disabled && s;\n    },\n    _mouseStart: function _mouseStart(t) {\n      var e,\n        i,\n        s,\n        n = this.options,\n        o = this.element;\n      return this.resizing = !0, this._renderProxy(), e = this._num(this.helper.css(\"left\")), i = this._num(this.helper.css(\"top\")), n.containment && (e += V(n.containment).scrollLeft() || 0, i += V(n.containment).scrollTop() || 0), this.offset = this.helper.offset(), this.position = {\n        left: e,\n        top: i\n      }, this._helper || (s = this._calculateAdjustedElementDimensions(o)), this.size = this._helper ? {\n        width: this.helper.width(),\n        height: this.helper.height()\n      } : {\n        width: s.width,\n        height: s.height\n      }, this.originalSize = this._helper ? {\n        width: o.outerWidth(),\n        height: o.outerHeight()\n      } : {\n        width: s.width,\n        height: s.height\n      }, this.sizeDiff = {\n        width: o.outerWidth() - o.width(),\n        height: o.outerHeight() - o.height()\n      }, this.originalPosition = {\n        left: e,\n        top: i\n      }, this.originalMousePosition = {\n        left: t.pageX,\n        top: t.pageY\n      }, this.aspectRatio = \"number\" == typeof n.aspectRatio ? n.aspectRatio : this.originalSize.width / this.originalSize.height || 1, s = V(\".ui-resizable-\" + this.axis).css(\"cursor\"), V(\"body\").css(\"cursor\", \"auto\" === s ? this.axis + \"-resize\" : s), this._addClass(\"ui-resizable-resizing\"), this._propagate(\"start\", t), !0;\n    },\n    _mouseDrag: function _mouseDrag(t) {\n      var e = this.originalMousePosition,\n        i = this.axis,\n        s = t.pageX - e.left || 0,\n        e = t.pageY - e.top || 0,\n        i = this._change[i];\n      return this._updatePrevProperties(), i && (i = i.apply(this, [t, s, e]), this._updateVirtualBoundaries(t.shiftKey), (this._aspectRatio || t.shiftKey) && (i = this._updateRatio(i, t)), i = this._respectSize(i, t), this._updateCache(i), this._propagate(\"resize\", t), s = this._applyChanges(), !this._helper && this._proportionallyResizeElements.length && this._proportionallyResize(), V.isEmptyObject(s) || (this._updatePrevProperties(), this._trigger(\"resize\", t, this.ui()), this._applyChanges())), !1;\n    },\n    _mouseStop: function _mouseStop(t) {\n      this.resizing = !1;\n      var e,\n        i,\n        s,\n        n = this.options,\n        o = this;\n      return this._helper && (i = (e = (i = this._proportionallyResizeElements).length && /textarea/i.test(i[0].nodeName)) && this._hasScroll(i[0], \"left\") ? 0 : o.sizeDiff.height, e = e ? 0 : o.sizeDiff.width, e = {\n        width: o.helper.width() - e,\n        height: o.helper.height() - i\n      }, i = parseFloat(o.element.css(\"left\")) + (o.position.left - o.originalPosition.left) || null, s = parseFloat(o.element.css(\"top\")) + (o.position.top - o.originalPosition.top) || null, n.animate || this.element.css(V.extend(e, {\n        top: s,\n        left: i\n      })), o.helper.height(o.size.height), o.helper.width(o.size.width), this._helper) && !n.animate && this._proportionallyResize(), V(\"body\").css(\"cursor\", \"auto\"), this._removeClass(\"ui-resizable-resizing\"), this._propagate(\"stop\", t), this._helper && this.helper.remove(), !1;\n    },\n    _updatePrevProperties: function _updatePrevProperties() {\n      this.prevPosition = {\n        top: this.position.top,\n        left: this.position.left\n      }, this.prevSize = {\n        width: this.size.width,\n        height: this.size.height\n      };\n    },\n    _applyChanges: function _applyChanges() {\n      var t = {};\n      return this.position.top !== this.prevPosition.top && (t.top = this.position.top + \"px\"), this.position.left !== this.prevPosition.left && (t.left = this.position.left + \"px\"), this.helper.css(t), this.size.width !== this.prevSize.width && (t.width = this.size.width + \"px\", this.helper.width(t.width)), this.size.height !== this.prevSize.height && (t.height = this.size.height + \"px\", this.helper.height(t.height)), t;\n    },\n    _updateVirtualBoundaries: function _updateVirtualBoundaries(t) {\n      var e,\n        i,\n        s,\n        n = this.options,\n        n = {\n          minWidth: this._isNumber(n.minWidth) ? n.minWidth : 0,\n          maxWidth: this._isNumber(n.maxWidth) ? n.maxWidth : 1 / 0,\n          minHeight: this._isNumber(n.minHeight) ? n.minHeight : 0,\n          maxHeight: this._isNumber(n.maxHeight) ? n.maxHeight : 1 / 0\n        };\n      (this._aspectRatio || t) && (t = n.minHeight * this.aspectRatio, i = n.minWidth / this.aspectRatio, e = n.maxHeight * this.aspectRatio, s = n.maxWidth / this.aspectRatio, n.minWidth < t && (n.minWidth = t), n.minHeight < i && (n.minHeight = i), e < n.maxWidth && (n.maxWidth = e), s < n.maxHeight) && (n.maxHeight = s), this._vBoundaries = n;\n    },\n    _updateCache: function _updateCache(t) {\n      this.offset = this.helper.offset(), this._isNumber(t.left) && (this.position.left = t.left), this._isNumber(t.top) && (this.position.top = t.top), this._isNumber(t.height) && (this.size.height = t.height), this._isNumber(t.width) && (this.size.width = t.width);\n    },\n    _updateRatio: function _updateRatio(t) {\n      var e = this.position,\n        i = this.size,\n        s = this.axis;\n      return this._isNumber(t.height) ? t.width = t.height * this.aspectRatio : this._isNumber(t.width) && (t.height = t.width / this.aspectRatio), \"sw\" === s && (t.left = e.left + (i.width - t.width), t.top = null), \"nw\" === s && (t.top = e.top + (i.height - t.height), t.left = e.left + (i.width - t.width)), t;\n    },\n    _respectSize: function _respectSize(t) {\n      var e = this._vBoundaries,\n        i = this.axis,\n        s = this._isNumber(t.width) && e.maxWidth && e.maxWidth < t.width,\n        n = this._isNumber(t.height) && e.maxHeight && e.maxHeight < t.height,\n        o = this._isNumber(t.width) && e.minWidth && e.minWidth > t.width,\n        a = this._isNumber(t.height) && e.minHeight && e.minHeight > t.height,\n        r = this.originalPosition.left + this.originalSize.width,\n        l = this.originalPosition.top + this.originalSize.height,\n        h = /sw|nw|w/.test(i),\n        i = /nw|ne|n/.test(i);\n      return o && (t.width = e.minWidth), a && (t.height = e.minHeight), s && (t.width = e.maxWidth), n && (t.height = e.maxHeight), o && h && (t.left = r - e.minWidth), s && h && (t.left = r - e.maxWidth), a && i && (t.top = l - e.minHeight), n && i && (t.top = l - e.maxHeight), t.width || t.height || t.left || !t.top ? t.width || t.height || t.top || !t.left || (t.left = null) : t.top = null, t;\n    },\n    _getPaddingPlusBorderDimensions: function _getPaddingPlusBorderDimensions(t) {\n      for (var e = 0, i = [], s = [t.css(\"borderTopWidth\"), t.css(\"borderRightWidth\"), t.css(\"borderBottomWidth\"), t.css(\"borderLeftWidth\")], n = [t.css(\"paddingTop\"), t.css(\"paddingRight\"), t.css(\"paddingBottom\"), t.css(\"paddingLeft\")]; e < 4; e++) i[e] = parseFloat(s[e]) || 0, i[e] += parseFloat(n[e]) || 0;\n      return {\n        height: i[0] + i[2],\n        width: i[1] + i[3]\n      };\n    },\n    _calculateAdjustedElementDimensions: function _calculateAdjustedElementDimensions(t) {\n      var e,\n        i,\n        s = t.get(0);\n      return \"content-box\" !== t.css(\"box-sizing\") || !this._hasScroll(s) && !this._hasScroll(s, \"left\") ? {\n        height: parseFloat(t.css(\"height\")),\n        width: parseFloat(t.css(\"width\"))\n      } : (e = parseFloat(s.style.width), s = parseFloat(s.style.height), i = this._getPaddingPlusBorderDimensions(t), e = isNaN(e) ? this._getElementTheoreticalSize(t, i, \"width\") : e, {\n        height: isNaN(s) ? this._getElementTheoreticalSize(t, i, \"height\") : s,\n        width: e\n      });\n    },\n    _getElementTheoreticalSize: function _getElementTheoreticalSize(t, e, i) {\n      return Math.max(0, Math.ceil(t.get(0)[\"offset\" + i[0].toUpperCase() + i.slice(1)] - e[i] - .5)) || 0;\n    },\n    _proportionallyResize: function _proportionallyResize() {\n      if (this._proportionallyResizeElements.length) for (var t, e = 0, i = this.helper || this.element; e < this._proportionallyResizeElements.length; e++) t = this._proportionallyResizeElements[e], this.outerDimensions || (this.outerDimensions = this._getPaddingPlusBorderDimensions(t)), t.css({\n        height: i.height() - this.outerDimensions.height || 0,\n        width: i.width() - this.outerDimensions.width || 0\n      });\n    },\n    _renderProxy: function _renderProxy() {\n      var t = this.element,\n        e = this.options;\n      this.elementOffset = t.offset(), this._helper ? (this.helper = this.helper || V(\"<div></div>\").css({\n        overflow: \"hidden\"\n      }), this._addClass(this.helper, this._helper), this.helper.css({\n        width: this.element.outerWidth(),\n        height: this.element.outerHeight(),\n        position: \"absolute\",\n        left: this.elementOffset.left + \"px\",\n        top: this.elementOffset.top + \"px\",\n        zIndex: ++e.zIndex\n      }), this.helper.appendTo(\"body\").disableSelection()) : this.helper = this.element;\n    },\n    _change: {\n      e: function e(t, _e) {\n        return {\n          width: this.originalSize.width + _e\n        };\n      },\n      w: function w(t, e) {\n        var i = this.originalSize;\n        return {\n          left: this.originalPosition.left + e,\n          width: i.width - e\n        };\n      },\n      n: function n(t, e, i) {\n        var s = this.originalSize;\n        return {\n          top: this.originalPosition.top + i,\n          height: s.height - i\n        };\n      },\n      s: function s(t, e, i) {\n        return {\n          height: this.originalSize.height + i\n        };\n      },\n      se: function se(t, e, i) {\n        return V.extend(this._change.s.apply(this, arguments), this._change.e.apply(this, [t, e, i]));\n      },\n      sw: function sw(t, e, i) {\n        return V.extend(this._change.s.apply(this, arguments), this._change.w.apply(this, [t, e, i]));\n      },\n      ne: function ne(t, e, i) {\n        return V.extend(this._change.n.apply(this, arguments), this._change.e.apply(this, [t, e, i]));\n      },\n      nw: function nw(t, e, i) {\n        return V.extend(this._change.n.apply(this, arguments), this._change.w.apply(this, [t, e, i]));\n      }\n    },\n    _propagate: function _propagate(t, e) {\n      V.ui.plugin.call(this, t, [e, this.ui()]), \"resize\" !== t && this._trigger(t, e, this.ui());\n    },\n    plugins: {},\n    ui: function ui() {\n      return {\n        originalElement: this.originalElement,\n        element: this.element,\n        helper: this.helper,\n        position: this.position,\n        size: this.size,\n        originalSize: this.originalSize,\n        originalPosition: this.originalPosition\n      };\n    }\n  }), V.ui.plugin.add(\"resizable\", \"animate\", {\n    stop: function stop(e) {\n      var i = V(this).resizable(\"instance\"),\n        t = i.options,\n        s = i._proportionallyResizeElements,\n        n = s.length && /textarea/i.test(s[0].nodeName),\n        o = n && i._hasScroll(s[0], \"left\") ? 0 : i.sizeDiff.height,\n        n = n ? 0 : i.sizeDiff.width,\n        n = {\n          width: i.size.width - n,\n          height: i.size.height - o\n        },\n        o = parseFloat(i.element.css(\"left\")) + (i.position.left - i.originalPosition.left) || null,\n        a = parseFloat(i.element.css(\"top\")) + (i.position.top - i.originalPosition.top) || null;\n      i.element.animate(V.extend(n, a && o ? {\n        top: a,\n        left: o\n      } : {}), {\n        duration: t.animateDuration,\n        easing: t.animateEasing,\n        step: function step() {\n          var t = {\n            width: parseFloat(i.element.css(\"width\")),\n            height: parseFloat(i.element.css(\"height\")),\n            top: parseFloat(i.element.css(\"top\")),\n            left: parseFloat(i.element.css(\"left\"))\n          };\n          s && s.length && V(s[0]).css({\n            width: t.width,\n            height: t.height\n          }), i._updateCache(t), i._propagate(\"resize\", e);\n        }\n      });\n    }\n  }), V.ui.plugin.add(\"resizable\", \"containment\", {\n    start: function start() {\n      var i,\n        s,\n        t,\n        e,\n        n = V(this).resizable(\"instance\"),\n        o = n.options,\n        a = n.element,\n        o = o.containment,\n        a = o instanceof V ? o.get(0) : /parent/.test(o) ? a.parent().get(0) : o;\n      a && (n.containerElement = V(a), /document/.test(o) || o === document ? (n.containerOffset = {\n        left: 0,\n        top: 0\n      }, n.containerPosition = {\n        left: 0,\n        top: 0\n      }, n.parentData = {\n        element: V(document),\n        left: 0,\n        top: 0,\n        width: V(document).width(),\n        height: V(document).height() || document.body.parentNode.scrollHeight\n      }) : (i = V(a), s = [], V([\"Top\", \"Right\", \"Left\", \"Bottom\"]).each(function (t, e) {\n        s[t] = n._num(i.css(\"padding\" + e));\n      }), n.containerOffset = i.offset(), n.containerPosition = i.position(), n.containerSize = {\n        height: i.innerHeight() - s[3],\n        width: i.innerWidth() - s[1]\n      }, o = n.containerOffset, e = n.containerSize.height, t = n.containerSize.width, t = n._hasScroll(a, \"left\") ? a.scrollWidth : t, e = n._hasScroll(a) ? a.scrollHeight : e, n.parentData = {\n        element: a,\n        left: o.left,\n        top: o.top,\n        width: t,\n        height: e\n      }));\n    },\n    resize: function resize(t) {\n      var e = V(this).resizable(\"instance\"),\n        i = e.options,\n        s = e.containerOffset,\n        n = e.position,\n        t = e._aspectRatio || t.shiftKey,\n        o = {\n          top: 0,\n          left: 0\n        },\n        a = e.containerElement,\n        r = !0;\n      a[0] !== document && /static/.test(a.css(\"position\")) && (o = s), n.left < (e._helper ? s.left : 0) && (e.size.width = e.size.width + (e._helper ? e.position.left - s.left : e.position.left - o.left), t && (e.size.height = e.size.width / e.aspectRatio, r = !1), e.position.left = i.helper ? s.left : 0), n.top < (e._helper ? s.top : 0) && (e.size.height = e.size.height + (e._helper ? e.position.top - s.top : e.position.top), t && (e.size.width = e.size.height * e.aspectRatio, r = !1), e.position.top = e._helper ? s.top : 0), a = e.containerElement.get(0) === e.element.parent().get(0), i = /relative|absolute/.test(e.containerElement.css(\"position\")), a && i ? (e.offset.left = e.parentData.left + e.position.left, e.offset.top = e.parentData.top + e.position.top) : (e.offset.left = e.element.offset().left, e.offset.top = e.element.offset().top), n = Math.abs(e.sizeDiff.width + (e._helper ? e.offset.left - o.left : e.offset.left - s.left)), a = Math.abs(e.sizeDiff.height + (e._helper ? e.offset.top - o.top : e.offset.top - s.top)), n + e.size.width >= e.parentData.width && (e.size.width = e.parentData.width - n, t) && (e.size.height = e.size.width / e.aspectRatio, r = !1), a + e.size.height >= e.parentData.height && (e.size.height = e.parentData.height - a, t) && (e.size.width = e.size.height * e.aspectRatio, r = !1), r || (e.position.left = e.prevPosition.left, e.position.top = e.prevPosition.top, e.size.width = e.prevSize.width, e.size.height = e.prevSize.height);\n    },\n    stop: function stop() {\n      var t = V(this).resizable(\"instance\"),\n        e = t.options,\n        i = t.containerOffset,\n        s = t.containerPosition,\n        n = t.containerElement,\n        o = V(t.helper),\n        a = o.offset(),\n        r = o.outerWidth() - t.sizeDiff.width,\n        o = o.outerHeight() - t.sizeDiff.height;\n      t._helper && !e.animate && /relative/.test(n.css(\"position\")) && V(this).css({\n        left: a.left - s.left - i.left,\n        width: r,\n        height: o\n      }), t._helper && !e.animate && /static/.test(n.css(\"position\")) && V(this).css({\n        left: a.left - s.left - i.left,\n        width: r,\n        height: o\n      });\n    }\n  }), V.ui.plugin.add(\"resizable\", \"alsoResize\", {\n    start: function start() {\n      var i = V(this).resizable(\"instance\"),\n        t = i.options;\n      V(t.alsoResize).each(function () {\n        var t = V(this),\n          e = i._calculateAdjustedElementDimensions(t);\n        t.data(\"ui-resizable-alsoresize\", {\n          width: e.width,\n          height: e.height,\n          left: parseFloat(t.css(\"left\")),\n          top: parseFloat(t.css(\"top\"))\n        });\n      });\n    },\n    resize: function resize(t, i) {\n      var e = V(this).resizable(\"instance\"),\n        s = e.options,\n        n = e.originalSize,\n        o = e.originalPosition,\n        a = {\n          height: e.size.height - n.height || 0,\n          width: e.size.width - n.width || 0,\n          top: e.position.top - o.top || 0,\n          left: e.position.left - o.left || 0\n        };\n      V(s.alsoResize).each(function () {\n        var t = V(this),\n          s = V(this).data(\"ui-resizable-alsoresize\"),\n          n = {},\n          e = t.parents(i.originalElement[0]).length ? [\"width\", \"height\"] : [\"width\", \"height\", \"top\", \"left\"];\n        V.each(e, function (t, e) {\n          var i = (s[e] || 0) + (a[e] || 0);\n          i && 0 <= i && (n[e] = i || null);\n        }), t.css(n);\n      });\n    },\n    stop: function stop() {\n      V(this).removeData(\"ui-resizable-alsoresize\");\n    }\n  }), V.ui.plugin.add(\"resizable\", \"ghost\", {\n    start: function start() {\n      var t = V(this).resizable(\"instance\"),\n        e = t.size;\n      t.ghost = t.originalElement.clone(), t.ghost.css({\n        opacity: .25,\n        display: \"block\",\n        position: \"relative\",\n        height: e.height,\n        width: e.width,\n        margin: 0,\n        left: 0,\n        top: 0\n      }), t._addClass(t.ghost, \"ui-resizable-ghost\"), !0 === V.uiBackCompat && \"string\" == typeof t.options.ghost && t.ghost.addClass(this.options.ghost), t.ghost.appendTo(t.helper);\n    },\n    resize: function resize() {\n      var t = V(this).resizable(\"instance\");\n      t.ghost && t.ghost.css({\n        position: \"relative\",\n        height: t.size.height,\n        width: t.size.width\n      });\n    },\n    stop: function stop() {\n      var t = V(this).resizable(\"instance\");\n      t.ghost && t.helper && t.helper.get(0).removeChild(t.ghost.get(0));\n    }\n  }), V.ui.plugin.add(\"resizable\", \"grid\", {\n    resize: function resize() {\n      var t,\n        e = V(this).resizable(\"instance\"),\n        i = e.options,\n        s = e.size,\n        n = e.originalSize,\n        o = e.originalPosition,\n        a = e.axis,\n        r = \"number\" == typeof i.grid ? [i.grid, i.grid] : i.grid,\n        l = r[0] || 1,\n        h = r[1] || 1,\n        c = Math.round((s.width - n.width) / l) * l,\n        s = Math.round((s.height - n.height) / h) * h,\n        u = n.width + c,\n        d = n.height + s,\n        p = i.maxWidth && i.maxWidth < u,\n        f = i.maxHeight && i.maxHeight < d,\n        g = i.minWidth && i.minWidth > u,\n        m = i.minHeight && i.minHeight > d;\n      i.grid = r, g && (u += l), m && (d += h), p && (u -= l), f && (d -= h), /^(se|s|e)$/.test(a) ? (e.size.width = u, e.size.height = d) : /^(ne)$/.test(a) ? (e.size.width = u, e.size.height = d, e.position.top = o.top - s) : /^(sw)$/.test(a) ? (e.size.width = u, e.size.height = d, e.position.left = o.left - c) : ((d - h <= 0 || u - l <= 0) && (t = e._getPaddingPlusBorderDimensions(this)), 0 < d - h ? (e.size.height = d, e.position.top = o.top - s) : (d = h - t.height, e.size.height = d, e.position.top = o.top + n.height - d), 0 < u - l ? (e.size.width = u, e.position.left = o.left - c) : (u = l - t.width, e.size.width = u, e.position.left = o.left + n.width - u));\n    }\n  }), V.ui.resizable, V.widget(\"ui.dialog\", {\n    version: \"1.14.1\",\n    options: {\n      appendTo: \"body\",\n      autoOpen: !0,\n      buttons: [],\n      classes: {\n        \"ui-dialog\": \"ui-corner-all\",\n        \"ui-dialog-titlebar\": \"ui-corner-all\"\n      },\n      closeOnEscape: !0,\n      closeText: \"Close\",\n      draggable: !0,\n      hide: null,\n      height: \"auto\",\n      maxHeight: null,\n      maxWidth: null,\n      minHeight: 150,\n      minWidth: 150,\n      modal: !1,\n      position: {\n        my: \"center\",\n        at: \"center\",\n        of: window,\n        collision: \"fit\",\n        using: function using(t) {\n          var e = V(this).css(t).offset().top;\n          e < 0 && V(this).css(\"top\", t.top - e);\n        }\n      },\n      resizable: !0,\n      show: null,\n      title: null,\n      uiDialogTitleHeadingLevel: 0,\n      width: 300,\n      beforeClose: null,\n      close: null,\n      drag: null,\n      dragStart: null,\n      dragStop: null,\n      focus: null,\n      open: null,\n      resize: null,\n      resizeStart: null,\n      resizeStop: null\n    },\n    sizeRelatedOptions: {\n      buttons: !0,\n      height: !0,\n      maxHeight: !0,\n      maxWidth: !0,\n      minHeight: !0,\n      minWidth: !0,\n      width: !0\n    },\n    resizableRelatedOptions: {\n      maxHeight: !0,\n      maxWidth: !0,\n      minHeight: !0,\n      minWidth: !0\n    },\n    _create: function _create() {\n      this.originalCss = {\n        display: this.element[0].style.display,\n        width: this.element[0].style.width,\n        minHeight: this.element[0].style.minHeight,\n        maxHeight: this.element[0].style.maxHeight,\n        height: this.element[0].style.height\n      }, this.originalPosition = {\n        parent: this.element.parent(),\n        index: this.element.parent().children().index(this.element)\n      }, this.originalTitle = this.element.attr(\"title\"), null == this.options.title && null != this.originalTitle && (this.options.title = this.originalTitle), this.options.disabled && (this.options.disabled = !1), this._createWrapper(), this.element.show().removeAttr(\"title\").appendTo(this.uiDialog), this._addClass(\"ui-dialog-content\", \"ui-widget-content\"), this._createTitlebar(), this._createButtonPane(), this.options.draggable && V.fn.draggable && this._makeDraggable(), this.options.resizable && V.fn.resizable && this._makeResizable(), this._isOpen = !1, this._trackFocus();\n    },\n    _init: function _init() {\n      this.options.autoOpen && this.open();\n    },\n    _appendTo: function _appendTo() {\n      var t = this.options.appendTo;\n      return t && (t.jquery || t.nodeType) ? V(t) : this.document.find(t || \"body\").eq(0);\n    },\n    _destroy: function _destroy() {\n      var t,\n        e = this.originalPosition;\n      this._untrackInstance(), this._destroyOverlay(), this.element.removeUniqueId().css(this.originalCss).detach(), this.uiDialog.remove(), this.originalTitle && this.element.attr(\"title\", this.originalTitle), (t = e.parent.children().eq(e.index)).length && t[0] !== this.element[0] ? t.before(this.element) : e.parent.append(this.element);\n    },\n    widget: function widget() {\n      return this.uiDialog;\n    },\n    disable: V.noop,\n    enable: V.noop,\n    close: function close(t) {\n      var e = this;\n      this._isOpen && !1 !== this._trigger(\"beforeClose\", t) && (this._isOpen = !1, this._focusedElement = null, this._destroyOverlay(), this._untrackInstance(), this.opener.filter(\":focusable\").trigger(\"focus\").length || V(this.document[0].activeElement).trigger(\"blur\"), this._hide(this.uiDialog, this.options.hide, function () {\n        e._trigger(\"close\", t);\n      }));\n    },\n    isOpen: function isOpen() {\n      return this._isOpen;\n    },\n    moveToTop: function moveToTop() {\n      this._moveToTop();\n    },\n    _moveToTop: function _moveToTop(t, e) {\n      var i = !1,\n        s = this.uiDialog.siblings(\".ui-front:visible\").map(function () {\n          return +V(this).css(\"z-index\");\n        }).get(),\n        s = Math.max.apply(null, s);\n      return s >= +this.uiDialog.css(\"z-index\") && (this.uiDialog.css(\"z-index\", s + 1), i = !0), i && !e && this._trigger(\"focus\", t), i;\n    },\n    open: function open() {\n      var t = this;\n      this._isOpen ? this._moveToTop() && this._focusTabbable() : (this._isOpen = !0, this.opener = V(this.document[0].activeElement), this._size(), this._position(), this._createOverlay(), this._moveToTop(null, !0), this.overlay && this.overlay.css(\"z-index\", this.uiDialog.css(\"z-index\") - 1), this._show(this.uiDialog, this.options.show, function () {\n        t._focusTabbable(), t._trigger(\"focus\");\n      }), this._makeFocusTarget(), this._trigger(\"open\"));\n    },\n    _focusTabbable: function _focusTabbable() {\n      var t = this._focusedElement;\n      (t = (t = (t = (t = (t = t || this.element.find(\"[autofocus]\")).length ? t : this.element.find(\":tabbable\")).length ? t : this.uiDialogButtonPane.find(\":tabbable\")).length ? t : this.uiDialogTitlebarClose.filter(\":tabbable\")).length ? t : this.uiDialog).eq(0).trigger(\"focus\");\n    },\n    _restoreTabbableFocus: function _restoreTabbableFocus() {\n      var t = this.document[0].activeElement;\n      this.uiDialog[0] === t || V.contains(this.uiDialog[0], t) || this._focusTabbable();\n    },\n    _keepFocus: function _keepFocus(t) {\n      t.preventDefault(), this._restoreTabbableFocus();\n    },\n    _createWrapper: function _createWrapper() {\n      this.uiDialog = V(\"<div>\").hide().attr({\n        tabIndex: -1,\n        role: \"dialog\",\n        \"aria-modal\": this.options.modal ? \"true\" : null\n      }).appendTo(this._appendTo()), this._addClass(this.uiDialog, \"ui-dialog\", \"ui-widget ui-widget-content ui-front\"), this._on(this.uiDialog, {\n        keydown: function keydown(t) {\n          var e, i, s;\n          this.options.closeOnEscape && !t.isDefaultPrevented() && t.keyCode && t.keyCode === V.ui.keyCode.ESCAPE ? (t.preventDefault(), this.close(t)) : t.keyCode !== V.ui.keyCode.TAB || t.isDefaultPrevented() || (e = this.uiDialog.find(\":tabbable\"), i = e.first(), s = e.last(), t.target !== s[0] && t.target !== this.uiDialog[0] || t.shiftKey ? t.target !== i[0] && t.target !== this.uiDialog[0] || !t.shiftKey || (this._delay(function () {\n            s.trigger(\"focus\");\n          }), t.preventDefault()) : (this._delay(function () {\n            i.trigger(\"focus\");\n          }), t.preventDefault()));\n        },\n        mousedown: function mousedown(t) {\n          this._moveToTop(t) && this._focusTabbable();\n        }\n      }), this.element.find(\"[aria-describedby]\").length || this.uiDialog.attr({\n        \"aria-describedby\": this.element.uniqueId().attr(\"id\")\n      });\n    },\n    _createTitlebar: function _createTitlebar() {\n      this.uiDialogTitlebar = V(\"<div>\"), this._addClass(this.uiDialogTitlebar, \"ui-dialog-titlebar\", \"ui-widget-header ui-helper-clearfix\"), this._on(this.uiDialogTitlebar, {\n        mousedown: function mousedown(t) {\n          V(t.target).closest(\".ui-dialog-titlebar-close\") || this.uiDialog.trigger(\"focus\");\n        }\n      }), this.uiDialogTitlebarClose = V(\"<button type='button'></button>\").button({\n        label: V(\"<a>\").text(this.options.closeText).html(),\n        icon: \"ui-icon-closethick\",\n        showLabel: !1\n      }).appendTo(this.uiDialogTitlebar), this._addClass(this.uiDialogTitlebarClose, \"ui-dialog-titlebar-close\"), this._on(this.uiDialogTitlebarClose, {\n        click: function click(t) {\n          t.preventDefault(), this.close(t);\n        }\n      });\n      var t = Number.isInteger(this.options.uiDialogTitleHeadingLevel) && 0 < this.options.uiDialogTitleHeadingLevel && this.options.uiDialogTitleHeadingLevel <= 6 ? \"h\" + this.options.uiDialogTitleHeadingLevel : \"span\",\n        t = V(\"<\" + t + \">\").uniqueId().prependTo(this.uiDialogTitlebar);\n      this._addClass(t, \"ui-dialog-title\"), this._title(t), this.uiDialogTitlebar.prependTo(this.uiDialog), this.uiDialog.attr({\n        \"aria-labelledby\": t.attr(\"id\")\n      });\n    },\n    _title: function _title(t) {\n      this.options.title ? t.text(this.options.title) : t.html(\"&#160;\");\n    },\n    _createButtonPane: function _createButtonPane() {\n      this.uiDialogButtonPane = V(\"<div>\"), this._addClass(this.uiDialogButtonPane, \"ui-dialog-buttonpane\", \"ui-widget-content ui-helper-clearfix\"), this.uiButtonSet = V(\"<div>\").appendTo(this.uiDialogButtonPane), this._addClass(this.uiButtonSet, \"ui-dialog-buttonset\"), this._createButtons();\n    },\n    _createButtons: function _createButtons() {\n      var s = this,\n        t = this.options.buttons;\n      this.uiDialogButtonPane.remove(), this.uiButtonSet.empty(), V.isEmptyObject(t) || Array.isArray(t) && !t.length ? this._removeClass(this.uiDialog, \"ui-dialog-buttons\") : (V.each(t, function (t, e) {\n        var i;\n        e = V.extend({\n          type: \"button\"\n        }, e = \"function\" == typeof e ? {\n          click: e,\n          text: t\n        } : e), i = e.click, t = {\n          icon: e.icon,\n          iconPosition: e.iconPosition,\n          showLabel: e.showLabel,\n          icons: e.icons,\n          text: e.text\n        }, delete e.click, delete e.icon, delete e.iconPosition, delete e.showLabel, delete e.icons, \"boolean\" == typeof e.text && delete e.text, V(\"<button></button>\", e).button(t).appendTo(s.uiButtonSet).on(\"click\", function () {\n          i.apply(s.element[0], arguments);\n        });\n      }), this._addClass(this.uiDialog, \"ui-dialog-buttons\"), this.uiDialogButtonPane.appendTo(this.uiDialog));\n    },\n    _makeDraggable: function _makeDraggable() {\n      var n = this,\n        o = this.options;\n      function a(t) {\n        return {\n          position: t.position,\n          offset: t.offset\n        };\n      }\n      this.uiDialog.draggable({\n        cancel: \".ui-dialog-content, .ui-dialog-titlebar-close\",\n        handle: \".ui-dialog-titlebar\",\n        containment: \"document\",\n        start: function start(t, e) {\n          n._addClass(V(this), \"ui-dialog-dragging\"), n._blockFrames(), n._trigger(\"dragStart\", t, a(e));\n        },\n        drag: function drag(t, e) {\n          n._trigger(\"drag\", t, a(e));\n        },\n        stop: function stop(t, e) {\n          var i = e.offset.left - n.document.scrollLeft(),\n            s = e.offset.top - n.document.scrollTop();\n          o.position = {\n            my: \"left top\",\n            at: \"left\" + (0 <= i ? \"+\" : \"\") + i + \" top\" + (0 <= s ? \"+\" : \"\") + s,\n            of: n.window\n          }, n._removeClass(V(this), \"ui-dialog-dragging\"), n._unblockFrames(), n._trigger(\"dragStop\", t, a(e));\n        }\n      });\n    },\n    _makeResizable: function _makeResizable() {\n      var n = this,\n        o = this.options,\n        t = o.resizable,\n        e = this.uiDialog.css(\"position\"),\n        t = \"string\" == typeof t ? t : \"n,e,s,w,se,sw,ne,nw\";\n      function a(t) {\n        return {\n          originalPosition: t.originalPosition,\n          originalSize: t.originalSize,\n          position: t.position,\n          size: t.size\n        };\n      }\n      this.uiDialog.resizable({\n        cancel: \".ui-dialog-content\",\n        containment: \"document\",\n        alsoResize: this.element,\n        maxWidth: o.maxWidth,\n        maxHeight: o.maxHeight,\n        minWidth: o.minWidth,\n        minHeight: this._minHeight(),\n        handles: t,\n        start: function start(t, e) {\n          n._addClass(V(this), \"ui-dialog-resizing\"), n._blockFrames(), n._trigger(\"resizeStart\", t, a(e));\n        },\n        resize: function resize(t, e) {\n          n._trigger(\"resize\", t, a(e));\n        },\n        stop: function stop(t, e) {\n          var i = n.uiDialog.offset(),\n            s = i.left - n.document.scrollLeft(),\n            i = i.top - n.document.scrollTop();\n          o.height = n.uiDialog.height(), o.width = n.uiDialog.width(), o.position = {\n            my: \"left top\",\n            at: \"left\" + (0 <= s ? \"+\" : \"\") + s + \" top\" + (0 <= i ? \"+\" : \"\") + i,\n            of: n.window\n          }, n._removeClass(V(this), \"ui-dialog-resizing\"), n._unblockFrames(), n._trigger(\"resizeStop\", t, a(e));\n        }\n      }).css(\"position\", e);\n    },\n    _trackFocus: function _trackFocus() {\n      this._on(this.widget(), {\n        focusin: function focusin(t) {\n          this._makeFocusTarget(), this._focusedElement = V(t.target);\n        }\n      });\n    },\n    _makeFocusTarget: function _makeFocusTarget() {\n      this._untrackInstance(), this._trackingInstances().unshift(this);\n    },\n    _untrackInstance: function _untrackInstance() {\n      var t = this._trackingInstances(),\n        e = V.inArray(this, t);\n      -1 !== e && t.splice(e, 1);\n    },\n    _trackingInstances: function _trackingInstances() {\n      var t = this.document.data(\"ui-dialog-instances\");\n      return t || this.document.data(\"ui-dialog-instances\", t = []), t;\n    },\n    _minHeight: function _minHeight() {\n      var t = this.options;\n      return \"auto\" === t.height ? t.minHeight : Math.min(t.minHeight, t.height);\n    },\n    _position: function _position() {\n      var t = this.uiDialog.is(\":visible\");\n      t || this.uiDialog.show(), this.uiDialog.position(this.options.position), t || this.uiDialog.hide();\n    },\n    _setOptions: function _setOptions(t) {\n      var i = this,\n        s = !1,\n        n = {};\n      V.each(t, function (t, e) {\n        i._setOption(t, e), t in i.sizeRelatedOptions && (s = !0), t in i.resizableRelatedOptions && (n[t] = e);\n      }), s && (this._size(), this._position()), this.uiDialog.is(\":data(ui-resizable)\") && this.uiDialog.resizable(\"option\", n);\n    },\n    _setOption: function _setOption(t, e) {\n      var i,\n        s = this.uiDialog;\n      \"disabled\" !== t && (this._super(t, e), \"appendTo\" === t && this.uiDialog.appendTo(this._appendTo()), \"buttons\" === t && this._createButtons(), \"closeText\" === t && this.uiDialogTitlebarClose.button({\n        label: V(\"<a>\").text(\"\" + this.options.closeText).html()\n      }), \"draggable\" === t && ((i = s.is(\":data(ui-draggable)\")) && !e && s.draggable(\"destroy\"), !i) && e && this._makeDraggable(), \"position\" === t && this._position(), \"resizable\" === t && ((i = s.is(\":data(ui-resizable)\")) && !e && s.resizable(\"destroy\"), i && \"string\" == typeof e && s.resizable(\"option\", \"handles\", e), i || !1 === e || this._makeResizable()), \"title\" === t && this._title(this.uiDialogTitlebar.find(\".ui-dialog-title\")), \"modal\" === t) && s.attr(\"aria-modal\", e ? \"true\" : null);\n    },\n    _size: function _size() {\n      var t,\n        e,\n        i,\n        s = this.options;\n      this.element.show().css({\n        width: \"auto\",\n        minHeight: 0,\n        maxHeight: \"none\",\n        height: 0\n      }), s.minWidth > s.width && (s.width = s.minWidth), t = this.uiDialog.css({\n        height: \"auto\",\n        width: s.width\n      }).outerHeight(), e = Math.max(0, s.minHeight - t), i = \"number\" == typeof s.maxHeight ? Math.max(0, s.maxHeight - t) : \"none\", \"auto\" === s.height ? this.element.css({\n        minHeight: e,\n        maxHeight: i,\n        height: \"auto\"\n      }) : this.element.height(Math.max(0, s.height - t)), this.uiDialog.is(\":data(ui-resizable)\") && this.uiDialog.resizable(\"option\", \"minHeight\", this._minHeight());\n    },\n    _blockFrames: function _blockFrames() {\n      this.iframeBlocks = this.document.find(\"iframe\").map(function () {\n        var t = V(this);\n        return V(\"<div>\").css({\n          position: \"absolute\",\n          width: t.outerWidth(),\n          height: t.outerHeight()\n        }).appendTo(t.parent()).offset(t.offset())[0];\n      });\n    },\n    _unblockFrames: function _unblockFrames() {\n      this.iframeBlocks && (this.iframeBlocks.remove(), delete this.iframeBlocks);\n    },\n    _allowInteraction: function _allowInteraction(t) {\n      return !!V(t.target).closest(\".ui-dialog\").length || !!V(t.target).closest(\".ui-datepicker\").length;\n    },\n    _createOverlay: function _createOverlay() {\n      var i;\n      this.options.modal && (i = !0, this._delay(function () {\n        i = !1;\n      }), this.document.data(\"ui-dialog-overlays\") || this.document.on(\"focusin.ui-dialog\", function (t) {\n        var e;\n        i || (e = this._trackingInstances()[0])._allowInteraction(t) || (t.preventDefault(), e._focusTabbable());\n      }.bind(this)), this.overlay = V(\"<div>\").appendTo(this._appendTo()), this._addClass(this.overlay, null, \"ui-widget-overlay ui-front\"), this._on(this.overlay, {\n        mousedown: \"_keepFocus\"\n      }), this.document.data(\"ui-dialog-overlays\", (this.document.data(\"ui-dialog-overlays\") || 0) + 1));\n    },\n    _destroyOverlay: function _destroyOverlay() {\n      var t;\n      this.options.modal && this.overlay && ((t = this.document.data(\"ui-dialog-overlays\") - 1) ? this.document.data(\"ui-dialog-overlays\", t) : (this.document.off(\"focusin.ui-dialog\"), this.document.removeData(\"ui-dialog-overlays\")), this.overlay.remove(), this.overlay = null);\n    }\n  }), !0 === V.uiBackCompat && V.widget(\"ui.dialog\", V.ui.dialog, {\n    options: {\n      dialogClass: \"\"\n    },\n    _createWrapper: function _createWrapper() {\n      this._super(), this.uiDialog.addClass(this.options.dialogClass);\n    },\n    _setOption: function _setOption(t, e) {\n      \"dialogClass\" === t && this.uiDialog.removeClass(this.options.dialogClass).addClass(e), this._superApply(arguments);\n    }\n  }), V.ui.dialog;\n  function rt(t, e, i) {\n    return e <= t && t < e + i;\n  }\n  V.widget(\"ui.droppable\", {\n    version: \"1.14.1\",\n    widgetEventPrefix: \"drop\",\n    options: {\n      accept: \"*\",\n      addClasses: !0,\n      greedy: !1,\n      scope: \"default\",\n      tolerance: \"intersect\",\n      activate: null,\n      deactivate: null,\n      drop: null,\n      out: null,\n      over: null\n    },\n    _create: function _create() {\n      var t,\n        e = this.options,\n        i = e.accept;\n      this.isover = !1, this.isout = !0, this.accept = \"function\" == typeof i ? i : function (t) {\n        return t.is(i);\n      }, this.proportions = function () {\n        if (!arguments.length) return t = t || {\n          width: this.element[0].offsetWidth,\n          height: this.element[0].offsetHeight\n        };\n        t = arguments[0];\n      }, this._addToManager(e.scope), e.addClasses && this._addClass(\"ui-droppable\");\n    },\n    _addToManager: function _addToManager(t) {\n      V.ui.ddmanager.droppables[t] = V.ui.ddmanager.droppables[t] || [], V.ui.ddmanager.droppables[t].push(this);\n    },\n    _splice: function _splice(t) {\n      for (var e = 0; e < t.length; e++) t[e] === this && t.splice(e, 1);\n    },\n    _destroy: function _destroy() {\n      var t = V.ui.ddmanager.droppables[this.options.scope];\n      this._splice(t);\n    },\n    _setOption: function _setOption(t, e) {\n      var i;\n      \"accept\" === t ? this.accept = \"function\" == typeof e ? e : function (t) {\n        return t.is(e);\n      } : \"scope\" === t && (i = V.ui.ddmanager.droppables[this.options.scope], this._splice(i), this._addToManager(e)), this._super(t, e);\n    },\n    _activate: function _activate(t) {\n      var e = V.ui.ddmanager.current;\n      this._addActiveClass(), e && this._trigger(\"activate\", t, this.ui(e));\n    },\n    _deactivate: function _deactivate(t) {\n      var e = V.ui.ddmanager.current;\n      this._removeActiveClass(), e && this._trigger(\"deactivate\", t, this.ui(e));\n    },\n    _over: function _over(t) {\n      var e = V.ui.ddmanager.current;\n      e && (e.currentItem || e.element)[0] !== this.element[0] && this.accept.call(this.element[0], e.currentItem || e.element) && (this._addHoverClass(), this._trigger(\"over\", t, this.ui(e)));\n    },\n    _out: function _out(t) {\n      var e = V.ui.ddmanager.current;\n      e && (e.currentItem || e.element)[0] !== this.element[0] && this.accept.call(this.element[0], e.currentItem || e.element) && (this._removeHoverClass(), this._trigger(\"out\", t, this.ui(e)));\n    },\n    _drop: function _drop(e, t) {\n      var i = t || V.ui.ddmanager.current,\n        s = !1;\n      return !(!i || (i.currentItem || i.element)[0] === this.element[0] || (this.element.find(\":data(ui-droppable)\").not(\".ui-draggable-dragging\").each(function () {\n        var t = V(this).droppable(\"instance\");\n        if (t.options.greedy && !t.options.disabled && t.options.scope === i.options.scope && t.accept.call(t.element[0], i.currentItem || i.element) && V.ui.intersect(i, V.extend(t, {\n          offset: t.element.offset()\n        }), t.options.tolerance, e)) return !(s = !0);\n      }), s) || !this.accept.call(this.element[0], i.currentItem || i.element)) && (this._removeActiveClass(), this._removeHoverClass(), this._trigger(\"drop\", e, this.ui(i)), this.element);\n    },\n    ui: function ui(t) {\n      return {\n        draggable: t.currentItem || t.element,\n        helper: t.helper,\n        position: t.position,\n        offset: t.positionAbs\n      };\n    },\n    _addHoverClass: function _addHoverClass() {\n      this._addClass(\"ui-droppable-hover\");\n    },\n    _removeHoverClass: function _removeHoverClass() {\n      this._removeClass(\"ui-droppable-hover\");\n    },\n    _addActiveClass: function _addActiveClass() {\n      this._addClass(\"ui-droppable-active\");\n    },\n    _removeActiveClass: function _removeActiveClass() {\n      this._removeClass(\"ui-droppable-active\");\n    }\n  }), V.ui.intersect = function (t, e, i, s) {\n    if (!e.offset) return !1;\n    var n = (t.positionAbs || t.position.absolute).left + t.margins.left,\n      o = (t.positionAbs || t.position.absolute).top + t.margins.top,\n      a = n + t.helperProportions.width,\n      r = o + t.helperProportions.height,\n      l = e.offset.left,\n      h = e.offset.top,\n      c = l + e.proportions().width,\n      u = h + e.proportions().height;\n    switch (i) {\n      case \"fit\":\n        return l <= n && a <= c && h <= o && r <= u;\n      case \"intersect\":\n        return l < n + t.helperProportions.width / 2 && a - t.helperProportions.width / 2 < c && h < o + t.helperProportions.height / 2 && r - t.helperProportions.height / 2 < u;\n      case \"pointer\":\n        return rt(s.pageY, h, e.proportions().height) && rt(s.pageX, l, e.proportions().width);\n      case \"touch\":\n        return (h <= o && o <= u || h <= r && r <= u || o < h && u < r) && (l <= n && n <= c || l <= a && a <= c || n < l && c < a);\n      default:\n        return !1;\n    }\n  }, V.ui.ddmanager = {\n    current: null,\n    droppables: {\n      \"default\": []\n    },\n    prepareOffsets: function prepareOffsets(t, e) {\n      var i,\n        s,\n        n = V.ui.ddmanager.droppables[t.options.scope] || [],\n        o = e ? e.type : null,\n        a = (t.currentItem || t.element).find(\":data(ui-droppable)\").addBack();\n      t: for (i = 0; i < n.length; i++) if (!(n[i].options.disabled || t && !n[i].accept.call(n[i].element[0], t.currentItem || t.element))) {\n        for (s = 0; s < a.length; s++) if (a[s] === n[i].element[0]) {\n          n[i].proportions().height = 0;\n          continue t;\n        }\n        n[i].visible = \"none\" !== n[i].element.css(\"display\"), n[i].visible && (\"mousedown\" === o && n[i]._activate.call(n[i], e), n[i].offset = n[i].element.offset(), n[i].proportions({\n          width: n[i].element[0].offsetWidth,\n          height: n[i].element[0].offsetHeight\n        }));\n      }\n    },\n    drop: function drop(t, e) {\n      var i = !1;\n      return V.each((V.ui.ddmanager.droppables[t.options.scope] || []).slice(), function () {\n        this.options && (!this.options.disabled && this.visible && V.ui.intersect(t, this, this.options.tolerance, e) && (i = this._drop.call(this, e) || i), !this.options.disabled) && this.visible && this.accept.call(this.element[0], t.currentItem || t.element) && (this.isout = !0, this.isover = !1, this._deactivate.call(this, e));\n      }), i;\n    },\n    dragStart: function dragStart(t, e) {\n      t.element.parentsUntil(\"body\").on(\"scroll.droppable\", function () {\n        t.options.refreshPositions || V.ui.ddmanager.prepareOffsets(t, e);\n      });\n    },\n    drag: function drag(n, o) {\n      n.options.refreshPositions && V.ui.ddmanager.prepareOffsets(n, o), V.each(V.ui.ddmanager.droppables[n.options.scope] || [], function () {\n        var t, e, i, s;\n        this.options.disabled || this.greedyChild || !this.visible || (s = !(s = V.ui.intersect(n, this, this.options.tolerance, o)) && this.isover ? \"isout\" : s && !this.isover ? \"isover\" : null) && (this.options.greedy && (e = this.options.scope, (i = this.element.parents(\":data(ui-droppable)\").filter(function () {\n          return V(this).droppable(\"instance\").options.scope === e;\n        })).length) && ((t = V(i[0]).droppable(\"instance\")).greedyChild = \"isover\" === s), t && \"isover\" === s && (t.isover = !1, t.isout = !0, t._out.call(t, o)), this[s] = !0, this[\"isout\" === s ? \"isover\" : \"isout\"] = !1, this[\"isover\" === s ? \"_over\" : \"_out\"].call(this, o), t) && \"isout\" === s && (t.isout = !1, t.isover = !0, t._over.call(t, o));\n      });\n    },\n    dragStop: function dragStop(t, e) {\n      t.element.parentsUntil(\"body\").off(\"scroll.droppable\"), t.options.refreshPositions || V.ui.ddmanager.prepareOffsets(t, e);\n    }\n  }, !0 === V.uiBackCompat && V.widget(\"ui.droppable\", V.ui.droppable, {\n    options: {\n      hoverClass: !1,\n      activeClass: !1\n    },\n    _addActiveClass: function _addActiveClass() {\n      this._super(), this.options.activeClass && this.element.addClass(this.options.activeClass);\n    },\n    _removeActiveClass: function _removeActiveClass() {\n      this._super(), this.options.activeClass && this.element.removeClass(this.options.activeClass);\n    },\n    _addHoverClass: function _addHoverClass() {\n      this._super(), this.options.hoverClass && this.element.addClass(this.options.hoverClass);\n    },\n    _removeHoverClass: function _removeHoverClass() {\n      this._super(), this.options.hoverClass && this.element.removeClass(this.options.hoverClass);\n    }\n  });\n  V.ui.droppable, V.widget(\"ui.progressbar\", {\n    version: \"1.14.1\",\n    options: {\n      classes: {\n        \"ui-progressbar\": \"ui-corner-all\",\n        \"ui-progressbar-value\": \"ui-corner-left\",\n        \"ui-progressbar-complete\": \"ui-corner-right\"\n      },\n      max: 100,\n      value: 0,\n      change: null,\n      complete: null\n    },\n    min: 0,\n    _create: function _create() {\n      this.oldValue = this.options.value = this._constrainedValue(), this.element.attr({\n        role: \"progressbar\",\n        \"aria-valuemin\": this.min\n      }), this._addClass(\"ui-progressbar\", \"ui-widget ui-widget-content\"), this.valueDiv = V(\"<div>\").appendTo(this.element), this._addClass(this.valueDiv, \"ui-progressbar-value\", \"ui-widget-header\"), this._refreshValue();\n    },\n    _destroy: function _destroy() {\n      this.element.removeAttr(\"role aria-valuemin aria-valuemax aria-valuenow\"), this.valueDiv.remove();\n    },\n    value: function value(t) {\n      if (void 0 === t) return this.options.value;\n      this.options.value = this._constrainedValue(t), this._refreshValue();\n    },\n    _constrainedValue: function _constrainedValue(t) {\n      return void 0 === t && (t = this.options.value), this.indeterminate = !1 === t, \"number\" != typeof t && (t = 0), !this.indeterminate && Math.min(this.options.max, Math.max(this.min, t));\n    },\n    _setOptions: function _setOptions(t) {\n      var e = t.value;\n      delete t.value, this._super(t), this.options.value = this._constrainedValue(e), this._refreshValue();\n    },\n    _setOption: function _setOption(t, e) {\n      \"max\" === t && (e = Math.max(this.min, e)), this._super(t, e);\n    },\n    _setOptionDisabled: function _setOptionDisabled(t) {\n      this._super(t), this.element.attr(\"aria-disabled\", t), this._toggleClass(null, \"ui-state-disabled\", !!t);\n    },\n    _percentage: function _percentage() {\n      return this.indeterminate ? 100 : 100 * (this.options.value - this.min) / (this.options.max - this.min);\n    },\n    _refreshValue: function _refreshValue() {\n      var t = this.options.value,\n        e = this._percentage();\n      this.valueDiv.toggle(this.indeterminate || t > this.min).width(e.toFixed(0) + \"%\"), this._toggleClass(this.valueDiv, \"ui-progressbar-complete\", null, t === this.options.max)._toggleClass(\"ui-progressbar-indeterminate\", null, this.indeterminate), this.indeterminate ? (this.element.removeAttr(\"aria-valuenow\"), this.overlayDiv || (this.overlayDiv = V(\"<div>\").appendTo(this.valueDiv), this._addClass(this.overlayDiv, \"ui-progressbar-overlay\"))) : (this.element.attr({\n        \"aria-valuemax\": this.options.max,\n        \"aria-valuenow\": t\n      }), this.overlayDiv && (this.overlayDiv.remove(), this.overlayDiv = null)), this.oldValue !== t && (this.oldValue = t, this._trigger(\"change\")), t === this.options.max && this._trigger(\"complete\");\n    }\n  }), V.widget(\"ui.selectable\", V.ui.mouse, {\n    version: \"1.14.1\",\n    options: {\n      appendTo: \"body\",\n      autoRefresh: !0,\n      distance: 0,\n      filter: \"*\",\n      tolerance: \"touch\",\n      selected: null,\n      selecting: null,\n      start: null,\n      stop: null,\n      unselected: null,\n      unselecting: null\n    },\n    _create: function _create() {\n      var i = this;\n      this._addClass(\"ui-selectable\"), this.dragged = !1, this.refresh = function () {\n        i.elementPos = V(i.element[0]).offset(), i.selectees = V(i.options.filter, i.element[0]), i._addClass(i.selectees, \"ui-selectee\"), i.selectees.each(function () {\n          var t = V(this),\n            e = t.offset(),\n            e = {\n              left: e.left - i.elementPos.left,\n              top: e.top - i.elementPos.top\n            };\n          V.data(this, \"selectable-item\", {\n            element: this,\n            $element: t,\n            left: e.left,\n            top: e.top,\n            right: e.left + t.outerWidth(),\n            bottom: e.top + t.outerHeight(),\n            startselected: !1,\n            selected: t.hasClass(\"ui-selected\"),\n            selecting: t.hasClass(\"ui-selecting\"),\n            unselecting: t.hasClass(\"ui-unselecting\")\n          });\n        });\n      }, this.refresh(), this._mouseInit(), this.helper = V(\"<div>\"), this._addClass(this.helper, \"ui-selectable-helper\");\n    },\n    _destroy: function _destroy() {\n      this.selectees.removeData(\"selectable-item\"), this._mouseDestroy();\n    },\n    _mouseStart: function _mouseStart(i) {\n      var s = this,\n        t = this.options;\n      this.opos = [i.pageX, i.pageY], this.elementPos = V(this.element[0]).offset(), this.options.disabled || (this.selectees = V(t.filter, this.element[0]), this._trigger(\"start\", i), V(t.appendTo).append(this.helper), this.helper.css({\n        left: i.pageX,\n        top: i.pageY,\n        width: 0,\n        height: 0\n      }), t.autoRefresh && this.refresh(), this.selectees.filter(\".ui-selected\").each(function () {\n        var t = V.data(this, \"selectable-item\");\n        t.startselected = !0, i.metaKey || i.ctrlKey || (s._removeClass(t.$element, \"ui-selected\"), t.selected = !1, s._addClass(t.$element, \"ui-unselecting\"), t.unselecting = !0, s._trigger(\"unselecting\", i, {\n          unselecting: t.element\n        }));\n      }), V(i.target).parents().addBack().each(function () {\n        var t,\n          e = V.data(this, \"selectable-item\");\n        if (e) return t = !i.metaKey && !i.ctrlKey || !e.$element.hasClass(\"ui-selected\"), s._removeClass(e.$element, t ? \"ui-unselecting\" : \"ui-selected\")._addClass(e.$element, t ? \"ui-selecting\" : \"ui-unselecting\"), e.unselecting = !t, e.selecting = t, (e.selected = t) ? s._trigger(\"selecting\", i, {\n          selecting: e.element\n        }) : s._trigger(\"unselecting\", i, {\n          unselecting: e.element\n        }), !1;\n      }));\n    },\n    _mouseDrag: function _mouseDrag(s) {\n      var t, n, o, a, r, l, h;\n      if (this.dragged = !0, !this.options.disabled) return o = (n = this).options, a = this.opos[0], r = this.opos[1], (l = s.pageX) < a && (t = l, l = a, a = t), (h = s.pageY) < r && (t = h, h = r, r = t), this.helper.css({\n        left: a,\n        top: r,\n        width: l - a,\n        height: h - r\n      }), this.selectees.each(function () {\n        var t = V.data(this, \"selectable-item\"),\n          e = !1,\n          i = {};\n        t && t.element !== n.element[0] && (i.left = t.left + n.elementPos.left, i.right = t.right + n.elementPos.left, i.top = t.top + n.elementPos.top, i.bottom = t.bottom + n.elementPos.top, \"touch\" === o.tolerance ? e = !(l < i.left || i.right < a || h < i.top || i.bottom < r) : \"fit\" === o.tolerance && (e = a < i.left && i.right < l && r < i.top && i.bottom < h), e ? (t.selected && (n._removeClass(t.$element, \"ui-selected\"), t.selected = !1), t.unselecting && (n._removeClass(t.$element, \"ui-unselecting\"), t.unselecting = !1), t.selecting || (n._addClass(t.$element, \"ui-selecting\"), t.selecting = !0, n._trigger(\"selecting\", s, {\n          selecting: t.element\n        }))) : (t.selecting && ((s.metaKey || s.ctrlKey) && t.startselected ? (n._removeClass(t.$element, \"ui-selecting\"), t.selecting = !1, n._addClass(t.$element, \"ui-selected\"), t.selected = !0) : (n._removeClass(t.$element, \"ui-selecting\"), t.selecting = !1, t.startselected && (n._addClass(t.$element, \"ui-unselecting\"), t.unselecting = !0), n._trigger(\"unselecting\", s, {\n          unselecting: t.element\n        }))), !t.selected || s.metaKey || s.ctrlKey || t.startselected || (n._removeClass(t.$element, \"ui-selected\"), t.selected = !1, n._addClass(t.$element, \"ui-unselecting\"), t.unselecting = !0, n._trigger(\"unselecting\", s, {\n          unselecting: t.element\n        }))));\n      }), !1;\n    },\n    _mouseStop: function _mouseStop(e) {\n      var i = this;\n      return this.dragged = !1, V(\".ui-unselecting\", this.element[0]).each(function () {\n        var t = V.data(this, \"selectable-item\");\n        i._removeClass(t.$element, \"ui-unselecting\"), t.unselecting = !1, t.startselected = !1, i._trigger(\"unselected\", e, {\n          unselected: t.element\n        });\n      }), V(\".ui-selecting\", this.element[0]).each(function () {\n        var t = V.data(this, \"selectable-item\");\n        i._removeClass(t.$element, \"ui-selecting\")._addClass(t.$element, \"ui-selected\"), t.selecting = !1, t.selected = !0, t.startselected = !0, i._trigger(\"selected\", e, {\n          selected: t.element\n        });\n      }), this._trigger(\"stop\", e), this.helper.remove(), !1;\n    }\n  }), V.widget(\"ui.selectmenu\", [V.ui.formResetMixin, {\n    version: \"1.14.1\",\n    defaultElement: \"<select>\",\n    options: {\n      appendTo: null,\n      classes: {\n        \"ui-selectmenu-button-open\": \"ui-corner-top\",\n        \"ui-selectmenu-button-closed\": \"ui-corner-all\"\n      },\n      disabled: null,\n      icons: {\n        button: \"ui-icon-triangle-1-s\"\n      },\n      position: {\n        my: \"left top\",\n        at: \"left bottom\",\n        collision: \"none\"\n      },\n      width: !1,\n      change: null,\n      close: null,\n      focus: null,\n      open: null,\n      select: null\n    },\n    _create: function _create() {\n      var t = this.element.uniqueId().attr(\"id\");\n      this.ids = {\n        element: t,\n        button: t + \"-button\",\n        menu: t + \"-menu\"\n      }, this._drawButton(), this._drawMenu(), this._bindFormResetHandler(), this._rendered = !1, this.menuItems = V();\n    },\n    _drawButton: function _drawButton() {\n      var t,\n        e = this,\n        i = this._parseOption(this.element.find(\"option:selected\"), this.element[0].selectedIndex);\n      this.labels = this.element.labels().attr(\"for\", this.ids.button), this._on(this.labels, {\n        click: function click(t) {\n          this.button.trigger(\"focus\"), t.preventDefault();\n        }\n      }), this.element.hide(), this.button = V(\"<span>\", {\n        tabindex: this.options.disabled ? -1 : 0,\n        id: this.ids.button,\n        role: \"combobox\",\n        \"aria-expanded\": \"false\",\n        \"aria-autocomplete\": \"list\",\n        \"aria-owns\": this.ids.menu,\n        \"aria-haspopup\": \"true\",\n        title: this.element.attr(\"title\")\n      }).insertAfter(this.element), this._addClass(this.button, \"ui-selectmenu-button ui-selectmenu-button-closed\", \"ui-button ui-widget\"), t = V(\"<span>\").appendTo(this.button), this._addClass(t, \"ui-selectmenu-icon\", \"ui-icon \" + this.options.icons.button), this.buttonItem = this._renderButtonItem(i).appendTo(this.button), !1 !== this.options.width && this._resizeButton(), this._on(this.button, this._buttonEvents), this.button.one(\"focusin\", function () {\n        e._rendered || e._refreshMenu();\n      });\n    },\n    _drawMenu: function _drawMenu() {\n      var i = this;\n      this.menu = V(\"<ul>\", {\n        \"aria-hidden\": \"true\",\n        \"aria-labelledby\": this.ids.button,\n        id: this.ids.menu\n      }), this.menuWrap = V(\"<div>\").append(this.menu), this._addClass(this.menuWrap, \"ui-selectmenu-menu\", \"ui-front\"), this.menuWrap.appendTo(this._appendTo()), this.menuInstance = this.menu.menu({\n        classes: {\n          \"ui-menu\": \"ui-corner-bottom\"\n        },\n        role: \"listbox\",\n        select: function select(t, e) {\n          t.preventDefault(), i._select(e.item.data(\"ui-selectmenu-item\"), t);\n        },\n        focus: function focus(t, e) {\n          e = e.item.data(\"ui-selectmenu-item\");\n          null != i.focusIndex && e.index !== i.focusIndex && (i._trigger(\"focus\", t, {\n            item: e\n          }), i.isOpen || i._select(e, t)), i.focusIndex = e.index, i.button.attr(\"aria-activedescendant\", i.menuItems.eq(e.index).attr(\"id\"));\n        }\n      }).menu(\"instance\"), this.menuInstance._off(this.menu, \"mouseleave\"), this.menuInstance._closeOnDocumentClick = function () {\n        return !1;\n      }, this.menuInstance._isDivider = function () {\n        return !1;\n      };\n    },\n    refresh: function refresh() {\n      this._refreshMenu(), this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(this._getSelectedItem().data(\"ui-selectmenu-item\") || {})), null === this.options.width && this._resizeButton();\n    },\n    _refreshMenu: function _refreshMenu() {\n      var t = this.element.find(\"option\");\n      this.menu.empty(), this._parseOptions(t), this._renderMenu(this.menu, this.items), this.menuInstance.refresh(), this.menuItems = this.menu.find(\"li\").not(\".ui-selectmenu-optgroup\").find(\".ui-menu-item-wrapper\"), this._rendered = !0, t.length && (t = this._getSelectedItem(), this.menuInstance.focus(null, t), this._setAria(t.data(\"ui-selectmenu-item\")), this._setOption(\"disabled\", this.element.prop(\"disabled\")));\n    },\n    open: function open(t) {\n      this.options.disabled || (this._rendered ? (this._removeClass(this.menu.find(\".ui-state-active\"), null, \"ui-state-active\"), this.menuInstance.focus(null, this._getSelectedItem())) : this._refreshMenu(), this.menuItems.length && (this.isOpen = !0, this._toggleAttr(), this._resizeMenu(), this._position(), this._on(this.document, this._documentClick), this._trigger(\"open\", t)));\n    },\n    _position: function _position() {\n      this.menuWrap.position(V.extend({\n        of: this.button\n      }, this.options.position));\n    },\n    close: function close(t) {\n      this.isOpen && (this.isOpen = !1, this._toggleAttr(), this.range = null, this._off(this.document), this._trigger(\"close\", t));\n    },\n    widget: function widget() {\n      return this.button;\n    },\n    menuWidget: function menuWidget() {\n      return this.menu;\n    },\n    _renderButtonItem: function _renderButtonItem(t) {\n      var e = V(\"<span>\");\n      return this._setText(e, t.label), this._addClass(e, \"ui-selectmenu-text\"), e;\n    },\n    _renderMenu: function _renderMenu(s, t) {\n      var n = this,\n        o = \"\";\n      V.each(t, function (t, e) {\n        var i;\n        e.optgroup !== o && (i = V(\"<li>\", {\n          text: e.optgroup\n        }), n._addClass(i, \"ui-selectmenu-optgroup\", \"ui-menu-divider\" + (e.element.parent(\"optgroup\").prop(\"disabled\") ? \" ui-state-disabled\" : \"\")), i.appendTo(s), o = e.optgroup), n._renderItemData(s, e);\n      });\n    },\n    _renderItemData: function _renderItemData(t, e) {\n      return this._renderItem(t, e).data(\"ui-selectmenu-item\", e);\n    },\n    _renderItem: function _renderItem(t, e) {\n      var i = V(\"<li>\"),\n        s = V(\"<div>\", {\n          title: e.element.attr(\"title\")\n        });\n      return e.disabled && this._addClass(i, null, \"ui-state-disabled\"), e.hidden ? i.prop(\"hidden\", !0) : this._setText(s, e.label), i.append(s).appendTo(t);\n    },\n    _setText: function _setText(t, e) {\n      e ? t.text(e) : t.html(\"&#160;\");\n    },\n    _move: function _move(t, e) {\n      var i,\n        s = \".ui-menu-item\";\n      this.isOpen ? i = this.menuItems.eq(this.focusIndex).parent(\"li\") : (i = this.menuItems.eq(this.element[0].selectedIndex).parent(\"li\"), s += \":not(.ui-state-disabled)\"), (i = \"first\" === t || \"last\" === t ? i[\"first\" === t ? \"prevAll\" : \"nextAll\"](s).eq(-1) : i[t + \"All\"](s).eq(0)).length && this.menuInstance.focus(e, i);\n    },\n    _getSelectedItem: function _getSelectedItem() {\n      return this.menuItems.eq(this.element[0].selectedIndex).parent(\"li\");\n    },\n    _toggle: function _toggle(t) {\n      this[this.isOpen ? \"close\" : \"open\"](t);\n    },\n    _setSelection: function _setSelection() {\n      var t;\n      this.range && ((t = window.getSelection()).removeAllRanges(), t.addRange(this.range));\n    },\n    _documentClick: {\n      mousedown: function mousedown(t) {\n        !this.isOpen || V(t.target).closest(\".ui-selectmenu-menu, #\" + CSS.escape(this.ids.button)).length || this.close(t);\n      }\n    },\n    _buttonEvents: {\n      mousedown: function mousedown() {\n        var t = window.getSelection();\n        t.rangeCount && (this.range = t.getRangeAt(0));\n      },\n      click: function click(t) {\n        this._setSelection(), this._toggle(t);\n      },\n      keydown: function keydown(t) {\n        var e = !0;\n        switch (t.keyCode) {\n          case V.ui.keyCode.TAB:\n          case V.ui.keyCode.ESCAPE:\n            this.close(t), e = !1;\n            break;\n          case V.ui.keyCode.ENTER:\n            this.isOpen && this._selectFocusedItem(t);\n            break;\n          case V.ui.keyCode.UP:\n            t.altKey ? this._toggle(t) : this._move(\"prev\", t);\n            break;\n          case V.ui.keyCode.DOWN:\n            t.altKey ? this._toggle(t) : this._move(\"next\", t);\n            break;\n          case V.ui.keyCode.SPACE:\n            this.isOpen ? this._selectFocusedItem(t) : this._toggle(t);\n            break;\n          case V.ui.keyCode.LEFT:\n            this._move(\"prev\", t);\n            break;\n          case V.ui.keyCode.RIGHT:\n            this._move(\"next\", t);\n            break;\n          case V.ui.keyCode.HOME:\n          case V.ui.keyCode.PAGE_UP:\n            this._move(\"first\", t);\n            break;\n          case V.ui.keyCode.END:\n          case V.ui.keyCode.PAGE_DOWN:\n            this._move(\"last\", t);\n            break;\n          default:\n            this.menu.trigger(t), e = !1;\n        }\n        e && t.preventDefault();\n      }\n    },\n    _selectFocusedItem: function _selectFocusedItem(t) {\n      var e = this.menuItems.eq(this.focusIndex).parent(\"li\");\n      e.hasClass(\"ui-state-disabled\") || this._select(e.data(\"ui-selectmenu-item\"), t);\n    },\n    _select: function _select(t, e) {\n      var i = this.element[0].selectedIndex;\n      this.element[0].selectedIndex = t.index, this.buttonItem.replaceWith(this.buttonItem = this._renderButtonItem(t)), this._setAria(t), this._trigger(\"select\", e, {\n        item: t\n      }), t.index !== i && this._trigger(\"change\", e, {\n        item: t\n      }), this.close(e);\n    },\n    _setAria: function _setAria(t) {\n      t = this.menuItems.eq(t.index).attr(\"id\");\n      this.button.attr({\n        \"aria-labelledby\": t,\n        \"aria-activedescendant\": t\n      }), this.menu.attr(\"aria-activedescendant\", t);\n    },\n    _setOption: function _setOption(t, e) {\n      var i;\n      \"icons\" === t && (i = this.button.find(\"span.ui-icon\"), this._removeClass(i, null, this.options.icons.button)._addClass(i, null, e.button)), this._super(t, e), \"appendTo\" === t && this.menuWrap.appendTo(this._appendTo()), \"width\" === t && this._resizeButton();\n    },\n    _setOptionDisabled: function _setOptionDisabled(t) {\n      this._super(t), this.menuInstance.option(\"disabled\", t), this.button.attr(\"aria-disabled\", t), this._toggleClass(this.button, null, \"ui-state-disabled\", t), this.element.prop(\"disabled\", t), t ? (this.button.attr(\"tabindex\", -1), this.close()) : this.button.attr(\"tabindex\", 0);\n    },\n    _appendTo: function _appendTo() {\n      var t = this.options.appendTo;\n      return t = (t = (t = t && (t.jquery || t.nodeType ? V(t) : this.document.find(t).eq(0))) && t[0] ? t : this.element.closest(\".ui-front, dialog\")).length ? t : this.document[0].body;\n    },\n    _toggleAttr: function _toggleAttr() {\n      this.button.attr(\"aria-expanded\", this.isOpen), this._removeClass(this.button, \"ui-selectmenu-button-\" + (this.isOpen ? \"closed\" : \"open\"))._addClass(this.button, \"ui-selectmenu-button-\" + (this.isOpen ? \"open\" : \"closed\"))._toggleClass(this.menuWrap, \"ui-selectmenu-open\", null, this.isOpen), this.menu.attr(\"aria-hidden\", !this.isOpen);\n    },\n    _resizeButton: function _resizeButton() {\n      var t = this.options.width;\n      !1 === t ? this.button.css(\"width\", \"\") : (null === t && (t = this.element.show().outerWidth(), this.element.hide()), this.button.outerWidth(t));\n    },\n    _resizeMenu: function _resizeMenu() {\n      this.menu.outerWidth(Math.max(this.button.outerWidth(), this.menu.width(\"\").outerWidth()));\n    },\n    _getCreateOptions: function _getCreateOptions() {\n      var t = this._super();\n      return t.disabled = this.element.prop(\"disabled\"), t;\n    },\n    _parseOptions: function _parseOptions(t) {\n      var i = this,\n        s = [];\n      t.each(function (t, e) {\n        s.push(i._parseOption(V(e), t));\n      }), this.items = s;\n    },\n    _parseOption: function _parseOption(t, e) {\n      var i = t.parent(\"optgroup\");\n      return {\n        element: t,\n        index: e,\n        value: t.val(),\n        label: t.text(),\n        hidden: i.prop(\"hidden\") || t.prop(\"hidden\"),\n        optgroup: i.attr(\"label\") || \"\",\n        disabled: i.prop(\"disabled\") || t.prop(\"disabled\")\n      };\n    },\n    _destroy: function _destroy() {\n      this._unbindFormResetHandler(), this.menuWrap.remove(), this.button.remove(), this.element.show(), this.element.removeUniqueId(), this.labels.attr(\"for\", this.ids.element);\n    }\n  }]), V.widget(\"ui.slider\", V.ui.mouse, {\n    version: \"1.14.1\",\n    widgetEventPrefix: \"slide\",\n    options: {\n      animate: !1,\n      classes: {\n        \"ui-slider\": \"ui-corner-all\",\n        \"ui-slider-handle\": \"ui-corner-all\",\n        \"ui-slider-range\": \"ui-corner-all ui-widget-header\"\n      },\n      distance: 0,\n      max: 100,\n      min: 0,\n      orientation: \"horizontal\",\n      range: !1,\n      step: 1,\n      value: 0,\n      values: null,\n      change: null,\n      slide: null,\n      start: null,\n      stop: null\n    },\n    numPages: 5,\n    _create: function _create() {\n      this._keySliding = !1, this._mouseSliding = !1, this._animateOff = !0, this._handleIndex = null, this._detectOrientation(), this._mouseInit(), this._calculateNewMax(), this._addClass(\"ui-slider ui-slider-\" + this.orientation, \"ui-widget ui-widget-content\"), this._refresh(), this._animateOff = !1;\n    },\n    _refresh: function _refresh() {\n      this._createRange(), this._createHandles(), this._setupEvents(), this._refreshValue();\n    },\n    _createHandles: function _createHandles() {\n      var t,\n        e = this.options,\n        i = this.element.find(\".ui-slider-handle\"),\n        s = [],\n        n = e.values && e.values.length || 1;\n      for (i.length > n && (i.slice(n).remove(), i = i.slice(0, n)), t = i.length; t < n; t++) s.push(\"<span tabindex='0'></span>\");\n      this.handles = i.add(V(s.join(\"\")).appendTo(this.element)), this._addClass(this.handles, \"ui-slider-handle\", \"ui-state-default\"), this.handle = this.handles.eq(0), this.handles.each(function (t) {\n        V(this).data(\"ui-slider-handle-index\", t).attr(\"tabIndex\", 0);\n      });\n    },\n    _createRange: function _createRange() {\n      var t = this.options;\n      t.range ? (!0 === t.range && (t.values ? t.values.length && 2 !== t.values.length ? t.values = [t.values[0], t.values[0]] : Array.isArray(t.values) && (t.values = t.values.slice(0)) : t.values = [this._valueMin(), this._valueMin()]), this.range && this.range.length ? (this._removeClass(this.range, \"ui-slider-range-min ui-slider-range-max\"), this.range.css({\n        left: \"\",\n        bottom: \"\"\n      })) : (this.range = V(\"<div>\").appendTo(this.element), this._addClass(this.range, \"ui-slider-range\")), \"min\" !== t.range && \"max\" !== t.range || this._addClass(this.range, \"ui-slider-range-\" + t.range)) : (this.range && this.range.remove(), this.range = null);\n    },\n    _setupEvents: function _setupEvents() {\n      this._off(this.handles), this._on(this.handles, this._handleEvents), this._hoverable(this.handles), this._focusable(this.handles);\n    },\n    _destroy: function _destroy() {\n      this.handles.remove(), this.range && this.range.remove(), this._mouseDestroy();\n    },\n    _mouseCapture: function _mouseCapture(t) {\n      var i,\n        s,\n        n,\n        o,\n        e,\n        a,\n        r = this,\n        l = this.options;\n      return !l.disabled && (this.elementSize = {\n        width: this.element.outerWidth(),\n        height: this.element.outerHeight()\n      }, this.elementOffset = this.element.offset(), e = {\n        x: t.pageX,\n        y: t.pageY\n      }, i = this._normValueFromMouse(e), s = this._valueMax() - this._valueMin() + 1, this.handles.each(function (t) {\n        var e = Math.abs(i - r.values(t));\n        (e < s || s === e && (t === r._lastChangedValue || r.values(t) === l.min)) && (s = e, n = V(this), o = t);\n      }), !1 !== this._start(t, o)) && (this._mouseSliding = !0, this._handleIndex = o, this._addClass(n, null, \"ui-state-active\"), n.trigger(\"focus\"), e = n.offset(), a = !V(t.target).parents().addBack().is(\".ui-slider-handle\"), this._clickOffset = a ? {\n        left: 0,\n        top: 0\n      } : {\n        left: t.pageX - e.left - n.width() / 2,\n        top: t.pageY - e.top - n.height() / 2 - (parseInt(n.css(\"borderTopWidth\"), 10) || 0) - (parseInt(n.css(\"borderBottomWidth\"), 10) || 0) + (parseInt(n.css(\"marginTop\"), 10) || 0)\n      }, this.handles.hasClass(\"ui-state-hover\") || this._slide(t, o, i), this._animateOff = !0);\n    },\n    _mouseStart: function _mouseStart() {\n      return !0;\n    },\n    _mouseDrag: function _mouseDrag(t) {\n      var e = {\n          x: t.pageX,\n          y: t.pageY\n        },\n        e = this._normValueFromMouse(e);\n      return this._slide(t, this._handleIndex, e), !1;\n    },\n    _mouseStop: function _mouseStop(t) {\n      return this._removeClass(this.handles, null, \"ui-state-active\"), this._mouseSliding = !1, this._stop(t, this._handleIndex), this._change(t, this._handleIndex), this._handleIndex = null, this._clickOffset = null, this._animateOff = !1;\n    },\n    _detectOrientation: function _detectOrientation() {\n      this.orientation = \"vertical\" === this.options.orientation ? \"vertical\" : \"horizontal\";\n    },\n    _normValueFromMouse: function _normValueFromMouse(t) {\n      var e,\n        t = \"horizontal\" === this.orientation ? (e = this.elementSize.width, t.x - this.elementOffset.left - (this._clickOffset ? this._clickOffset.left : 0)) : (e = this.elementSize.height, t.y - this.elementOffset.top - (this._clickOffset ? this._clickOffset.top : 0)),\n        t = t / e;\n      return (t = 1 < t ? 1 : t) < 0 && (t = 0), \"vertical\" === this.orientation && (t = 1 - t), e = this._valueMax() - this._valueMin(), t = this._valueMin() + t * e, this._trimAlignValue(t);\n    },\n    _uiHash: function _uiHash(t, e, i) {\n      var s = {\n        handle: this.handles[t],\n        handleIndex: t,\n        value: void 0 !== e ? e : this.value()\n      };\n      return this._hasMultipleValues() && (s.value = void 0 !== e ? e : this.values(t), s.values = i || this.values()), s;\n    },\n    _hasMultipleValues: function _hasMultipleValues() {\n      return this.options.values && this.options.values.length;\n    },\n    _start: function _start(t, e) {\n      return this._trigger(\"start\", t, this._uiHash(e));\n    },\n    _slide: function _slide(t, e, i) {\n      var s,\n        n = this.value(),\n        o = this.values();\n      this._hasMultipleValues() && (s = this.values(e ? 0 : 1), n = this.values(e), 2 === this.options.values.length && !0 === this.options.range && (i = 0 === e ? Math.min(s, i) : Math.max(s, i)), o[e] = i), i !== n && !1 !== this._trigger(\"slide\", t, this._uiHash(e, i, o)) && (this._hasMultipleValues() ? this.values(e, i) : this.value(i));\n    },\n    _stop: function _stop(t, e) {\n      this._trigger(\"stop\", t, this._uiHash(e));\n    },\n    _change: function _change(t, e) {\n      this._keySliding || this._mouseSliding || (this._lastChangedValue = e, this._trigger(\"change\", t, this._uiHash(e)));\n    },\n    value: function value(t) {\n      if (!arguments.length) return this._value();\n      this.options.value = this._trimAlignValue(t), this._refreshValue(), this._change(null, 0);\n    },\n    values: function values(t, e) {\n      var i, s, n;\n      if (1 < arguments.length) this.options.values[t] = this._trimAlignValue(e), this._refreshValue(), this._change(null, t);else {\n        if (!arguments.length) return this._values();\n        if (!Array.isArray(t)) return this._hasMultipleValues() ? this._values(t) : this.value();\n        for (i = this.options.values, s = t, n = 0; n < i.length; n += 1) i[n] = this._trimAlignValue(s[n]), this._change(null, n);\n        this._refreshValue();\n      }\n    },\n    _setOption: function _setOption(t, e) {\n      var i,\n        s = 0;\n      switch (\"range\" === t && !0 === this.options.range && (\"min\" === e ? (this.options.value = this._values(0), this.options.values = null) : \"max\" === e && (this.options.value = this._values(this.options.values.length - 1), this.options.values = null)), Array.isArray(this.options.values) && (s = this.options.values.length), this._super(t, e), t) {\n        case \"orientation\":\n          this._detectOrientation(), this._removeClass(\"ui-slider-horizontal ui-slider-vertical\")._addClass(\"ui-slider-\" + this.orientation), this._refreshValue(), this.options.range && this._refreshRange(e), this.handles.css(\"horizontal\" === e ? \"bottom\" : \"left\", \"\");\n          break;\n        case \"value\":\n          this._animateOff = !0, this._refreshValue(), this._change(null, 0), this._animateOff = !1;\n          break;\n        case \"values\":\n          for (this._animateOff = !0, this._refreshValue(), i = s - 1; 0 <= i; i--) this._change(null, i);\n          this._animateOff = !1;\n          break;\n        case \"step\":\n        case \"min\":\n        case \"max\":\n          this._animateOff = !0, this._calculateNewMax(), this._refreshValue(), this._animateOff = !1;\n          break;\n        case \"range\":\n          this._animateOff = !0, this._refresh(), this._animateOff = !1;\n      }\n    },\n    _setOptionDisabled: function _setOptionDisabled(t) {\n      this._super(t), this._toggleClass(null, \"ui-state-disabled\", !!t);\n    },\n    _value: function _value() {\n      var t = this.options.value;\n      return this._trimAlignValue(t);\n    },\n    _values: function _values(t) {\n      var e, i;\n      if (arguments.length) return t = this.options.values[t], this._trimAlignValue(t);\n      if (this._hasMultipleValues()) {\n        for (e = this.options.values.slice(), i = 0; i < e.length; i += 1) e[i] = this._trimAlignValue(e[i]);\n        return e;\n      }\n      return [];\n    },\n    _trimAlignValue: function _trimAlignValue(t) {\n      var e, i;\n      return t <= this._valueMin() ? this._valueMin() : t >= this._valueMax() ? this._valueMax() : (e = 0 < this.options.step ? this.options.step : 1, i = t - (t = (t - this._valueMin()) % e), 2 * Math.abs(t) >= e && (i += 0 < t ? e : -e), parseFloat(i.toFixed(5)));\n    },\n    _calculateNewMax: function _calculateNewMax() {\n      var t = this.options.max,\n        e = this._valueMin(),\n        i = this.options.step;\n      (t = Math.round((t - e) / i) * i + e) > this.options.max && (t -= i), this.max = parseFloat(t.toFixed(this._precision()));\n    },\n    _precision: function _precision() {\n      var t = this._precisionOf(this.options.step);\n      return t = null !== this.options.min ? Math.max(t, this._precisionOf(this.options.min)) : t;\n    },\n    _precisionOf: function _precisionOf(t) {\n      var t = t.toString(),\n        e = t.indexOf(\".\");\n      return -1 === e ? 0 : t.length - e - 1;\n    },\n    _valueMin: function _valueMin() {\n      return this.options.min;\n    },\n    _valueMax: function _valueMax() {\n      return this.max;\n    },\n    _refreshRange: function _refreshRange(t) {\n      \"vertical\" === t && this.range.css({\n        width: \"\",\n        left: \"\"\n      }), \"horizontal\" === t && this.range.css({\n        height: \"\",\n        bottom: \"\"\n      });\n    },\n    _refreshValue: function _refreshValue() {\n      var e,\n        i,\n        t,\n        s,\n        n,\n        o = this.options.range,\n        a = this.options,\n        r = this,\n        l = !this._animateOff && a.animate,\n        h = {};\n      this._hasMultipleValues() ? this.handles.each(function (t) {\n        i = (r.values(t) - r._valueMin()) / (r._valueMax() - r._valueMin()) * 100, h[\"horizontal\" === r.orientation ? \"left\" : \"bottom\"] = i + \"%\", V(this).stop(1, 1)[l ? \"animate\" : \"css\"](h, a.animate), !0 === r.options.range && (\"horizontal\" === r.orientation ? (0 === t && r.range.stop(1, 1)[l ? \"animate\" : \"css\"]({\n          left: i + \"%\"\n        }, a.animate), 1 === t && r.range[l ? \"animate\" : \"css\"]({\n          width: i - e + \"%\"\n        }, {\n          queue: !1,\n          duration: a.animate\n        })) : (0 === t && r.range.stop(1, 1)[l ? \"animate\" : \"css\"]({\n          bottom: i + \"%\"\n        }, a.animate), 1 === t && r.range[l ? \"animate\" : \"css\"]({\n          height: i - e + \"%\"\n        }, {\n          queue: !1,\n          duration: a.animate\n        }))), e = i;\n      }) : (t = this.value(), s = this._valueMin(), n = this._valueMax(), i = n !== s ? (t - s) / (n - s) * 100 : 0, h[\"horizontal\" === this.orientation ? \"left\" : \"bottom\"] = i + \"%\", this.handle.stop(1, 1)[l ? \"animate\" : \"css\"](h, a.animate), \"min\" === o && \"horizontal\" === this.orientation && this.range.stop(1, 1)[l ? \"animate\" : \"css\"]({\n        width: i + \"%\"\n      }, a.animate), \"max\" === o && \"horizontal\" === this.orientation && this.range.stop(1, 1)[l ? \"animate\" : \"css\"]({\n        width: 100 - i + \"%\"\n      }, a.animate), \"min\" === o && \"vertical\" === this.orientation && this.range.stop(1, 1)[l ? \"animate\" : \"css\"]({\n        height: i + \"%\"\n      }, a.animate), \"max\" === o && \"vertical\" === this.orientation && this.range.stop(1, 1)[l ? \"animate\" : \"css\"]({\n        height: 100 - i + \"%\"\n      }, a.animate));\n    },\n    _handleEvents: {\n      keydown: function keydown(t) {\n        var e,\n          i,\n          s,\n          n = V(t.target).data(\"ui-slider-handle-index\");\n        switch (t.keyCode) {\n          case V.ui.keyCode.HOME:\n          case V.ui.keyCode.END:\n          case V.ui.keyCode.PAGE_UP:\n          case V.ui.keyCode.PAGE_DOWN:\n          case V.ui.keyCode.UP:\n          case V.ui.keyCode.RIGHT:\n          case V.ui.keyCode.DOWN:\n          case V.ui.keyCode.LEFT:\n            if (t.preventDefault(), this._keySliding || (this._keySliding = !0, this._addClass(V(t.target), null, \"ui-state-active\"), !1 !== this._start(t, n))) break;\n            return;\n        }\n        switch (s = this.options.step, e = i = this._hasMultipleValues() ? this.values(n) : this.value(), t.keyCode) {\n          case V.ui.keyCode.HOME:\n            i = this._valueMin();\n            break;\n          case V.ui.keyCode.END:\n            i = this._valueMax();\n            break;\n          case V.ui.keyCode.PAGE_UP:\n            i = this._trimAlignValue(e + (this._valueMax() - this._valueMin()) / this.numPages);\n            break;\n          case V.ui.keyCode.PAGE_DOWN:\n            i = this._trimAlignValue(e - (this._valueMax() - this._valueMin()) / this.numPages);\n            break;\n          case V.ui.keyCode.UP:\n          case V.ui.keyCode.RIGHT:\n            if (e === this._valueMax()) return;\n            i = this._trimAlignValue(e + s);\n            break;\n          case V.ui.keyCode.DOWN:\n          case V.ui.keyCode.LEFT:\n            if (e === this._valueMin()) return;\n            i = this._trimAlignValue(e - s);\n        }\n        this._slide(t, n, i);\n      },\n      keyup: function keyup(t) {\n        var e = V(t.target).data(\"ui-slider-handle-index\");\n        this._keySliding && (this._keySliding = !1, this._stop(t, e), this._change(t, e), this._removeClass(V(t.target), null, \"ui-state-active\"));\n      }\n    }\n  }), V.widget(\"ui.sortable\", V.ui.mouse, {\n    version: \"1.14.1\",\n    widgetEventPrefix: \"sort\",\n    ready: !1,\n    options: {\n      appendTo: \"parent\",\n      axis: !1,\n      connectWith: !1,\n      containment: !1,\n      cursor: \"auto\",\n      cursorAt: !1,\n      dropOnEmpty: !0,\n      forcePlaceholderSize: !1,\n      forceHelperSize: !1,\n      grid: !1,\n      handle: !1,\n      helper: \"original\",\n      items: \"> *\",\n      opacity: !1,\n      placeholder: !1,\n      revert: !1,\n      scroll: !0,\n      scrollSensitivity: 20,\n      scrollSpeed: 20,\n      scope: \"default\",\n      tolerance: \"intersect\",\n      zIndex: 1e3,\n      activate: null,\n      beforeStop: null,\n      change: null,\n      deactivate: null,\n      out: null,\n      over: null,\n      receive: null,\n      remove: null,\n      sort: null,\n      start: null,\n      stop: null,\n      update: null\n    },\n    _isOverAxis: function _isOverAxis(t, e, i) {\n      return e <= t && t < e + i;\n    },\n    _isFloating: function _isFloating(t) {\n      return /left|right/.test(t.css(\"float\")) || /inline|table-cell/.test(t.css(\"display\"));\n    },\n    _create: function _create() {\n      this.containerCache = {}, this._addClass(\"ui-sortable\"), this.refresh(), this.offset = this.element.offset(), this._mouseInit(), this._setHandleClassName(), this.ready = !0;\n    },\n    _setOption: function _setOption(t, e) {\n      this._super(t, e), \"handle\" === t && this._setHandleClassName();\n    },\n    _setHandleClassName: function _setHandleClassName() {\n      var t = this;\n      this._removeClass(this.element.find(\".ui-sortable-handle\"), \"ui-sortable-handle\"), V.each(this.items, function () {\n        t._addClass(this.instance.options.handle ? this.item.find(this.instance.options.handle) : this.item, \"ui-sortable-handle\");\n      });\n    },\n    _destroy: function _destroy() {\n      this._mouseDestroy();\n      for (var t = this.items.length - 1; 0 <= t; t--) this.items[t].item.removeData(this.widgetName + \"-item\");\n      return this;\n    },\n    _mouseCapture: function _mouseCapture(t, e) {\n      var i = null,\n        s = !1,\n        n = this;\n      return !(this.reverting || this.options.disabled || \"static\" === this.options.type || (this._refreshItems(t), V(t.target).parents().each(function () {\n        if (V.data(this, n.widgetName + \"-item\") === n) return i = V(this), !1;\n      }), !(i = V.data(t.target, n.widgetName + \"-item\") === n ? V(t.target) : i)) || this.options.handle && !e && (V(this.options.handle, i).find(\"*\").addBack().each(function () {\n        this === t.target && (s = !0);\n      }), !s) || (this.currentItem = i, this._removeCurrentsFromItems(), 0));\n    },\n    _mouseStart: function _mouseStart(t, e, i) {\n      var s,\n        n,\n        o = this.options;\n      if ((this.currentContainer = this).refreshPositions(), this.appendTo = V(\"parent\" !== o.appendTo ? o.appendTo : this.currentItem.parent()), this.helper = this._createHelper(t), this._cacheHelperProportions(), this._cacheMargins(), this.offset = this.currentItem.offset(), this.offset = {\n        top: this.offset.top - this.margins.top,\n        left: this.offset.left - this.margins.left\n      }, V.extend(this.offset, {\n        click: {\n          left: t.pageX - this.offset.left,\n          top: t.pageY - this.offset.top\n        },\n        relative: this._getRelativeOffset()\n      }), this.helper.css(\"position\", \"absolute\"), this.cssPosition = this.helper.css(\"position\"), o.cursorAt && this._adjustOffsetFromHelper(o.cursorAt), this.domPosition = {\n        prev: this.currentItem.prev()[0],\n        parent: this.currentItem.parent()[0]\n      }, this.helper[0] !== this.currentItem[0] && this.currentItem.hide(), this._createPlaceholder(), this.scrollParent = this.placeholder.scrollParent(), V.extend(this.offset, {\n        parent: this._getParentOffset()\n      }), o.containment && this._setContainment(), o.cursor && \"auto\" !== o.cursor && (n = this.document.find(\"body\"), this._storedStylesheet = V(\"<style>*{ cursor: \" + o.cursor + \" !important; }</style>\").appendTo(n)), o.zIndex && (this.helper.css(\"zIndex\") && (this._storedZIndex = this.helper.css(\"zIndex\")), this.helper.css(\"zIndex\", o.zIndex)), o.opacity && (this.helper.css(\"opacity\") && (this._storedOpacity = this.helper.css(\"opacity\")), this.helper.css(\"opacity\", o.opacity)), this.scrollParent[0] !== this.document[0] && \"HTML\" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this._trigger(\"start\", t, this._uiHash()), this._preserveHelperProportions || this._cacheHelperProportions(), !i) for (s = this.containers.length - 1; 0 <= s; s--) this.containers[s]._trigger(\"activate\", t, this._uiHash(this));\n      return V.ui.ddmanager && (V.ui.ddmanager.current = this), V.ui.ddmanager && !o.dropBehaviour && V.ui.ddmanager.prepareOffsets(this, t), this.dragging = !0, this._addClass(this.helper, \"ui-sortable-helper\"), this.helper.parent().is(this.appendTo) || (this.helper.detach().appendTo(this.appendTo), this.offset.parent = this._getParentOffset()), this.position = this.originalPosition = this._generatePosition(t), this.originalPageX = t.pageX, this.originalPageY = t.pageY, this.lastPositionAbs = this.positionAbs = this._convertPositionTo(\"absolute\"), this._mouseDrag(t), !0;\n    },\n    _scroll: function _scroll(t) {\n      var e = this.options,\n        i = !1;\n      return this.scrollParent[0] !== this.document[0] && \"HTML\" !== this.scrollParent[0].tagName ? (this.overflowOffset.top + this.scrollParent[0].offsetHeight - t.pageY < e.scrollSensitivity ? this.scrollParent[0].scrollTop = i = this.scrollParent[0].scrollTop + e.scrollSpeed : t.pageY - this.overflowOffset.top < e.scrollSensitivity && (this.scrollParent[0].scrollTop = i = this.scrollParent[0].scrollTop - e.scrollSpeed), this.overflowOffset.left + this.scrollParent[0].offsetWidth - t.pageX < e.scrollSensitivity ? this.scrollParent[0].scrollLeft = i = this.scrollParent[0].scrollLeft + e.scrollSpeed : t.pageX - this.overflowOffset.left < e.scrollSensitivity && (this.scrollParent[0].scrollLeft = i = this.scrollParent[0].scrollLeft - e.scrollSpeed)) : (t.pageY - this.document.scrollTop() < e.scrollSensitivity ? i = this.document.scrollTop(this.document.scrollTop() - e.scrollSpeed) : this.window.height() - (t.pageY - this.document.scrollTop()) < e.scrollSensitivity && (i = this.document.scrollTop(this.document.scrollTop() + e.scrollSpeed)), t.pageX - this.document.scrollLeft() < e.scrollSensitivity ? i = this.document.scrollLeft(this.document.scrollLeft() - e.scrollSpeed) : this.window.width() - (t.pageX - this.document.scrollLeft()) < e.scrollSensitivity && (i = this.document.scrollLeft(this.document.scrollLeft() + e.scrollSpeed))), i;\n    },\n    _mouseDrag: function _mouseDrag(t) {\n      var e,\n        i,\n        s,\n        n,\n        o = this.options;\n      for (this.position = this._generatePosition(t), this.positionAbs = this._convertPositionTo(\"absolute\"), this.options.axis && \"y\" === this.options.axis || (this.helper[0].style.left = this.position.left + \"px\"), this.options.axis && \"x\" === this.options.axis || (this.helper[0].style.top = this.position.top + \"px\"), o.scroll && !1 !== this._scroll(t) && (this._refreshItemPositions(!0), V.ui.ddmanager) && !o.dropBehaviour && V.ui.ddmanager.prepareOffsets(this, t), this.dragDirection = {\n        vertical: this._getDragVerticalDirection(),\n        horizontal: this._getDragHorizontalDirection()\n      }, e = this.items.length - 1; 0 <= e; e--) if (s = (i = this.items[e]).item[0], (n = this._intersectsWithPointer(i)) && i.instance === this.currentContainer && !(s === this.currentItem[0] || this.placeholder[1 === n ? \"next\" : \"prev\"]()[0] === s || V.contains(this.placeholder[0], s) || \"semi-dynamic\" === this.options.type && V.contains(this.element[0], s))) {\n        if (this.direction = 1 === n ? \"down\" : \"up\", \"pointer\" !== this.options.tolerance && !this._intersectsWithSides(i)) break;\n        this._rearrange(t, i), this._trigger(\"change\", t, this._uiHash());\n        break;\n      }\n      return this._contactContainers(t), V.ui.ddmanager && V.ui.ddmanager.drag(this, t), this._trigger(\"sort\", t, this._uiHash()), this.lastPositionAbs = this.positionAbs, !1;\n    },\n    _mouseStop: function _mouseStop(t, e) {\n      var i, s, n, o;\n      if (t) return V.ui.ddmanager && !this.options.dropBehaviour && V.ui.ddmanager.drop(this, t), this.options.revert ? (s = (i = this).placeholder.offset(), o = {}, (n = this.options.axis) && \"x\" !== n || (o.left = s.left - this.offset.parent.left - this.margins.left + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollLeft)), n && \"y\" !== n || (o.top = s.top - this.offset.parent.top - this.margins.top + (this.offsetParent[0] === this.document[0].body ? 0 : this.offsetParent[0].scrollTop)), this.reverting = !0, V(this.helper).animate(o, parseInt(this.options.revert, 10) || 500, function () {\n        i._clear(t);\n      })) : this._clear(t, e), !1;\n    },\n    cancel: function cancel() {\n      if (this.dragging) {\n        this._mouseUp(new V.Event(\"mouseup\", {\n          target: null\n        })), \"original\" === this.options.helper ? (this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, \"ui-sortable-helper\")) : this.currentItem.show();\n        for (var t = this.containers.length - 1; 0 <= t; t--) this.containers[t]._trigger(\"deactivate\", null, this._uiHash(this)), this.containers[t].containerCache.over && (this.containers[t]._trigger(\"out\", null, this._uiHash(this)), this.containers[t].containerCache.over = 0);\n      }\n      return this.placeholder && (this.placeholder[0].parentNode && this.placeholder[0].parentNode.removeChild(this.placeholder[0]), \"original\" !== this.options.helper && this.helper && this.helper[0].parentNode && this.helper.remove(), V.extend(this, {\n        helper: null,\n        dragging: !1,\n        reverting: !1,\n        _noFinalSort: null\n      }), this.domPosition.prev ? V(this.domPosition.prev).after(this.currentItem) : V(this.domPosition.parent).prepend(this.currentItem)), this;\n    },\n    serialize: function serialize(e) {\n      var t = this._getItemsAsjQuery(e && e.connected),\n        i = [];\n      return e = e || {}, V(t).each(function () {\n        var t = (V(e.item || this).attr(e.attribute || \"id\") || \"\").match(e.expression || /(.+)[\\-=_](.+)/);\n        t && i.push((e.key || t[1] + \"[]\") + \"=\" + (e.key && e.expression ? t[1] : t[2]));\n      }), !i.length && e.key && i.push(e.key + \"=\"), i.join(\"&\");\n    },\n    toArray: function toArray(t) {\n      var e = this._getItemsAsjQuery(t && t.connected),\n        i = [];\n      return t = t || {}, e.each(function () {\n        i.push(V(t.item || this).attr(t.attribute || \"id\") || \"\");\n      }), i;\n    },\n    _intersectsWith: function _intersectsWith(t) {\n      var e = this.positionAbs.left,\n        i = e + this.helperProportions.width,\n        s = this.positionAbs.top,\n        n = s + this.helperProportions.height,\n        o = t.left,\n        a = o + t.width,\n        r = t.top,\n        l = r + t.height,\n        h = this.offset.click.top,\n        c = this.offset.click.left,\n        h = \"x\" === this.options.axis || r < s + h && s + h < l,\n        c = \"y\" === this.options.axis || o < e + c && e + c < a;\n      return \"pointer\" === this.options.tolerance || this.options.forcePointerForContainers || \"pointer\" !== this.options.tolerance && this.helperProportions[this.floating ? \"width\" : \"height\"] > t[this.floating ? \"width\" : \"height\"] ? h && c : o < e + this.helperProportions.width / 2 && i - this.helperProportions.width / 2 < a && r < s + this.helperProportions.height / 2 && n - this.helperProportions.height / 2 < l;\n    },\n    _intersectsWithPointer: function _intersectsWithPointer(t) {\n      var e = \"x\" === this.options.axis || this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top, t.height),\n        t = \"y\" === this.options.axis || this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left, t.width);\n      return !(!e || !t) && (e = this.dragDirection.vertical, t = this.dragDirection.horizontal, this.floating ? \"right\" === t || \"down\" === e ? 2 : 1 : e && (\"down\" === e ? 2 : 1));\n    },\n    _intersectsWithSides: function _intersectsWithSides(t) {\n      var e = this._isOverAxis(this.positionAbs.top + this.offset.click.top, t.top + t.height / 2, t.height),\n        t = this._isOverAxis(this.positionAbs.left + this.offset.click.left, t.left + t.width / 2, t.width),\n        i = this.dragDirection.vertical,\n        s = this.dragDirection.horizontal;\n      return this.floating && s ? \"right\" === s && t || \"left\" === s && !t : i && (\"down\" === i && e || \"up\" === i && !e);\n    },\n    _getDragVerticalDirection: function _getDragVerticalDirection() {\n      var t = this.positionAbs.top - this.lastPositionAbs.top;\n      return 0 != t && (0 < t ? \"down\" : \"up\");\n    },\n    _getDragHorizontalDirection: function _getDragHorizontalDirection() {\n      var t = this.positionAbs.left - this.lastPositionAbs.left;\n      return 0 != t && (0 < t ? \"right\" : \"left\");\n    },\n    refresh: function refresh(t) {\n      return this._refreshItems(t), this._setHandleClassName(), this.refreshPositions(), this;\n    },\n    _connectWith: function _connectWith() {\n      var t = this.options;\n      return t.connectWith.constructor === String ? [t.connectWith] : t.connectWith;\n    },\n    _getItemsAsjQuery: function _getItemsAsjQuery(t) {\n      var e,\n        i,\n        s,\n        n,\n        o = [],\n        a = [],\n        r = this._connectWith();\n      if (r && t) for (e = r.length - 1; 0 <= e; e--) for (i = (s = V(r[e], this.document[0])).length - 1; 0 <= i; i--) (n = V.data(s[i], this.widgetFullName)) && n !== this && !n.options.disabled && a.push([\"function\" == typeof n.options.items ? n.options.items.call(n.element) : V(n.options.items, n.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"), n]);\n      function l() {\n        o.push(this);\n      }\n      for (a.push([\"function\" == typeof this.options.items ? this.options.items.call(this.element, null, {\n        options: this.options,\n        item: this.currentItem\n      }) : V(this.options.items, this.element).not(\".ui-sortable-helper\").not(\".ui-sortable-placeholder\"), this]), e = a.length - 1; 0 <= e; e--) a[e][0].each(l);\n      return V(o);\n    },\n    _removeCurrentsFromItems: function _removeCurrentsFromItems() {\n      var i = this.currentItem.find(\":data(\" + this.widgetName + \"-item)\");\n      this.items = V.grep(this.items, function (t) {\n        for (var e = 0; e < i.length; e++) if (i[e] === t.item[0]) return !1;\n        return !0;\n      });\n    },\n    _refreshItems: function _refreshItems(t) {\n      this.items = [], this.containers = [this];\n      var e,\n        i,\n        s,\n        n,\n        o,\n        a,\n        r,\n        l,\n        h = this.items,\n        c = [[\"function\" == typeof this.options.items ? this.options.items.call(this.element[0], t, {\n          item: this.currentItem\n        }) : V(this.options.items, this.element), this]],\n        u = this._connectWith();\n      if (u && this.ready) for (e = u.length - 1; 0 <= e; e--) for (i = (s = V(u[e], this.document[0])).length - 1; 0 <= i; i--) (n = V.data(s[i], this.widgetFullName)) && n !== this && !n.options.disabled && (c.push([\"function\" == typeof n.options.items ? n.options.items.call(n.element[0], t, {\n        item: this.currentItem\n      }) : V(n.options.items, n.element), n]), this.containers.push(n));\n      for (e = c.length - 1; 0 <= e; e--) for (o = c[e][1], l = (a = c[e][i = 0]).length; i < l; i++) (r = V(a[i])).data(this.widgetName + \"-item\", o), h.push({\n        item: r,\n        instance: o,\n        width: 0,\n        height: 0,\n        left: 0,\n        top: 0\n      });\n    },\n    _refreshItemPositions: function _refreshItemPositions(t) {\n      for (var e, i, s = this.items.length - 1; 0 <= s; s--) e = this.items[s], this.currentContainer && e.instance !== this.currentContainer && e.item[0] !== this.currentItem[0] || (i = this.options.toleranceElement ? V(this.options.toleranceElement, e.item) : e.item, t || (e.width = i.outerWidth(), e.height = i.outerHeight()), i = i.offset(), e.left = i.left, e.top = i.top);\n    },\n    refreshPositions: function refreshPositions(t) {\n      var e, i;\n      if (this.floating = !!this.items.length && (\"x\" === this.options.axis || this._isFloating(this.items[0].item)), this.offsetParent && this.helper && (this.offset.parent = this._getParentOffset()), this._refreshItemPositions(t), this.options.custom && this.options.custom.refreshContainers) this.options.custom.refreshContainers.call(this);else for (e = this.containers.length - 1; 0 <= e; e--) i = this.containers[e].element.offset(), this.containers[e].containerCache.left = i.left, this.containers[e].containerCache.top = i.top, this.containers[e].containerCache.width = this.containers[e].element.outerWidth(), this.containers[e].containerCache.height = this.containers[e].element.outerHeight();\n      return this;\n    },\n    _createPlaceholder: function _createPlaceholder(i) {\n      var s,\n        n,\n        o = (i = i || this).options;\n      o.placeholder && o.placeholder.constructor !== String || (s = o.placeholder, n = i.currentItem[0].nodeName.toLowerCase(), o.placeholder = {\n        element: function element() {\n          var t = V(\"<\" + n + \">\", i.document[0]);\n          return i._addClass(t, \"ui-sortable-placeholder\", s || i.currentItem[0].className)._removeClass(t, \"ui-sortable-helper\"), \"tbody\" === n ? i._createTrPlaceholder(i.currentItem.find(\"tr\").eq(0), V(\"<tr>\", i.document[0]).appendTo(t)) : \"tr\" === n ? i._createTrPlaceholder(i.currentItem, t) : \"img\" === n && t.attr(\"src\", i.currentItem.attr(\"src\")), s || t.css(\"visibility\", \"hidden\"), t;\n        },\n        update: function update(t, e) {\n          s && !o.forcePlaceholderSize || (e.height() && (!o.forcePlaceholderSize || \"tbody\" !== n && \"tr\" !== n) || e.height(i.currentItem.innerHeight() - parseInt(i.currentItem.css(\"paddingTop\") || 0, 10) - parseInt(i.currentItem.css(\"paddingBottom\") || 0, 10)), e.width()) || e.width(i.currentItem.innerWidth() - parseInt(i.currentItem.css(\"paddingLeft\") || 0, 10) - parseInt(i.currentItem.css(\"paddingRight\") || 0, 10));\n        }\n      }), i.placeholder = V(o.placeholder.element.call(i.element, i.currentItem)), i.currentItem.after(i.placeholder), o.placeholder.update(i, i.placeholder);\n    },\n    _createTrPlaceholder: function _createTrPlaceholder(t, e) {\n      var i = this;\n      t.children().each(function () {\n        V(\"<td>&#160;</td>\", i.document[0]).attr(\"colspan\", V(this).attr(\"colspan\") || 1).appendTo(e);\n      });\n    },\n    _contactContainers: function _contactContainers(t) {\n      for (var e, i, s, n, o, a, r, l, h, c = null, u = null, d = this.containers.length - 1; 0 <= d; d--) V.contains(this.currentItem[0], this.containers[d].element[0]) || (this._intersectsWith(this.containers[d].containerCache) ? c && V.contains(this.containers[d].element[0], c.element[0]) || (c = this.containers[d], u = d) : this.containers[d].containerCache.over && (this.containers[d]._trigger(\"out\", t, this._uiHash(this)), this.containers[d].containerCache.over = 0));\n      if (c) if (1 === this.containers.length) this.containers[u].containerCache.over || (this.containers[u]._trigger(\"over\", t, this._uiHash(this)), this.containers[u].containerCache.over = 1);else {\n        for (i = 1e4, s = null, n = (l = c.floating || this._isFloating(this.currentItem)) ? \"left\" : \"top\", o = l ? \"width\" : \"height\", h = l ? \"pageX\" : \"pageY\", e = this.items.length - 1; 0 <= e; e--) V.contains(this.containers[u].element[0], this.items[e].item[0]) && this.items[e].item[0] !== this.currentItem[0] && (a = this.items[e].item.offset()[n], r = !1, t[h] - a > this.items[e][o] / 2 && (r = !0), Math.abs(t[h] - a) < i) && (i = Math.abs(t[h] - a), s = this.items[e], this.direction = r ? \"up\" : \"down\");\n        (s || this.options.dropOnEmpty) && (this.currentContainer === this.containers[u] ? this.currentContainer.containerCache.over || (this.containers[u]._trigger(\"over\", t, this._uiHash()), this.currentContainer.containerCache.over = 1) : (s ? this._rearrange(t, s, null, !0) : this._rearrange(t, null, this.containers[u].element, !0), this._trigger(\"change\", t, this._uiHash()), this.containers[u]._trigger(\"change\", t, this._uiHash(this)), this.currentContainer = this.containers[u], this.options.placeholder.update(this.currentContainer, this.placeholder), this.scrollParent = this.placeholder.scrollParent(), this.scrollParent[0] !== this.document[0] && \"HTML\" !== this.scrollParent[0].tagName && (this.overflowOffset = this.scrollParent.offset()), this.containers[u]._trigger(\"over\", t, this._uiHash(this)), this.containers[u].containerCache.over = 1));\n      }\n    },\n    _createHelper: function _createHelper(t) {\n      var e = this.options,\n        t = \"function\" == typeof e.helper ? V(e.helper.apply(this.element[0], [t, this.currentItem])) : \"clone\" === e.helper ? this.currentItem.clone() : this.currentItem;\n      return t.parents(\"body\").length || this.appendTo[0].appendChild(t[0]), t[0] === this.currentItem[0] && (this._storedCSS = {\n        width: this.currentItem[0].style.width,\n        height: this.currentItem[0].style.height,\n        position: this.currentItem.css(\"position\"),\n        top: this.currentItem.css(\"top\"),\n        left: this.currentItem.css(\"left\")\n      }), t[0].style.width && !e.forceHelperSize || t.width(this.currentItem.width()), t[0].style.height && !e.forceHelperSize || t.height(this.currentItem.height()), t;\n    },\n    _adjustOffsetFromHelper: function _adjustOffsetFromHelper(t) {\n      \"string\" == typeof t && (t = t.split(\" \")), \"left\" in (t = Array.isArray(t) ? {\n        left: +t[0],\n        top: +t[1] || 0\n      } : t) && (this.offset.click.left = t.left + this.margins.left), \"right\" in t && (this.offset.click.left = this.helperProportions.width - t.right + this.margins.left), \"top\" in t && (this.offset.click.top = t.top + this.margins.top), \"bottom\" in t && (this.offset.click.top = this.helperProportions.height - t.bottom + this.margins.top);\n    },\n    _getParentOffset: function _getParentOffset() {\n      this.offsetParent = this.helper.offsetParent();\n      var t = this.offsetParent.offset();\n      return \"absolute\" === this.cssPosition && this.scrollParent[0] !== this.document[0] && V.contains(this.scrollParent[0], this.offsetParent[0]) && (t.left += this.scrollParent.scrollLeft(), t.top += this.scrollParent.scrollTop()), {\n        top: (t = this.offsetParent[0] === this.document[0].body ? {\n          top: 0,\n          left: 0\n        } : t).top + (parseInt(this.offsetParent.css(\"borderTopWidth\"), 10) || 0),\n        left: t.left + (parseInt(this.offsetParent.css(\"borderLeftWidth\"), 10) || 0)\n      };\n    },\n    _getRelativeOffset: function _getRelativeOffset() {\n      var t;\n      return \"relative\" === this.cssPosition ? {\n        top: (t = this.currentItem.position()).top - (parseInt(this.helper.css(\"top\"), 10) || 0) + this.scrollParent.scrollTop(),\n        left: t.left - (parseInt(this.helper.css(\"left\"), 10) || 0) + this.scrollParent.scrollLeft()\n      } : {\n        top: 0,\n        left: 0\n      };\n    },\n    _cacheMargins: function _cacheMargins() {\n      this.margins = {\n        left: parseInt(this.currentItem.css(\"marginLeft\"), 10) || 0,\n        top: parseInt(this.currentItem.css(\"marginTop\"), 10) || 0\n      };\n    },\n    _cacheHelperProportions: function _cacheHelperProportions() {\n      this.helperProportions = {\n        width: this.helper.outerWidth(),\n        height: this.helper.outerHeight()\n      };\n    },\n    _setContainment: function _setContainment() {\n      var t,\n        e,\n        i = this.options;\n      \"parent\" === i.containment && (i.containment = this.helper[0].parentNode), \"document\" !== i.containment && \"window\" !== i.containment || (this.containment = [0 - this.offset.relative.left - this.offset.parent.left, 0 - this.offset.relative.top - this.offset.parent.top, \"document\" === i.containment ? this.document.width() : this.window.width() - this.helperProportions.width - this.margins.left, (\"document\" === i.containment ? this.document.height() || document.body.parentNode.scrollHeight : this.window.height() || this.document[0].body.parentNode.scrollHeight) - this.helperProportions.height - this.margins.top]), /^(document|window|parent)$/.test(i.containment) || (t = V(i.containment)[0], i = V(i.containment).offset(), e = \"hidden\" !== V(t).css(\"overflow\"), this.containment = [i.left + (parseInt(V(t).css(\"borderLeftWidth\"), 10) || 0) + (parseInt(V(t).css(\"paddingLeft\"), 10) || 0) - this.margins.left, i.top + (parseInt(V(t).css(\"borderTopWidth\"), 10) || 0) + (parseInt(V(t).css(\"paddingTop\"), 10) || 0) - this.margins.top, i.left + (e ? Math.max(t.scrollWidth, t.offsetWidth) : t.offsetWidth) - (parseInt(V(t).css(\"borderLeftWidth\"), 10) || 0) - (parseInt(V(t).css(\"paddingRight\"), 10) || 0) - this.helperProportions.width - this.margins.left, i.top + (e ? Math.max(t.scrollHeight, t.offsetHeight) : t.offsetHeight) - (parseInt(V(t).css(\"borderTopWidth\"), 10) || 0) - (parseInt(V(t).css(\"paddingBottom\"), 10) || 0) - this.helperProportions.height - this.margins.top]);\n    },\n    _convertPositionTo: function _convertPositionTo(t, e) {\n      e = e || this.position;\n      var t = \"absolute\" === t ? 1 : -1,\n        i = \"absolute\" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && V.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,\n        s = /(html|body)/i.test(i[0].tagName);\n      return {\n        top: e.top + this.offset.relative.top * t + this.offset.parent.top * t - (\"fixed\" === this.cssPosition ? -this.scrollParent.scrollTop() : s ? 0 : i.scrollTop()) * t,\n        left: e.left + this.offset.relative.left * t + this.offset.parent.left * t - (\"fixed\" === this.cssPosition ? -this.scrollParent.scrollLeft() : s ? 0 : i.scrollLeft()) * t\n      };\n    },\n    _generatePosition: function _generatePosition(t) {\n      var e = this.options,\n        i = t.pageX,\n        s = t.pageY,\n        n = \"absolute\" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && V.contains(this.scrollParent[0], this.offsetParent[0]) ? this.scrollParent : this.offsetParent,\n        o = /(html|body)/i.test(n[0].tagName);\n      return \"relative\" !== this.cssPosition || this.scrollParent[0] !== this.document[0] && this.scrollParent[0] !== this.offsetParent[0] || (this.offset.relative = this._getRelativeOffset()), this.originalPosition && (this.containment && (t.pageX - this.offset.click.left < this.containment[0] && (i = this.containment[0] + this.offset.click.left), t.pageY - this.offset.click.top < this.containment[1] && (s = this.containment[1] + this.offset.click.top), t.pageX - this.offset.click.left > this.containment[2] && (i = this.containment[2] + this.offset.click.left), t.pageY - this.offset.click.top > this.containment[3]) && (s = this.containment[3] + this.offset.click.top), e.grid) && (t = this.originalPageY + Math.round((s - this.originalPageY) / e.grid[1]) * e.grid[1], s = !this.containment || t - this.offset.click.top >= this.containment[1] && t - this.offset.click.top <= this.containment[3] ? t : t - this.offset.click.top >= this.containment[1] ? t - e.grid[1] : t + e.grid[1], t = this.originalPageX + Math.round((i - this.originalPageX) / e.grid[0]) * e.grid[0], i = !this.containment || t - this.offset.click.left >= this.containment[0] && t - this.offset.click.left <= this.containment[2] ? t : t - this.offset.click.left >= this.containment[0] ? t - e.grid[0] : t + e.grid[0]), {\n        top: s - this.offset.click.top - this.offset.relative.top - this.offset.parent.top + (\"fixed\" === this.cssPosition ? -this.scrollParent.scrollTop() : o ? 0 : n.scrollTop()),\n        left: i - this.offset.click.left - this.offset.relative.left - this.offset.parent.left + (\"fixed\" === this.cssPosition ? -this.scrollParent.scrollLeft() : o ? 0 : n.scrollLeft())\n      };\n    },\n    _rearrange: function _rearrange(t, e, i, s) {\n      i ? i[0].appendChild(this.placeholder[0]) : e.item[0].parentNode.insertBefore(this.placeholder[0], \"down\" === this.direction ? e.item[0] : e.item[0].nextSibling), this.counter = this.counter ? ++this.counter : 1;\n      var n = this.counter;\n      this._delay(function () {\n        n === this.counter && this.refreshPositions(!s);\n      });\n    },\n    _clear: function _clear(t, e) {\n      this.reverting = !1;\n      var i,\n        s = [];\n      if (!this._noFinalSort && this.currentItem.parent().length && this.placeholder.before(this.currentItem), this._noFinalSort = null, this.helper[0] === this.currentItem[0]) {\n        for (i in this._storedCSS) \"auto\" !== this._storedCSS[i] && \"static\" !== this._storedCSS[i] || (this._storedCSS[i] = \"\");\n        this.currentItem.css(this._storedCSS), this._removeClass(this.currentItem, \"ui-sortable-helper\");\n      } else this.currentItem.show();\n      function n(e, i, s) {\n        return function (t) {\n          s._trigger(e, t, i._uiHash(i));\n        };\n      }\n      for (this.fromOutside && !e && s.push(function (t) {\n        this._trigger(\"receive\", t, this._uiHash(this.fromOutside));\n      }), !this.fromOutside && this.domPosition.prev === this.currentItem.prev().not(\".ui-sortable-helper\")[0] && this.domPosition.parent === this.currentItem.parent()[0] || e || s.push(function (t) {\n        this._trigger(\"update\", t, this._uiHash());\n      }), this === this.currentContainer || e || (s.push(function (t) {\n        this._trigger(\"remove\", t, this._uiHash());\n      }), s.push(function (e) {\n        return function (t) {\n          e._trigger(\"receive\", t, this._uiHash(this));\n        };\n      }.call(this, this.currentContainer)), s.push(function (e) {\n        return function (t) {\n          e._trigger(\"update\", t, this._uiHash(this));\n        };\n      }.call(this, this.currentContainer))), i = this.containers.length - 1; 0 <= i; i--) e || s.push(n(\"deactivate\", this, this.containers[i])), this.containers[i].containerCache.over && (s.push(n(\"out\", this, this.containers[i])), this.containers[i].containerCache.over = 0);\n      if (this._storedStylesheet && (this._storedStylesheet.remove(), this._storedStylesheet = null), this._storedOpacity && this.helper.css(\"opacity\", this._storedOpacity), this._storedZIndex && this.helper.css(\"zIndex\", \"auto\" === this._storedZIndex ? \"\" : this._storedZIndex), this.dragging = !1, e || this._trigger(\"beforeStop\", t, this._uiHash()), this.placeholder[0].parentNode.removeChild(this.placeholder[0]), this.cancelHelperRemoval || (this.helper[0] !== this.currentItem[0] && this.helper.remove(), this.helper = null), !e) {\n        for (i = 0; i < s.length; i++) s[i].call(this, t);\n        this._trigger(\"stop\", t, this._uiHash());\n      }\n      return this.fromOutside = !1, !this.cancelHelperRemoval;\n    },\n    _trigger: function _trigger() {\n      !1 === V.Widget.prototype._trigger.apply(this, arguments) && this.cancel();\n    },\n    _uiHash: function _uiHash(t) {\n      var e = t || this;\n      return {\n        helper: e.helper,\n        placeholder: e.placeholder || V([]),\n        position: e.position,\n        originalPosition: e.originalPosition,\n        offset: e.positionAbs,\n        item: e.currentItem,\n        sender: t ? t.element : null\n      };\n    }\n  });\n  function O(e) {\n    return function () {\n      var t = this.element.val();\n      e.apply(this, arguments), this._refresh(), t !== this.element.val() && this._trigger(\"change\");\n    };\n  }\n  V.widget(\"ui.spinner\", {\n    version: \"1.14.1\",\n    defaultElement: \"<input>\",\n    widgetEventPrefix: \"spin\",\n    options: {\n      classes: {\n        \"ui-spinner\": \"ui-corner-all\",\n        \"ui-spinner-down\": \"ui-corner-br\",\n        \"ui-spinner-up\": \"ui-corner-tr\"\n      },\n      culture: null,\n      icons: {\n        down: \"ui-icon-triangle-1-s\",\n        up: \"ui-icon-triangle-1-n\"\n      },\n      incremental: !0,\n      max: null,\n      min: null,\n      numberFormat: null,\n      page: 10,\n      step: 1,\n      change: null,\n      spin: null,\n      start: null,\n      stop: null\n    },\n    _create: function _create() {\n      this._setOption(\"max\", this.options.max), this._setOption(\"min\", this.options.min), this._setOption(\"step\", this.options.step), \"\" !== this.value() && this._value(this.element.val(), !0), this._draw(), this._on(this._events), this._refresh(), this._on(this.window, {\n        beforeunload: function beforeunload() {\n          this.element.removeAttr(\"autocomplete\");\n        }\n      });\n    },\n    _getCreateOptions: function _getCreateOptions() {\n      var s = this._super(),\n        n = this.element;\n      return V.each([\"min\", \"max\", \"step\"], function (t, e) {\n        var i = n.attr(e);\n        null != i && i.length && (s[e] = i);\n      }), s;\n    },\n    _events: {\n      keydown: function keydown(t) {\n        this._start(t) && this._keydown(t) && t.preventDefault();\n      },\n      keyup: \"_stop\",\n      focus: function focus() {\n        this.previous = this.element.val();\n      },\n      blur: function blur(t) {\n        this._stop(), this._refresh(), this.previous !== this.element.val() && this._trigger(\"change\", t);\n      },\n      mousewheel: function mousewheel(t, e) {\n        var i = this.document[0].activeElement;\n        if (this.element[0] === i && e) {\n          if (!this.spinning && !this._start(t)) return !1;\n          this._spin((0 < e ? 1 : -1) * this.options.step, t), clearTimeout(this.mousewheelTimer), this.mousewheelTimer = this._delay(function () {\n            this.spinning && this._stop(t);\n          }, 100), t.preventDefault();\n        }\n      },\n      \"mousedown .ui-spinner-button\": function mousedown_UiSpinnerButton(t) {\n        var e;\n        e = this.element[0] === this.document[0].activeElement ? this.previous : this.element.val(), t.preventDefault(), function () {\n          this.element[0] !== this.document[0].activeElement && (this.element.trigger(\"focus\"), this.previous = e);\n        }.call(this), !1 !== this._start(t) && this._repeat(null, V(t.currentTarget).hasClass(\"ui-spinner-up\") ? 1 : -1, t);\n      },\n      \"mouseup .ui-spinner-button\": \"_stop\",\n      \"mouseenter .ui-spinner-button\": function mouseenter_UiSpinnerButton(t) {\n        if (V(t.currentTarget).hasClass(\"ui-state-active\")) return !1 !== this._start(t) && void this._repeat(null, V(t.currentTarget).hasClass(\"ui-spinner-up\") ? 1 : -1, t);\n      },\n      \"mouseleave .ui-spinner-button\": \"_stop\"\n    },\n    _enhance: function _enhance() {\n      this.uiSpinner = this.element.attr(\"autocomplete\", \"off\").wrap(\"<span>\").parent().append(\"<a></a><a></a>\");\n    },\n    _draw: function _draw() {\n      this._enhance(), this._addClass(this.uiSpinner, \"ui-spinner\", \"ui-widget ui-widget-content\"), this._addClass(\"ui-spinner-input\"), this.element.attr(\"role\", \"spinbutton\"), this.buttons = this.uiSpinner.children(\"a\").attr(\"tabIndex\", -1).attr(\"aria-hidden\", !0).button({\n        classes: {\n          \"ui-button\": \"\"\n        }\n      }), this._removeClass(this.buttons, \"ui-corner-all\"), this._addClass(this.buttons.first(), \"ui-spinner-button ui-spinner-up\"), this._addClass(this.buttons.last(), \"ui-spinner-button ui-spinner-down\"), this.buttons.first().button({\n        icon: this.options.icons.up,\n        showLabel: !1\n      }), this.buttons.last().button({\n        icon: this.options.icons.down,\n        showLabel: !1\n      }), this.buttons.height() > Math.ceil(.5 * this.uiSpinner.height()) && 0 < this.uiSpinner.height() && this.uiSpinner.height(this.uiSpinner.height());\n    },\n    _keydown: function _keydown(t) {\n      var e = this.options,\n        i = V.ui.keyCode;\n      switch (t.keyCode) {\n        case i.UP:\n          return this._repeat(null, 1, t), !0;\n        case i.DOWN:\n          return this._repeat(null, -1, t), !0;\n        case i.PAGE_UP:\n          return this._repeat(null, e.page, t), !0;\n        case i.PAGE_DOWN:\n          return this._repeat(null, -e.page, t), !0;\n      }\n      return !1;\n    },\n    _start: function _start(t) {\n      return !(!this.spinning && !1 === this._trigger(\"start\", t)) && (this.counter || (this.counter = 1), this.spinning = !0);\n    },\n    _repeat: function _repeat(t, e, i) {\n      t = t || 500, clearTimeout(this.timer), this.timer = this._delay(function () {\n        this._repeat(40, e, i);\n      }, t), this._spin(e * this.options.step, i);\n    },\n    _spin: function _spin(t, e) {\n      var i = this.value() || 0;\n      this.counter || (this.counter = 1), i = this._adjustValue(i + t * this._increment(this.counter)), this.spinning && !1 === this._trigger(\"spin\", e, {\n        value: i\n      }) || (this._value(i), this.counter++);\n    },\n    _increment: function _increment(t) {\n      var e = this.options.incremental;\n      return e ? \"function\" == typeof e ? e(t) : Math.floor(t * t * t / 5e4 - t * t / 500 + 17 * t / 200 + 1) : 1;\n    },\n    _precision: function _precision() {\n      var t = this._precisionOf(this.options.step);\n      return t = null !== this.options.min ? Math.max(t, this._precisionOf(this.options.min)) : t;\n    },\n    _precisionOf: function _precisionOf(t) {\n      var t = t.toString(),\n        e = t.indexOf(\".\");\n      return -1 === e ? 0 : t.length - e - 1;\n    },\n    _adjustValue: function _adjustValue(t) {\n      var e = this.options,\n        i = null !== e.min ? e.min : 0,\n        s = t - i;\n      return t = i + Math.round(s / e.step) * e.step, t = parseFloat(t.toFixed(this._precision())), null !== e.max && t > e.max ? e.max : null !== e.min && t < e.min ? e.min : t;\n    },\n    _stop: function _stop(t) {\n      this.spinning && (clearTimeout(this.timer), clearTimeout(this.mousewheelTimer), this.counter = 0, this.spinning = !1, this._trigger(\"stop\", t));\n    },\n    _setOption: function _setOption(t, e) {\n      var i;\n      \"culture\" === t || \"numberFormat\" === t ? (i = this._parse(this.element.val()), this.options[t] = e, this.element.val(this._format(i))) : (\"max\" !== t && \"min\" !== t && \"step\" !== t || \"string\" == typeof e && (e = this._parse(e)), \"icons\" === t && (i = this.buttons.first().find(\".ui-icon\"), this._removeClass(i, null, this.options.icons.up), this._addClass(i, null, e.up), i = this.buttons.last().find(\".ui-icon\"), this._removeClass(i, null, this.options.icons.down), this._addClass(i, null, e.down)), this._super(t, e));\n    },\n    _setOptionDisabled: function _setOptionDisabled(t) {\n      this._super(t), this._toggleClass(this.uiSpinner, null, \"ui-state-disabled\", !!t), this.element.prop(\"disabled\", !!t), this.buttons.button(t ? \"disable\" : \"enable\");\n    },\n    _setOptions: O(function (t) {\n      this._super(t);\n    }),\n    _parse: function _parse(t) {\n      return \"\" === (t = \"string\" == typeof t && \"\" !== t ? window.Globalize && this.options.numberFormat ? Globalize.parseFloat(t, 10, this.options.culture) : +t : t) || isNaN(t) ? null : t;\n    },\n    _format: function _format(t) {\n      return \"\" === t ? \"\" : window.Globalize && this.options.numberFormat ? Globalize.format(t, this.options.numberFormat, this.options.culture) : t;\n    },\n    _refresh: function _refresh() {\n      this.element.attr({\n        \"aria-valuemin\": this.options.min,\n        \"aria-valuemax\": this.options.max,\n        \"aria-valuenow\": this._parse(this.element.val())\n      });\n    },\n    isValid: function isValid() {\n      var t = this.value();\n      return null !== t && t === this._adjustValue(t);\n    },\n    _value: function _value(t, e) {\n      var i;\n      \"\" !== t && null !== (i = this._parse(t)) && (e || (i = this._adjustValue(i)), t = this._format(i)), this.element.val(t), this._refresh();\n    },\n    _destroy: function _destroy() {\n      this.element.prop(\"disabled\", !1).removeAttr(\"autocomplete role aria-valuemin aria-valuemax aria-valuenow\"), this.uiSpinner.replaceWith(this.element);\n    },\n    stepUp: O(function (t) {\n      this._stepUp(t);\n    }),\n    _stepUp: function _stepUp(t) {\n      this._start() && (this._spin((t || 1) * this.options.step), this._stop());\n    },\n    stepDown: O(function (t) {\n      this._stepDown(t);\n    }),\n    _stepDown: function _stepDown(t) {\n      this._start() && (this._spin((t || 1) * -this.options.step), this._stop());\n    },\n    pageUp: O(function (t) {\n      this._stepUp((t || 1) * this.options.page);\n    }),\n    pageDown: O(function (t) {\n      this._stepDown((t || 1) * this.options.page);\n    }),\n    value: function value(t) {\n      if (!arguments.length) return this._parse(this.element.val());\n      O(this._value).call(this, t);\n    },\n    widget: function widget() {\n      return this.uiSpinner;\n    }\n  }), !0 === V.uiBackCompat && V.widget(\"ui.spinner\", V.ui.spinner, {\n    _enhance: function _enhance() {\n      this.uiSpinner = this.element.attr(\"autocomplete\", \"off\").wrap(this._uiSpinnerHtml()).parent().append(this._buttonHtml());\n    },\n    _uiSpinnerHtml: function _uiSpinnerHtml() {\n      return \"<span>\";\n    },\n    _buttonHtml: function _buttonHtml() {\n      return \"<a></a><a></a>\";\n    }\n  });\n  var A;\n  V.ui.spinner, V.widget(\"ui.tabs\", {\n    version: \"1.14.1\",\n    delay: 300,\n    options: {\n      active: null,\n      classes: {\n        \"ui-tabs\": \"ui-corner-all\",\n        \"ui-tabs-nav\": \"ui-corner-all\",\n        \"ui-tabs-panel\": \"ui-corner-bottom\",\n        \"ui-tabs-tab\": \"ui-corner-top\"\n      },\n      collapsible: !1,\n      event: \"click\",\n      heightStyle: \"content\",\n      hide: null,\n      show: null,\n      activate: null,\n      beforeActivate: null,\n      beforeLoad: null,\n      load: null\n    },\n    _isLocal: (A = /#.*$/, function (t) {\n      var e = t.href.replace(A, \"\"),\n        i = location.href.replace(A, \"\");\n      try {\n        e = decodeURIComponent(e);\n      } catch (t) {}\n      try {\n        i = decodeURIComponent(i);\n      } catch (t) {}\n      return 1 < t.hash.length && e === i;\n    }),\n    _create: function _create() {\n      var e = this,\n        t = this.options;\n      this.running = !1, this._addClass(\"ui-tabs\", \"ui-widget ui-widget-content\"), this._toggleClass(\"ui-tabs-collapsible\", null, t.collapsible), this._processTabs(), t.active = this._initialActive(), Array.isArray(t.disabled) && (t.disabled = V.uniqueSort(t.disabled.concat(V.map(this.tabs.filter(\".ui-state-disabled\"), function (t) {\n        return e.tabs.index(t);\n      }))).sort()), !1 !== this.options.active && this.anchors.length ? this.active = this._findActive(t.active) : this.active = V(), this._refresh(), this.active.length && this.load(t.active);\n    },\n    _initialActive: function _initialActive() {\n      var i = this.options.active,\n        t = this.options.collapsible,\n        s = decodeURIComponent(location.hash.substring(1));\n      return null === i && (s && this.tabs.each(function (t, e) {\n        if (V(e).attr(\"aria-controls\") === s) return i = t, !1;\n      }), null !== (i = null === i ? this.tabs.index(this.tabs.filter(\".ui-tabs-active\")) : i) && -1 !== i || (i = !!this.tabs.length && 0)), !1 !== i && -1 === (i = this.tabs.index(this.tabs.eq(i))) && (i = !t && 0), i = !t && !1 === i && this.anchors.length ? 0 : i;\n    },\n    _getCreateEventData: function _getCreateEventData() {\n      return {\n        tab: this.active,\n        panel: this.active.length ? this._getPanelForTab(this.active) : V()\n      };\n    },\n    _tabKeydown: function _tabKeydown(t) {\n      var e = V(this.document[0].activeElement).closest(\"li\"),\n        i = this.tabs.index(e),\n        s = !0;\n      if (!this._handlePageNav(t)) {\n        switch (t.keyCode) {\n          case V.ui.keyCode.RIGHT:\n          case V.ui.keyCode.DOWN:\n            i++;\n            break;\n          case V.ui.keyCode.UP:\n          case V.ui.keyCode.LEFT:\n            s = !1, i--;\n            break;\n          case V.ui.keyCode.END:\n            i = this.anchors.length - 1;\n            break;\n          case V.ui.keyCode.HOME:\n            i = 0;\n            break;\n          case V.ui.keyCode.SPACE:\n            return t.preventDefault(), clearTimeout(this.activating), void this._activate(i);\n          case V.ui.keyCode.ENTER:\n            return t.preventDefault(), clearTimeout(this.activating), void this._activate(i !== this.options.active && i);\n          default:\n            return;\n        }\n        t.preventDefault(), clearTimeout(this.activating), i = this._focusNextTab(i, s), t.ctrlKey || t.metaKey || (e.attr(\"aria-selected\", \"false\"), this.tabs.eq(i).attr(\"aria-selected\", \"true\"), this.activating = this._delay(function () {\n          this.option(\"active\", i);\n        }, this.delay));\n      }\n    },\n    _panelKeydown: function _panelKeydown(t) {\n      this._handlePageNav(t) || t.ctrlKey && t.keyCode === V.ui.keyCode.UP && (t.preventDefault(), this.active.trigger(\"focus\"));\n    },\n    _handlePageNav: function _handlePageNav(t) {\n      return t.altKey && t.keyCode === V.ui.keyCode.PAGE_UP ? (this._activate(this._focusNextTab(this.options.active - 1, !1)), !0) : t.altKey && t.keyCode === V.ui.keyCode.PAGE_DOWN ? (this._activate(this._focusNextTab(this.options.active + 1, !0)), !0) : void 0;\n    },\n    _findNextTab: function _findNextTab(t, e) {\n      var i = this.tabs.length - 1;\n      for (; -1 !== V.inArray(t = (t = i < t ? 0 : t) < 0 ? i : t, this.options.disabled);) t = e ? t + 1 : t - 1;\n      return t;\n    },\n    _focusNextTab: function _focusNextTab(t, e) {\n      return t = this._findNextTab(t, e), this.tabs.eq(t).trigger(\"focus\"), t;\n    },\n    _setOption: function _setOption(t, e) {\n      \"active\" === t ? this._activate(e) : (this._super(t, e), \"collapsible\" === t && (this._toggleClass(\"ui-tabs-collapsible\", null, e), e || !1 !== this.options.active || this._activate(0)), \"event\" === t && this._setupEvents(e), \"heightStyle\" === t && this._setupHeightStyle(e));\n    },\n    refresh: function refresh() {\n      var t = this.options,\n        e = this.tablist.children(\":has(a[href])\");\n      t.disabled = V.map(e.filter(\".ui-state-disabled\"), function (t) {\n        return e.index(t);\n      }), this._processTabs(), !1 !== t.active && this.anchors.length ? this.active.length && !V.contains(this.tablist[0], this.active[0]) ? this.tabs.length === t.disabled.length ? (t.active = !1, this.active = V()) : this._activate(this._findNextTab(Math.max(0, t.active - 1), !1)) : t.active = this.tabs.index(this.active) : (t.active = !1, this.active = V()), this._refresh();\n    },\n    _refresh: function _refresh() {\n      this._setOptionDisabled(this.options.disabled), this._setupEvents(this.options.event), this._setupHeightStyle(this.options.heightStyle), this.tabs.not(this.active).attr({\n        \"aria-selected\": \"false\",\n        \"aria-expanded\": \"false\",\n        tabIndex: -1\n      }), this.panels.not(this._getPanelForTab(this.active)).hide().attr({\n        \"aria-hidden\": \"true\"\n      }), this.active.length ? (this.active.attr({\n        \"aria-selected\": \"true\",\n        \"aria-expanded\": \"true\",\n        tabIndex: 0\n      }), this._addClass(this.active, \"ui-tabs-active\", \"ui-state-active\"), this._getPanelForTab(this.active).show().attr({\n        \"aria-hidden\": \"false\"\n      })) : this.tabs.eq(0).attr(\"tabIndex\", 0);\n    },\n    _processTabs: function _processTabs() {\n      var r = this,\n        t = this.tabs,\n        e = this.anchors,\n        i = this.panels;\n      this.tablist = this._getList().attr(\"role\", \"tablist\"), this._addClass(this.tablist, \"ui-tabs-nav\", \"ui-helper-reset ui-helper-clearfix ui-widget-header\"), this.tablist.on(\"mousedown\" + this.eventNamespace, \"> li\", function (t) {\n        V(this).is(\".ui-state-disabled\") && t.preventDefault();\n      }), this.tabs = this.tablist.find(\"> li:has(a[href])\").attr({\n        role: \"tab\",\n        tabIndex: -1\n      }), this._addClass(this.tabs, \"ui-tabs-tab\", \"ui-state-default\"), this.anchors = this.tabs.map(function () {\n        return V(\"a\", this)[0];\n      }).attr({\n        tabIndex: -1\n      }), this._addClass(this.anchors, \"ui-tabs-anchor\"), this.panels = V(), this.anchors.each(function (t, e) {\n        var i,\n          s,\n          n = V(e).uniqueId().attr(\"id\"),\n          o = V(e).closest(\"li\"),\n          a = o.attr(\"aria-controls\");\n        r._isLocal(e) ? (s = decodeURIComponent(e.hash).substring(1), i = r.element.find(\"#\" + CSS.escape(s))) : (s = o.attr(\"aria-controls\") || V({}).uniqueId()[0].id, (i = r.element.find(\"#\" + s)).length || (i = r._createPanel(s)).insertAfter(r.panels[t - 1] || r.tablist), i.attr(\"aria-live\", \"polite\")), i.length && (r.panels = r.panels.add(i)), a && o.data(\"ui-tabs-aria-controls\", a), o.attr({\n          \"aria-controls\": s,\n          \"aria-labelledby\": n\n        }), i.attr(\"aria-labelledby\", n);\n      }), this.panels.attr(\"role\", \"tabpanel\"), this._addClass(this.panels, \"ui-tabs-panel\", \"ui-widget-content\"), t && (this._off(t.not(this.tabs)), this._off(e.not(this.anchors)), this._off(i.not(this.panels)));\n    },\n    _getList: function _getList() {\n      return this.tablist || this.element.find(\"ol, ul\").eq(0);\n    },\n    _createPanel: function _createPanel(t) {\n      return V(\"<div>\").attr(\"id\", t).data(\"ui-tabs-destroy\", !0);\n    },\n    _setOptionDisabled: function _setOptionDisabled(t) {\n      var e, i;\n      for (Array.isArray(t) && (t.length ? t.length === this.anchors.length && (t = !0) : t = !1), i = 0; e = this.tabs[i]; i++) e = V(e), !0 === t || -1 !== V.inArray(i, t) ? (e.attr(\"aria-disabled\", \"true\"), this._addClass(e, null, \"ui-state-disabled\")) : (e.removeAttr(\"aria-disabled\"), this._removeClass(e, null, \"ui-state-disabled\"));\n      this.options.disabled = t, this._toggleClass(this.widget(), this.widgetFullName + \"-disabled\", null, !0 === t);\n    },\n    _setupEvents: function _setupEvents(t) {\n      var i = {};\n      t && V.each(t.split(\" \"), function (t, e) {\n        i[e] = \"_eventHandler\";\n      }), this._off(this.anchors.add(this.tabs).add(this.panels)), this._on(!0, this.anchors, {\n        click: function click(t) {\n          t.preventDefault();\n        }\n      }), this._on(this.anchors, i), this._on(this.tabs, {\n        keydown: \"_tabKeydown\"\n      }), this._on(this.panels, {\n        keydown: \"_panelKeydown\"\n      }), this._focusable(this.tabs), this._hoverable(this.tabs);\n    },\n    _setupHeightStyle: function _setupHeightStyle(t) {\n      var i,\n        e = this.element.parent();\n      \"fill\" === t ? (i = e.height(), i -= this.element.outerHeight() - this.element.height(), this.element.siblings(\":visible\").each(function () {\n        var t = V(this),\n          e = t.css(\"position\");\n        \"absolute\" !== e && \"fixed\" !== e && (i -= t.outerHeight(!0));\n      }), this.element.children().not(this.panels).each(function () {\n        i -= V(this).outerHeight(!0);\n      }), this.panels.each(function () {\n        V(this).height(Math.max(0, i - V(this).innerHeight() + V(this).height()));\n      }).css(\"overflow\", \"auto\")) : \"auto\" === t && (i = 0, this.panels.each(function () {\n        i = Math.max(i, V(this).height(\"\").height());\n      }).height(i));\n    },\n    _eventHandler: function _eventHandler(t) {\n      var e = this.options,\n        i = this.active,\n        s = V(t.currentTarget).closest(\"li\"),\n        n = s[0] === i[0],\n        o = n && e.collapsible,\n        a = o ? V() : this._getPanelForTab(s),\n        r = i.length ? this._getPanelForTab(i) : V(),\n        i = {\n          oldTab: i,\n          oldPanel: r,\n          newTab: o ? V() : s,\n          newPanel: a\n        };\n      t.preventDefault(), s.hasClass(\"ui-state-disabled\") || s.hasClass(\"ui-tabs-loading\") || this.running || n && !e.collapsible || !1 === this._trigger(\"beforeActivate\", t, i) || (e.active = !o && this.tabs.index(s), this.active = n ? V() : s, this.xhr && this.xhr.abort(), r.length || a.length || V.error(\"jQuery UI Tabs: Mismatching fragment identifier.\"), a.length && this.load(this.tabs.index(s), t), this._toggle(t, i));\n    },\n    _toggle: function _toggle(t, e) {\n      var i = this,\n        s = e.newPanel,\n        n = e.oldPanel;\n      function o() {\n        i.running = !1, i._trigger(\"activate\", t, e);\n      }\n      function a() {\n        i._addClass(e.newTab.closest(\"li\"), \"ui-tabs-active\", \"ui-state-active\"), s.length && i.options.show ? i._show(s, i.options.show, o) : (s.show(), o());\n      }\n      this.running = !0, n.length && this.options.hide ? this._hide(n, this.options.hide, function () {\n        i._removeClass(e.oldTab.closest(\"li\"), \"ui-tabs-active\", \"ui-state-active\"), a();\n      }) : (this._removeClass(e.oldTab.closest(\"li\"), \"ui-tabs-active\", \"ui-state-active\"), n.hide(), a()), n.attr(\"aria-hidden\", \"true\"), e.oldTab.attr({\n        \"aria-selected\": \"false\",\n        \"aria-expanded\": \"false\"\n      }), s.length && n.length ? e.oldTab.attr(\"tabIndex\", -1) : s.length && this.tabs.filter(function () {\n        return 0 === V(this).attr(\"tabIndex\");\n      }).attr(\"tabIndex\", -1), s.attr(\"aria-hidden\", \"false\"), e.newTab.attr({\n        \"aria-selected\": \"true\",\n        \"aria-expanded\": \"true\",\n        tabIndex: 0\n      });\n    },\n    _activate: function _activate(t) {\n      var t = this._findActive(t);\n      t[0] !== this.active[0] && (t = (t = t.length ? t : this.active).find(\".ui-tabs-anchor\")[0], this._eventHandler({\n        target: t,\n        currentTarget: t,\n        preventDefault: V.noop\n      }));\n    },\n    _findActive: function _findActive(t) {\n      return !1 === t ? V() : this.tabs.eq(t);\n    },\n    _getIndex: function _getIndex(t) {\n      return t = \"string\" == typeof t ? this.anchors.index(this.anchors.filter(\"[href$='\" + CSS.escape(t) + \"']\")) : t;\n    },\n    _destroy: function _destroy() {\n      this.xhr && this.xhr.abort(), this.tablist.removeAttr(\"role\").off(this.eventNamespace), this.anchors.removeAttr(\"role tabIndex\").removeUniqueId(), this.tabs.add(this.panels).each(function () {\n        V.data(this, \"ui-tabs-destroy\") ? V(this).remove() : V(this).removeAttr(\"role tabIndex aria-live aria-busy aria-selected aria-labelledby aria-hidden aria-expanded\");\n      }), this.tabs.each(function () {\n        var t = V(this),\n          e = t.data(\"ui-tabs-aria-controls\");\n        e ? t.attr(\"aria-controls\", e).removeData(\"ui-tabs-aria-controls\") : t.removeAttr(\"aria-controls\");\n      }), this.panels.show(), \"content\" !== this.options.heightStyle && this.panels.css(\"height\", \"\");\n    },\n    enable: function enable(i) {\n      var t = this.options.disabled;\n      !1 !== t && (t = void 0 !== i && (i = this._getIndex(i), Array.isArray(t) ? V.map(t, function (t) {\n        return t !== i ? t : null;\n      }) : V.map(this.tabs, function (t, e) {\n        return e !== i ? e : null;\n      })), this._setOptionDisabled(t));\n    },\n    disable: function disable(t) {\n      var e = this.options.disabled;\n      if (!0 !== e) {\n        if (void 0 === t) e = !0;else {\n          if (t = this._getIndex(t), -1 !== V.inArray(t, e)) return;\n          e = Array.isArray(e) ? V.merge([t], e).sort() : [t];\n        }\n        this._setOptionDisabled(e);\n      }\n    },\n    load: function load(t, s) {\n      t = this._getIndex(t);\n      function n(t, e) {\n        \"abort\" === e && o.panels.stop(!1, !0), o._removeClass(i, \"ui-tabs-loading\"), a.removeAttr(\"aria-busy\"), t === o.xhr && delete o.xhr;\n      }\n      var o = this,\n        i = this.tabs.eq(t),\n        t = i.find(\".ui-tabs-anchor\"),\n        a = this._getPanelForTab(i),\n        r = {\n          tab: i,\n          panel: a\n        };\n      this._isLocal(t[0]) || (this.xhr = V.ajax(this._ajaxSettings(t, s, r)), \"canceled\" !== this.xhr.statusText && (this._addClass(i, \"ui-tabs-loading\"), a.attr(\"aria-busy\", \"true\"), this.xhr.done(function (t, e, i) {\n        a.html(t), o._trigger(\"load\", s, r), n(i, e);\n      }).fail(function (t, e) {\n        n(t, e);\n      })));\n    },\n    _ajaxSettings: function _ajaxSettings(t, i, s) {\n      var n = this;\n      return {\n        url: t.attr(\"href\"),\n        beforeSend: function beforeSend(t, e) {\n          return n._trigger(\"beforeLoad\", i, V.extend({\n            jqXHR: t,\n            ajaxSettings: e\n          }, s));\n        }\n      };\n    },\n    _getPanelForTab: function _getPanelForTab(t) {\n      t = V(t).attr(\"aria-controls\");\n      return this.element.find(\"#\" + CSS.escape(t));\n    }\n  }), !0 === V.uiBackCompat && V.widget(\"ui.tabs\", V.ui.tabs, {\n    _processTabs: function _processTabs() {\n      this._superApply(arguments), this._addClass(this.tabs, \"ui-tab\");\n    }\n  }), V.ui.tabs, V.widget(\"ui.tooltip\", {\n    version: \"1.14.1\",\n    options: {\n      classes: {\n        \"ui-tooltip\": \"ui-corner-all ui-widget-shadow\"\n      },\n      content: function content() {\n        var t = V(this).attr(\"title\");\n        return V(\"<a>\").text(t).html();\n      },\n      hide: !0,\n      items: \"[title]:not([disabled])\",\n      position: {\n        my: \"left top+15\",\n        at: \"left bottom\",\n        collision: \"flipfit flip\"\n      },\n      show: !0,\n      track: !1,\n      close: null,\n      open: null\n    },\n    _addDescribedBy: function _addDescribedBy(t, e) {\n      var i = (t.attr(\"aria-describedby\") || \"\").split(/\\s+/);\n      i.push(e), t.data(\"ui-tooltip-id\", e).attr(\"aria-describedby\", String.prototype.trim.call(i.join(\" \")));\n    },\n    _removeDescribedBy: function _removeDescribedBy(t) {\n      var e = t.data(\"ui-tooltip-id\"),\n        i = (t.attr(\"aria-describedby\") || \"\").split(/\\s+/),\n        e = V.inArray(e, i);\n      -1 !== e && i.splice(e, 1), t.removeData(\"ui-tooltip-id\"), (i = String.prototype.trim.call(i.join(\" \"))) ? t.attr(\"aria-describedby\", i) : t.removeAttr(\"aria-describedby\");\n    },\n    _create: function _create() {\n      this._on({\n        mouseover: \"open\",\n        focusin: \"open\"\n      }), this.tooltips = {}, this.parents = {}, this.liveRegion = V(\"<div>\").attr({\n        role: \"log\",\n        \"aria-live\": \"assertive\",\n        \"aria-relevant\": \"additions\"\n      }).appendTo(this.document[0].body), this._addClass(this.liveRegion, null, \"ui-helper-hidden-accessible\"), this.disabledTitles = V([]);\n    },\n    _setOption: function _setOption(t, e) {\n      var i = this;\n      this._super(t, e), \"content\" === t && V.each(this.tooltips, function (t, e) {\n        i._updateContent(e.element);\n      });\n    },\n    _setOptionDisabled: function _setOptionDisabled(t) {\n      this[t ? \"_disable\" : \"_enable\"]();\n    },\n    _disable: function _disable() {\n      var s = this;\n      V.each(this.tooltips, function (t, e) {\n        var i = V.Event(\"blur\");\n        i.target = i.currentTarget = e.element[0], s.close(i, !0);\n      }), this.disabledTitles = this.disabledTitles.add(this.element.find(this.options.items).addBack().filter(function () {\n        var t = V(this);\n        if (t.is(\"[title]\")) return t.data(\"ui-tooltip-title\", t.attr(\"title\")).removeAttr(\"title\");\n      }));\n    },\n    _enable: function _enable() {\n      this.disabledTitles.each(function () {\n        var t = V(this);\n        t.data(\"ui-tooltip-title\") && t.attr(\"title\", t.data(\"ui-tooltip-title\"));\n      }), this.disabledTitles = V([]);\n    },\n    open: function open(t) {\n      var i = this,\n        e = V(t ? t.target : this.element).closest(this.options.items);\n      e.length && !e.data(\"ui-tooltip-id\") && (e.attr(\"title\") && e.data(\"ui-tooltip-title\", e.attr(\"title\")), e.data(\"ui-tooltip-open\", !0), t && \"mouseover\" === t.type && e.parents().each(function () {\n        var t,\n          e = V(this);\n        e.data(\"ui-tooltip-open\") && ((t = V.Event(\"blur\")).target = t.currentTarget = this, i.close(t, !0)), e.attr(\"title\") && (e.uniqueId(), i.parents[this.id] = {\n          element: this,\n          title: e.attr(\"title\")\n        }, e.attr(\"title\", \"\"));\n      }), this._registerCloseHandlers(t, e), this._updateContent(e, t));\n    },\n    _updateContent: function _updateContent(e, i) {\n      var t = this.options.content,\n        s = this,\n        n = i ? i.type : null;\n      if (\"string\" == typeof t || t.nodeType || t.jquery) return this._open(i, e, t);\n      (t = t.call(e[0], function (t) {\n        e.data(\"ui-tooltip-open\") && (i && (i.type = n), s._open(i, e, t));\n      })) && this._open(i, e, t);\n    },\n    _open: function _open(t, e, i) {\n      var s,\n        n,\n        o,\n        a = V.extend({}, this.options.position);\n      function r(t) {\n        a.of = t, s.is(\":hidden\") || s.position(a);\n      }\n      i && ((o = this._find(e)) ? o.tooltip.find(\".ui-tooltip-content\").html(i) : (e.is(\"[title]\") && (t && \"mouseover\" === t.type ? e.attr(\"title\", \"\") : e.removeAttr(\"title\")), o = this._tooltip(e), s = o.tooltip, this._addDescribedBy(e, s.attr(\"id\")), s.find(\".ui-tooltip-content\").html(i), this.liveRegion.children().hide(), (o = V(\"<div>\").html(s.find(\".ui-tooltip-content\").html())).removeAttr(\"name\").find(\"[name]\").removeAttr(\"name\"), o.removeAttr(\"id\").find(\"[id]\").removeAttr(\"id\"), o.appendTo(this.liveRegion), this.options.track && t && /^mouse/.test(t.type) ? (this._on(this.document, {\n        mousemove: r\n      }), r(t)) : s.position(V.extend({\n        of: e\n      }, this.options.position)), s.hide(), this._show(s, this.options.show), this.options.track && this.options.show && this.options.show.delay && (n = this.delayedShow = setInterval(function () {\n        s.is(\":visible\") && (r(a.of), clearInterval(n));\n      }, 13)), this._trigger(\"open\", t, {\n        tooltip: s\n      })));\n    },\n    _registerCloseHandlers: function _registerCloseHandlers(t, e) {\n      var i = {\n        keyup: function keyup(t) {\n          t.keyCode === V.ui.keyCode.ESCAPE && ((t = V.Event(t)).currentTarget = e[0], this.close(t, !0));\n        }\n      };\n      e[0] !== this.element[0] && (i.remove = function () {\n        var t = this._find(e);\n        t && this._removeTooltip(t.tooltip);\n      }), t && \"mouseover\" !== t.type || (i.mouseleave = \"close\"), t && \"focusin\" !== t.type || (i.focusout = \"close\"), this._on(!0, e, i);\n    },\n    close: function close(t) {\n      var e,\n        i = this,\n        s = V(t ? t.currentTarget : this.element),\n        n = this._find(s);\n      n ? (e = n.tooltip, n.closing || (clearInterval(this.delayedShow), s.data(\"ui-tooltip-title\") && !s.attr(\"title\") && s.attr(\"title\", s.data(\"ui-tooltip-title\")), this._removeDescribedBy(s), n.hiding = !0, e.stop(!0), this._hide(e, this.options.hide, function () {\n        i._removeTooltip(V(this));\n      }), s.removeData(\"ui-tooltip-open\"), this._off(s, \"mouseleave focusout keyup\"), s[0] !== this.element[0] && this._off(s, \"remove\"), this._off(this.document, \"mousemove\"), t && \"mouseleave\" === t.type && V.each(this.parents, function (t, e) {\n        V(e.element).attr(\"title\", e.title), delete i.parents[t];\n      }), n.closing = !0, this._trigger(\"close\", t, {\n        tooltip: e\n      }), n.hiding) || (n.closing = !1)) : s.removeData(\"ui-tooltip-open\");\n    },\n    _tooltip: function _tooltip(t) {\n      var e = V(\"<div>\").attr(\"role\", \"tooltip\"),\n        i = V(\"<div>\").appendTo(e),\n        s = e.uniqueId().attr(\"id\");\n      return this._addClass(i, \"ui-tooltip-content\"), this._addClass(e, \"ui-tooltip\", \"ui-widget ui-widget-content\"), e.appendTo(this._appendTo(t)), this.tooltips[s] = {\n        element: t,\n        tooltip: e\n      };\n    },\n    _find: function _find(t) {\n      t = t.data(\"ui-tooltip-id\");\n      return t ? this.tooltips[t] : null;\n    },\n    _removeTooltip: function _removeTooltip(t) {\n      clearInterval(this.delayedShow), t.remove(), delete this.tooltips[t.attr(\"id\")];\n    },\n    _appendTo: function _appendTo(t) {\n      t = t.closest(\".ui-front, dialog\");\n      return t = t.length ? t : this.document[0].body;\n    },\n    _destroy: function _destroy() {\n      var s = this;\n      V.each(this.tooltips, function (t, e) {\n        var i = V.Event(\"blur\"),\n          e = e.element;\n        i.target = i.currentTarget = e[0], s.close(i, !0), V(\"#\" + t).remove(), e.data(\"ui-tooltip-title\") && (e.attr(\"title\") || e.attr(\"title\", e.data(\"ui-tooltip-title\")), e.removeData(\"ui-tooltip-title\"));\n      }), this.liveRegion.remove();\n    }\n  }), !0 === V.uiBackCompat && V.widget(\"ui.tooltip\", V.ui.tooltip, {\n    options: {\n      tooltipClass: null\n    },\n    _tooltip: function _tooltip() {\n      var t = this._superApply(arguments);\n      return this.options.tooltipClass && t.tooltip.addClass(this.options.tooltipClass), t;\n    }\n  }), V.ui.tooltip;\n});//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///./assets/js/jquery-ui.min.js\n");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval-source-map devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./assets/js/jquery-ui.min.js");
/******/ 	
/******/ })()
;